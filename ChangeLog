2022-12-29 Richard Frith-Macdonald <rfm@gnu.org>

        * ChangeLog: Update for new release
	* ANNOUNCE:
	* NEWS:
	* Documentation/news.texi: Update of release notes for 0.30.0 by Fred.
	* Version: bump to 0.30.0

2022-02-22 Riccardo Mottola <rm@gnu.org>

	* Tools/xpbs.m (xSelectionNotify:):
	Delete property on begin and at every Notify to start and continue
	transfer of INCR.

2020-04-26  Ivan Vucica  <ivan@vucica.net>

	* ANNOUNCE:
	* NEWS:
	* README:
	Updating documentation for the 0.29.0 release.

2021-03-12 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-styleoffsets:...:): Change NSLog
	statement on guessing the offset into a NSDebugLLog statement.

2021-03-03 Riccardo Mottola <rm@gnu.org>

	* Source/win32/WIN32Server.m:
	actually store in a LONG_PTR the result of GetWindowLongPtr

2021-03-02 Riccardo Mottola <rm@gnu.org>

	* Source/win32/WIN32Server.m
	* Source/win32/w32_create.m
	* Source/win32/w32_general.m
	* Source/win32/w32_movesize.m
	* Source/win32/w32_windowdisplay.m
	* Source/winlib/WIN32GState.m
	* Source/cairo/Win32CairoGlitzSurface.m:
	Consistently use 64bit safe SetWindowLongPtr/GetWindowLongPtr instead
	of a mix with old 32bit versions.

2021-01-27  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (_checkStyle:): do not set application
	name and WindowGroupHint to temporary window. Created window designed
	to help get window frame offsets only - appicon window will be created
	later. This change prevents appicon flickering on WindowMaker at
	application start.
	(_createWMAppiconHack, _setupRootWindow): WindowMaker hack removed in
	favour of solution introduced in _checkStyle:.

2021-01-24  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m: WindowMaker doesn't support
	_NET_REQUEST_FRAME_EXTENTS message andthe only way to determine offsets
	is creating and mapping window.	In this case first mapped window of
	application is not appicon window.
	Early appicon creating inserted back as _createWMAppiconHack method and
	called only if no other way to determine window's offsets (before call to
	_checkStyle);appicon window size is set to size icon;

2021-01-16 Fred Kiefer <FredKiefer@gmx.de>

	* Documentation/news.texi: Fill in some details for pending release.
	* Version: Inclease version number.

2020-09-18  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m
	(_setupRootWindow, window::::): removed WindowMaker appicon hack and
	- now unused - _wmAppIcon variable.

	Description: The removed code removed creates and maps zero-sized
	window in hope that WindowMaker will recognize app by this event and
	create app icon window. Although when application requests window
	for appicon through the `-window::::` method call, it returns newly
	created and mapped window. This actually happens but application icon
	flickers between WM icon creation and application icon window appearance.

	This fix based on the fact that root application window (ROOT) is mapped
	in `-orderwindow:::` and this is the event of application recognition
	by WindowMaker because it is a first application window that is
	mapped.

2020-09-17  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerEvent.m
	(_handleTakeFocusAtom:forContext:): if application (window) receives
	WM_TAKE_FOCUS in hidden state it means WindowMaker wants us to be
	unhidden.

	Description: There are 2 protocols defined in XGServerWindow.h:
	WMFHideApplication and WMFHideOtherApplications. These protocols exist
	to help GNUstep application and WindowMaker notify each other
	about "Hide" and "Hide Others" actions. There are no protocols for
	"unhide" action.

	Test case steps:
	1. Open application with window opened.
	2. Hide application with "Hide" menu item.
	3. Open WindowMaker's "Windows" menu (middle-click on desktop).
	4. Select hidden application window.
	Application unhides, activates, restored window is focused (receives) input
	and "Hide" menu item unselected.

2020-09-16  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m
	(hideApplication:): send application's root window to WindowMaker(WM)
	because it's a "group leader" that clearly identifies application
	inside WM. WM uses XFindContext to get WApplication structure and
	"group leader" window ID is a key to find it.

2020-06-18 Riccardo Mottola <rm@gnu.org>

	* Tools/font_cacher.m:
	If the Library directory is not found, create one for the user.

2020-06-18 Riccardo Mottola <rm@gnu.org>

	* Source/xlib/XGFontManager.m
	Match return value in case of error (nil instead of NO)

	* Headers/xlib/XGPrivate.h
	Fix return value of width to CGFloat

2020-06-10 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/fontconfig/FCFaceInfo.h: Add instancevariable _patternIsResolved.
	* Source/fontconfig/FCFaceInfo.m (-matchedPattern): Cache the
	resolved pattern and return this. The method characterSet now uses
	this cached pattern.
	Patch by Josh Freeman <gnustep_lists@twilightedge.com>

2020-04-25  Ivan Vucica <ivan@vucica.net>

	* Source/GSBackend.m:
	* Source/cairo/GNUmakefile:
	* Source/cairo/CairoContext.m:
	* Source/cairo/WaylandCairoSurface.m:
	* Source/wayland/GNUmakefile:
	* Source/wayland/GNUmakefile.preamble:
	* Source/wayland/WaylandServer.m:
	* Source/wayland/xdg-shell-protocol.c:
        * Source/wayland/README.md:
	* Headers/cairo/WaylandCairoSurface.h:
	* Headers/wayland/WaylandServer.h:
	* Headers/wayland/xdg-shell-client-protocol.h:
	* wayland-regenerate.h:
	* configure:
	* configure.ac:
	Initial merge of the Wayland backend into the master branch.

2020-04-13  Ivan Vucica <ivan@vucica.net>

	* Documentation/announce.texi:
	* ANNOUNCE:
	Normalize the accompanying text for the release announcement across
	core packages: standardize chapter name and GPG information.

2020-04-05  Ivan Vucica  <ivan@vucica.net>

	* ANNOUNCE:
	* NEWS:
	* README:
	Updating documentation for the 0.28.0 release.

2020-03-27 Fred Kiefer <FredKiefer@gmx.de>

	* Documentation/news.texi: Fill in some details for pending release.

2020-03-12  Sergii Stoian  <stoyan255@gmail.com>

	* Source/art/GNUmakefile.preamble,
	* Source/gsc/GNUmakefile.preamble: do not overwrite ADDITIONAL_INCLUDE_DIRS
	value to help RPM build. In spec file ADDITIONAL_INCLUDE_DIRS can be sat
	to subdirectories which are create by RPM build tool.

2020-03-05  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (placewindow::): check window frame
	in OpenStep and Xlib coordinate systems to decide if it was changed.
	Rename `xVal` into more meaninful `xFrame` (holds temporary value of
	window frame in Xlib coordiante system).

2020-03-03  Sergii Stoian  <stoyan255@gmail.com>

	* Headers/x11/XGServer.h,
	* Source/x11/XGServer.m (xScreenSize): new primitive method.

	* Source/x11/XGDragView.m (XY): use new primitive method to get Xlib
	screen height. Fixes broken DnD on vertically aligned monitors.

2020-03-01  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (placewindow::): call XMoveResizeWindow
	even if specified frame is equal current. No events will be send to
	-gui for this case but X11 window position will be refreshed. It fixes
	misplacement of image in slideImage:from:to: (second and all subsequent
	calls).

2020-02-26  Sergii Stoian  <stoyan255@gmail.com>

	* Headers/x11/XGServerWindow.h (_gswindow_device_t): new structure
	memeber was added - `osframe`. This member intended to hold cached frame
	of windows in OpenStep coordinate system. This makes backend more
	reliable to the cases when gui changes NSWindow's _frame ivar before
	call to backend methods which make windows placement.

	* Source/x11/XGServerWindow.m (placewindow::): use `osframe` structure
	member to decide if window change position or size. Removed usage of
	temporary `frame` (used only for making desicion).

2020-02-24  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (placewindow::): use window->xframe
	as current window frame instead of NSWindow's frame because
	`_frame` ivar may be already changed to desired value.

2020-02-21 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-_createAppIconPixmaps): Made
	preconditions of new code explicit.
	* Source/x11/XGServerWindow.m (-orderwindow:::): Set icon pixmap
	only for WindowMaker.

2020-02-20  Sergii Stoian  <stoyan255@gmail.com>

	* Headers/x11/XGServer.h (GSDisplayServer): added new ivar xScreenSize
	to hold Xlib screen size dimensions.

	* Source/x11/XGServerWindow.m:
	(_OSFrameToXFrame:for:): use xScreenSize instead of DisplayHeight.
	(_OSFrameToXHints:for:): ditto.
	(_XFrameToOSFrame:for:): ditto.
	(movewindow::): ditto.
	(_screenSize): new static function to get dimensions of Xlib screen from
	root window.
	(screenList): use xScreenSize instead of DisplayHeight/DisplayWidth.

2020-02-14 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (screenList): Clean up
	implementation again.

2020-02-12  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (screenList): revert back to old code
	logic: if XRandR available but can't get screens info for some reasons,
	return array with one element (Xlib screen).

2020-02-11  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (screenList): Transform screen
	origin into unflipped (OpenStep) coordinate system for XRandR capable
	systems. After this change windows and screen will use the same start
	of coordinate system for their origins.

2020-02-08 Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/GSXftFontInfo.m,
	* Source/xlib/XGFont.m,
	* Source/xlib/XGFontManager.m,
	* Source/xlib/XGFontSetFontInfo.m,
	* Source/xlib/XGGState.m,
	* Source/xlib/XGGeometry.m : Fixes after Xrandr change to get xlib
	backend to compile again.

2020-02-08 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (screenList): Clean up implementation.

2020-02-07  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (_XFrameToOSFrame:for:): use Xlib
	screen height instead of monitor's because we convert coordinates
	from Xlib area.
	(movewindow::): use Xlib screen height because we're operating in
	Xlib coordinate system.
	(screenList): fill monitor depth with value returned by
	windowPathForScreen with monitor at index 0 (screen_id already set so
	method will get correct screen_id).

	* Source/x11/XGServerEvent.m (processEvent:): fixed indentaion.

2020-02-07 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (swapColors): Made code more
	explicit and removed additional copy before calling this function.
	This function should now do what the comment above it says.
	(alphaMaskForImage): Slightly cleaner code.
	* Source/x11/XGServerEvent.m: Prevent compiler warning by moving method.

2020-02-07  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (_OSFrameToXFrame:for:):,
	(_OSFrameToXHints:for:): use Xlib screen height instead of monitor's
	because we convert coordinates to Xlib area.

	* Source/x11/XGServerEvent.m (processEvent:): update monitor_id from
	NSWindow's screen number (it could change after event processing).
	(mouseLocationOnScreen:window:): use Xlib screen height instead of
	monitor's. Added comment to code that should be probably removed
	later.

2020-02-03  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XWindowBuffer.m (windowBufferForWindow:depthInfo:): use
	renamed	XGServer's `screenVisual` and `screenDepth` methods.

	* Source/x11/XIMInputServer.m (initWithDelegate:name:):
	use `+xDisplay` instead	of `xCurrentDisplay`.
	(clientWindowRect:): ditto.

	* Headers/x11/XGServerWindow.h (_gswindow_device_t):
	renamed `screen` to `screen_id`. `monitor_id` element was added -
	this is an index of element in MonitorDevice array.
	* Source/x11/XGServerWindow.m:
	Removed `screen` parameter from methods which contains it in name.
	Methods were renamed to remove `Screen` and `FromScreen`.
	(_OSFrameToXFrame:for:): use `monitor_id` instead of `screen`.
	(_OSFrameToXHints:for:): ditto.
	(_XFrameToOSFrame:for:): ditto.
	(_checkStyle:): use renamed methods and `screen_id` window structure
	element.
	(_rootWindow): renamed from _rootWindowForScreen:, use `defScreen`
	instead of removed parameter `screen`, set window structure element
	`monitor_id` to 0.
	(_createBuffer:): use `screen_id` window structure.
	(window::::): use renamed methods, `defScreen`, `screen_id` and
	`monitor_id` window scructure elements.
	(nativeWindow:::::): ditto.
	(setbackgroundcolor::): ditto.
	(miniwindow:): ditto.
	(_createAppIconPixmaps): removed unused `screen` local variable, use
	renamed `screenRContext` method.
	(orderwindow:::): use `screen_id` window structure element.
	(movewindow::): use `screen_id` window structure element as a parameter
	to `boundsForScreen`.
	(windowbounds:): ditto.
	(windowlist): use renamed `_rootWindow` method.
	(setMouseLocation:onScreen:): user renamed methods.
	(_blankCursor): ditto.
	(imagecursor:::): ditto
	(recolorcursor:::): ditto.
	(screenList): change with assumption that Xlib screen is one per application.
	Failback code to RandR-related always creates arrays with one element (no
	enumeration needed). Create `monitor` structure in failback (non-RandR) code.
	Use `screen_id` MonitorDevice structure element to hold	Xlib screen ID.
	(windowDepthForScreen:): assume that `screen` parameter is a Xlib screen ID,
	simplify code - `screen` will be used with RandR or not.
	(availableDepthsForScreen:): changed with assumption that `screen` is a index
	of element in `monitors` structure.

	* Source/x11/XGServerEvent.m:
	use renamed methods and `screen_id` window structure element.

	* Headers/x11/XGServer.h
	Removed `screen` parameter from methods which contains it in name.
	Methods were renamed to remove `Screen` and `FromScreen`.
	(MonitorDevice): `screen_id` was added.

	* Source/x11/XGServer.m:
	use `screen_id` and rename mathods according to XGServer,h.
	(_initXContext): initialize `monitors` array early here before first
	use (calls to XGServerWindow methods).

	* Source/x11/XGDragView.m (XDPY): use `monitor_id` in `boundForScreen:`
	call.

	* Source/cairo/XGCairoSurface.m: use `xDisplayRootWindow` XGServer's method.

	* Source/art/ARTContext.m (setupDrawInfo:): use `xDisplayRootWindow`
	XGServer's method.


2020-01-31  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (boundsForScreen:): check for number of
	XRandR's ouputs.

2020-01-31  Riccardo Mottola <rm@gnu.org>

	* Source/x11/XGServerWindow.m (boundsForScreen:):
	Check if Xrandr did not succeed and provide fallback.

2020-01-31  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (screenList): join RandR and non-RandR
	code. Failback to Xlib generic method if any no RandR available or
	RandR function call was unsuccessful. In Xlib generic method fill in
	monitors array with values.
	(boundsForScreen:): use values from cached `monitors` array since
	-screenList fills it on both cases with or without RandR available.

2020-01-30  Sergii Stoian  <stoyan255@gmail.com>

	* Headers/x11/XGServer.h: new structure `MonitorDevice` and ivar
	`monitors`for holding cache of monitor's parameters (depth, resolution,
	frame). New ivar `monitorsCount` - holds number of items in `monitors` for
	RandR or X11 screen count otherwise.
	* Source/x11/XGServerWindow.m (screenList): new method for RandR mode -
	enumerates monitors and caches their parameters. Returns array of monitors'
	indices to get access to monitors` items.
	(boundsForScreen:): use cached `frame` parameter of specified monitor.
	Use `monitorsCount` instead of ScreenCount().
	(windowDepthForScreen:): renamed method parameter; append `x_` prefix to
	`Screen *` internal variable; validate `screen` parameter value; use
	`defScreen` for RandR enabled code.
	(availableDepthsForScreen:): ditto.
	(resolutionForScreen:): renamed method parameter; validate `screen`
	parameter value.
	(boundsForScreen:): renamed method parameter.

	* Source/x11/XGServer.m (dealloc): free `monitors` if it was used.

2020-01-26  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (boundsForScreen:): use `screen` variable
	to identify output in RandR screen resources. Use `boundsRect` local
	variable as return vaalue storage. Cleanup.

	* Source/x11/XGServerEvent.m (processEvent:),
	* Source/x11/XGServer.m (_initXContext): catch and process RandR event
	on default screen.

2020-01-24  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (_OSFrameToXFrame:for:): use
	-boundsForScreen: to get correct screen dimensions if RandR is supported.
	(_OSFrameToXHints:for:): ditto.
	(_XFrameToOSFrame:for:): ditto.
	(movewindow::): ditto.
	(windowbounds:): ditto.
	(setMouseLocation:onScreen:): ditto.
	* Source/x11/XGDragView.m: ditto.

	* Source/x11/XGServerEvent.m (processEvent:): destroy NSScreen screens
	list to be regenereated on next call. This change updates ivars of
	NSScreen (_frame, _depth) by recreating NSScreen instances.
	(mouseLocationOnScreen:window:): use -boundsForScreen: to get correct
	screen dimensions if RandR is supported.

2020-01-23  Sergii Stoian  <stoyan255@gmail.com>

	* Headers/x11/XGServer.h (GSDisplayServer): RandR event and error base
	ivars were added.
	* Source/x11/XGServer.m (_initXContext): get RandR event and error base.
	* Source/x11/XGServerWindow.m (boundsForScreen:): if Xrandr support
	enabled get screen dimensions using Xrandr objects.
	* Source/x11/XGServerEvent.m (processEvent:): process Xrandr event and
	send NSApplicationDidChangeScreenParametersNotification.
	* Source/x11/XGServer.m	(_initXContext): subscribe to the Xrandr event.

2020-01-22  Sergii Stoian  <stoyan255@gmail.com>

	* configure.ac: check for availability of Xrandr library.
	* config.h.in: added default value for Xrandr usage.
	* configure: regenerate.

2020-01-17  Sergii Stoian  <stoyan255@gmail.com>

	* Source/art/shfill.m:,
	* Source/art/path.m:,
	* Source/art/image.m (DPSimage:::::::::::):
	fixed type formatting specifiers.

	* Source/art/ftfont.m: removed include to ftfont-old.m.
	(drawString:at::to::::::::color::::transform:deltas:::widthChar:drawinfo:):,
	(drawGlyphs::at::to::::::color::::transform:drawinfo:):,
	(drawGlyphs::at::to::::::alpha::color::::transform:drawinfo:):,
	(bezierpath_funcs):,
	fixed type formatting specifiers; moved interface declaration of FTFontInfo
	to ftfont.h; removed GCCism.

	* Source/art/ftfont.h: moved interface declaration of FTFontInfo here.
	* Source/art/composite.m: fixed type formatting specifiers.
	* Source/art/FTFontEnumerator.m (load_font_configuration): fixed type
	formatting specifiers.

2020-01-16  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerEvent.m (_handleTakeFocusAtom:forContext:): use
	lowerCamelCase for objects and underscores for primitive types;
	do not ignore TakeFocus request if no key window was set
	and main application menu receives request.

2020-01-14  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (alphaMaskForImage): renamed from
	image_mask().
	(swapColors): new function to convert colors from ARGB order into RGBA
	(big-endian systems) or BGRA (little-endian systems).
	(_createAppIconPixmaps): use swapColors() and remove unused code.
	(restrictWindow:toImage:): use alphaMaskForImage().
	(imagecursor:::): use swapColors() and remove unused code.
	(ALPHA_THRESHOLD): removed duplicate of definition.

2020-01-13  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (_createNetIcon:result:size:): fixed
	off-by-one mistake during alpha handling. Enable disabled code and
	remove temprorary one.
	(window::::): set NetWM icon to window for all EWMH capable WMs even
	it's WindowMaker.
	(image_mask): new function to create alpha mask for image. It's based
	on xgps_cursor_mask() code with additional argument `alpha_treshold`.
	This function may be used for images (alpha_treshold == 0) with real
	alpha mask and for cursors (if no Xcursor library is used - no alpha
	is used, no shadows in cursors, alpha_treshold == 158 is used to cut
	transparent pixels).
	(_createAppIconPixmaps): icon pixmap creation rewritten to support
	images with alpha channel using wraster functions. Use image_mask().
	(restrictWindow:toImage:): use image_mask() instead of
	xgps_cursor_mask().
	(xgps_cursor_mask): removed as image_mask() replaced it.
	Guard xgps_cursor_image( with #if - will not be compiled if Xcursor
	is used.
	(imagecursor:::): use image_mask() instead of xgps_cursor_mask().

2019-12-24 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoFontInfo.m: Revert to the old defaults for
	hinting and allow for all possible values to be set.

2019-05-19 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoFontInfo.m,
	* Source/fontconfig/FCFontEnumerator.m: Small cleanup of last pull
	request.

2019-05-19 Fred Kiefer <FredKiefer@gmx.de>

	* .gitignore: Add copied files as they should never be commited.
	* Headers/fontconfig/FCFaceInfo.h: Add method displaName.
	* Source/art/FTFontEnumerator.m: Retain the display name.
	* Source/fontconfig/FCFaceInfo.m,
	* Source/fontconfig/FCFontInfo.m,
	* Source/art/ftfont.m: Implement the method displayName.
	* Source/cairo/CairoFontInfo.m: Enable font hinting and use
	subpixel antialias if the variable back-art-subpixel-text is set.
	* Source/fontconfig/FCFontEnumerator.m: Better handling of font
	names, weight and the order of fonts.
	Merged huge pull request by Jeff Teunissen <deek@d2dc.net>

2019-04-20  Sergii Stoian  <stoyan255@ukr.net>

	* Source/x11/XGServerWindow.m (standardcursor::): Getting of
	XC_fleur as GSCloseHandCursor was removed because it loads in
	NSCursor as image.

2019-04-18  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (standardcursor::): revert resizing
	cursor names to the old values upon request of project owner.

2019-04-17  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m (getStandardBitmap): send `bitmapFormat`
	to _convertToFormatBitsPerSample::::::::. Fixes display of colored
	mouse cursor images.
	(standardcursor::): cleanup in Xlib cursors handling. Additional
	cursor types were added: GSClosedHandCursor, GSOpenHandCursor.
	Removed GSDisappearingItemCursor type handling - it loads in NSCursor
	from image.

2019-04-12  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerEvent.m (mouseOptionsChanged:): change double-click
	minimum value to 200 and default to 300.

2019-04-11  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerEvent.m (processEvent:): do not send event if
	disabled menu mouse button was released.

2019-04-11  Sergii Stoian  <stoyan255@ukr.net>

	* Source/x11/XGServerEvent.m (initializeMouse): new method. Calls
	-mouseOptionsChanged: and setups observer for defaults changes.
	(mouseOptionsChanged:): new method. Read mouse properties from user
	defaults.
	(processEvent:): respect mouse options on ButtonPress and
	ButtonRelease events.

	* Source/x11/XGServer.m (dealloc): remove notification observer.

2019-04-06  Sergii Stoian  <stoyan255@ukr.net>

	* Source/x11/XGServerWindow.m (hideApplication:): new method name for
	`hidewindow`.

2019-04-05  Sergii Stoian  <stoyan255@gmail.com>

	* Headers/x11/XGServerWindow.h (GSMaxWMProtocols): increased number to support
	WMFHideApplication.
	* Headers/x11/XGGeneric.h: Atoms _WINDOWMAKER_WM_FUNCTION, _GNUSTEP_WM_HIDE_APP
	were added.

	* Source/x11/XGServerWindow.m (_setSupportedWMProtocols:): added
	_GNUSTEP_WM_HIDE_APP protocol suport to the window protocols.
	(hidewindow:): implementation of GSDisplayServer method.
	* Source/x11/XGServerEvent.m (processEvent:): process _GNUSTEP_WM_HIDE_APP
	client message.

2019-04-04  Sergii Stoian  <stoyan255@ukr.net>

	* Source/x11/XGServerEvent.m (processEvent:):
	Send double-click on appicon to the WindowMaker.

2019-04-02  Sergii Stoian  <stoyan255@gmail.com>

	* Source/x11/XGServerWindow.m:
	(orderwindow:::) Map application icon window without focus flickering
	for applications executed with argument `-autolaunch YES` in WindowMaker
	environment.

2019-03-26 Sergii Stoian <stoyan255@gmail.com>
	* Source/x11/XGServerWindow.m:
	(setwindowlevel::) Set `Utility` window type for NSFloatingWindowLevel.

2019-01-04 Fred Kiefer <FredKiefer@gmx.de>

	* Documentation/news.texi: Fill in some details for pending release.

2019-01-04 Fred Kiefer <FredKiefer@gmx.de>

	* Source/opal/OpalGState.m: Add colour handling for all the
	different colour spaces.

2018-12-31 Pavel Shlyak <pvshlyak@edu.hse.ru>

	* Source/x11/convert.c: Don't leak memory on error handling

2018-12-02 Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSGState.m (-setColor:state:): Don't copy values onto themselves.

2018-09-16  Fred Kiefer <FredKiefer@gmx.de>

	* Source/opal/OpalContext.m (-initWithGraphicsPort:flipped:): Implement.
	* Source/opal/OpalContext.m (-GSSetDevice:::): Get height from
	surface if no y value is given.
	* Source/opal/OpalSurface.m: Rewrite to handle the case where
	device is not set.

2018-07-16  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (_setupRootWindow): Make sure the
	root name variable is null terminated.

2018-06-20  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m: Check for bytes_after_ret in
	PropGetCheckProperty. Attempt to improve the window border detection.
	Based on idea by Tom MacSween <Tom.MacSween@crins-sinrc.ca>

2018-05-01  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/x11/XGGeneric.h: Move all atoms in XGGeneric data structure.
	* Source/x11/XGServerEvent.m,
	* Source/x11/XGServerWindow.m: Use atoms from XGGeneric.
	* Headers/x11/XGServer.h,
	* Source/x11/XGServerEvent.m (-windowManagerName): New method to
	get the name of the window manager.

2018-03-03 Riccardo Mottola <rm@gnu.org>

	* configure.ac
	* configure
	Be consistent in prepending flags to existing LDFLAGS and CPPLFLAGS.

2018-02-25  Yavor Doganov  <yavor@gnu.org>

	* Tools/font_cacher.1: New file.
	* Tools/GNUmakefile: Build font_cacher only if WITH_XFT=no.
	Install the manpage conditionally.
	* configure.ac: Add deprecation warning for art/xlib/xdps.
	* configure: Regenerate.

2018-02-09  Yavor Doganov  <yavor@gnu.org>

	* Source/x11/XGServer.m (_initXContext): Call XInitThreads to
	enable drawing in secondary threads.

2018-02-05  Yavor Doganov  <yavor@gnu.org>

	* Headers/xlib/GSXftFontInfo.h (GSXftFontInfo): Inherit from
	the FCFontInfo class.
	(GSXftFaceInfo, GSXftFontEnumerator): New classes inheriting from
	FCFaceInfo and FCFontEnumerator.
	* Source/xlib/GSXftFontInfo.m: Assume fontconfig is available;
	remove HAVE_FC define and !HAVE_FC code.
	(allFonts): Remove.
	(FcFont, FcFontEnumerator): Remove implementations.
	(GSXftFontEnumerator): Override +faceInfoClass and +fontWithName:.
	(Ones, coveredCharacterSet): Remove, not needed anymore.
	(advancementForGlyph:): Add support for glyph caching.
	(setupAttributes): Obtain pattern from the GSXftFaceInfo
	instance.  Remove unnecessary code for setting ivars already set
	by the superclass.  Set lineHeight to capHeight.
	* Source/xlib/XGContext.m (initializeBackend) [HAVE_XFT]: Remove
	HAVE_FC conditional.  Set fontEnumerator to GSXftFontEnumerator.
	* Source/xlib/GNUmakefile (xlib_OBJC_FILES): Add fontconfig files
	in the WITH_XFT conditional.

2018-01-21  Yavor Doganov  <yavor@gnu.org>

	* configure.ac: Add FREETYPE_LIBS to LIBS when building xlib.
	* configure: Regenerate

2018-01-20  Yavor Doganov  <yavor@gnu.org>

	* configure.ac: Detect freetype with PKG_CHECK_MODULES.
	* configure: Regenerate.

2018-01-03  Yavor Doganov  <yavor@gnu.org>

	* pkg.m4: Update to serial 12.
	* configure.ac: Use PKG_PROG_PKG_CONFIG to detect pkg-config.
	Remove all PKG_* shell variables.
	* configure: Regenerate.

2018-01-01  Ivan Vucica <ivan@vucica.net>

	* ANNOUNCE
	* Documentation/news.texi
	* NEWS
	* README
	* Version:
	Releasing 0.26.2 to coincide with the -gui release.

2017-12-21  Ivan Vucica <ivan@vucica.net>

	* ANNOUNCE
	* Documentation/news.texi
	* README
	* Version
	* NEWS:
	Releasing 0.26.1 to coincide with the -gui release.

2017-12-10  Ivan Vucica <ivan@vucica.net>

	* ANNOUNCE
	* Documentation/news.texi
	* README:
	Added release notes to news.texi and regenerated the rest for
	0.26.0 release.

2017-10-01  Ivan Vucica <ivan@vucica.net>

	* Documentation/news.texi:
	Add stub 0.26.0 entry.

	* Version:
	Bump to 0.26.0.

2017-07-17  Daniel Ferreira <dtf@stanford.edu>

	* Source/opal/GNUmakefile: add OpalBridge.m to project.
	* Source/opal/OpalBridge.m:
	Implement a bridge between NSColor and CGColorRef and a stub for a
	bridge between NSImage and CGImageRef. This improves compatibility with
	Quartz.

2017-07-17  Daniel Ferreira <dtf@stanford.edu>

	* Headers/opal/OpalSurface.h
	* Source/opal/OpalContext.m
	* Source/opal/OpalSurface.m:
	In Quartz, the "graphics port" bound to an NSGraphicsContext (subclassed
	by OpalContext) is a CGContext. We currently initialize one in
	OpalSurface if it does not exist, however we do not allow the client to
	initialize a graphics context with a custom graphics port, which should
	be allowed. We have enabled this feature.

2017-07-31  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-DPSshow:): Get DPSshow: to work on
	scaled windows.

2017-04-16  Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSGState.m
	* Source/x11/XGDragView.m
	* Source/x11/XGServerWindow.m
	* Source/x11/XWindowBuffer.m
	Fix some clang static analyser warnings reported by
	Sebastian Reitenbach <sebastia@l00-bugdead-prods.de>.

2017-04-04  Ivan Vucica <ivan@vucica.net>

	* Releasing 0.25.1.

2017-01-17  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/x11/XGGeneric.h: Remove obsolte atom.
	* Source/x11/XGServerWindow.m: Clean up code.
	* Source/x11/XGServerWindow.m (-setwindowlevel::): Try to set
	better level for tool tip windows.

2017-01-08  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-_checkStyle:): Ignore invalid
	border information.

2016-08-02  Fred Kiefer <FredKiefer@gmx.de>

	* Source/opal/OpalFontInfo.m
	Correct the calculation of line height.
	* Source/opal/OpalGState.m
	Adjust font placement to changed height.
	* Source/opal/OpalSurface.m
	Better debug output.

2016-07-15  Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSStreamContext.m:
	Output the Postscript font name.

2016-06-16  Ivan Vucica <ivan@vucica.net>

        * ANNOUNCE:
        * NEWS:
        * README:
        * Version:
	Releasing 0.25.0.

2016-04-28  Ivan Vucica <ivan@vucica.net>

	* Headers/cairo/Win32CairoGState.h:
	Partially applying r39615 from testplant branch to fix a build
	error on MinGW.
	Patch by Seong-Gu Lee <sgleehd@gmail.com>.

2016-04-06  Ivan Vucica <ivan@vucica.net>

	* Source/gsc/GSGState.m:
	Remove extraneous semicolons.
	Patch by mlytwyn (cherrypicked from testplant branch, r39614).

	* Source/cairo/Win32CairoGState.m:
	Implement dealloc/copyWithZone on Win32CairoGState instance.
	Patch by mlytwyn (cherrypicked from testplant branch, r39618).

	* Source/gsc/GSGState.m:
	Add return type 'id' to -[GSGState copyWithZone:] method definition.
	Patch by mlytwyn (cherrypicked from testplant branch, r39619).

2016-03-01  Seong Gu Lee <sgleehd@gmail.com>

	* Headers/win32/WIN32Server.h: tweak for compilation on 64bit windows

2015-12-13  Fred Kiefer <FredKiefer@gmx.de>

	* Source/opal/OpalFontInfo.m
	Prevent a compiler warning.
	* Source/opal/OpalGState.m
	* Source/opal/OpalSurface.m
	Correct the bitmap flags used.
	Add a few missing function calls.

2015-11-25 Riccardo Mottola <rm@gnu.org>

	* configure
	* configure.ac
	* config.h.in
	Specifically check for X11/extensions/sync.

	* Headers/x11/XGServer.h
	* Headers/x11/XGServerWindow.h
	* Source/x11/XGServer.m
	* Source/x11/XGServerEvent.m
	* Source/x11/XGServerWindow.m
	Enable Sync only on explicit presence of sync.h, not just Xext.


2015-11-13  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Source/x11/XGServerWindow.m (_setupRootWindow, window::::):
	Create an empty app icon window before eventually checking the
	window frame offsets when using WindowMaker. This fixes the issue
	that the first GNUstep application started under WindowMaker did
	not get a proper application menu.

2015-11-03  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerEvent.m (-processEvent:): For repeated keys
	only eat up the KeyRelease events and pass on all KeyPress.

2015-10-28  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-GSReadRect:, -DPSimage:..:):
	Drawing speedup for slow machines.
	Patch by Josh Freeman <gnustep_lists@twilightedge.com>

2015-10-16  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerEvent.m (-processEvent:): Move repeate key
	detection from process_key_event() to here to enable filtering out
	keyUp events as Cocoa does.

2015-10-09  Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSContext.m: Set some defaults.

2015-10-03  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/gsc/GSGState.h
	* Source/gsc/GSContext.m
	* Source/gsc/GSGState.m
	* Source/cairo/CairoGState.m
	Implement per gstate methods for antialias, patternPhase and
	compositingOperation.

2015-09-20  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m: Preliminary support for anti alias
	setting for path drawing.

2015-08-13  Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m (process_char):
	Fix bug that caused F11 keypresses to become F12.
	Patch by Adam Fox <adam.fox@testplant.com>

2015-06-05  Fred Kiefer <FredKiefer@gmx.de>

        * configure.ac: Fix configure for mingw
        * configure: Regenerated
	Patch by Marcian Lytwyn <marcian.lytwyn@advcsi.com>

2015-05-26 Sebastian Reitenbach <sebastia@l00-bugdead-prods.de>

	* Source/cairo/CairoGState.m
	  abs -> fabs
	* Source/x11/XGGLContext.m
	  format string fix
	* Headers/x11/XGOpenGL.h
	  glxminorversion is int, not long int

2015-05-22  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m: Add support for image interpolation
	setting in context.
	Patch by Josh Freeman <gnustep_lists@twilightedge.com>

2015-05-22  Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSGState.m (_fillRect:withPattern:): Add support for
	patternPhase.
	Patch by Josh Freeman <gnustep_lists@twilightedge.com>

2015-05-18 Riccardo Mottola <rm@gnu.org>

	* GNUmakefile.postamble
	Correctly run config.status again.

2015-05-16  Richard Frith-Macdonald <rfm@gnu.org>

        * Documentation/news.texi:
        * ANNOUNCE:
        * NEWS:
        * README:
        * Version:
	Bugfix release 0.24.1

2015-05-13 Riccardo Mottola <rm@gnu.org>

        * configure.ac
        Copied from base: only warn if compiler is different from the one
	configured in make
        * configure
        regenerated

2015-05-12 Riccardo Mottola <rm@gnu.org>

	* configure.ac
	pick up gnustep make configured CC, CPP, CXX and check they are
	consistent with how make was configured
	* configure
	regenerated

2015-03-31  Germán Arias <germanandre@gmx.es>

	* Source/win32/WIN32Server.m (-windowEventProc:, -process_mouse_event:):
	Start tracking the mouse at the first mouse movement (as suggested in
	a note at MSDN documentation) so the window receives the WM_MOUSELEAVE
	message when the mouse leave the client area. I don't use the message
	WM_NCMOUSEMOVE, as suggested by Fred, because when the user moves
	fast the mouse this messages is not generated. But we receive the
	WM_MOUSELEAVE message no matter if the mouse move fast or not. This
	approach make unnecessary handle the message WM_NCMOUSEMOVE. I also
	remove a redundant line in WM_MOUSELEAVE.

2015-03-23  Germán Arias <germanandre@gmx.es>

	* Source/win32/WIN32Server.m (-windowEventProc:, -process_mouse_event:):
	Add code to handle the case when the mouse leave the window, move over
	a nonclient area, update the cursor or when the user open a
	contextual menu. Also handle the first mouse movement inside the
	window and save the cursor if we should preserve it between different
	windows. Sometimes there is a problem with the cursor if the user
	open a contextual menu after resize the window. But this seems
	other issue.

2015-03-22  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerEvent.m (-processEvent:): Reenable Richard's
	frontend based expose code.
	* Source/x11/XGServerWindow.m (-window::::, -_checkStyle:): Don't
	use CWBackPixel, as the window background may be different.

2015-03-21  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/x11/XGGeneric.h
	* Source/x11/XGServerWindow.m: Correct name for atom
	net_wm_state_modal_atom. Use this atom to try to set the state for
	dialog windows to modal.

2015-02-27  Germán Arias <germanandre@gmx.es>

	* Source/cairo/CairoContext.m (-flushGraphics:):
	* Source/cairo/Win32CairoSurface.m (-initWithDevice:): Apply fix
	from TestPlant branch to solve problem with windows with backing
	store type NSBackingStoreRetained, which are not displayed correclty
	on MS Windows. With this fix those windows are displayed as
	buffered windows.
	* Source/win32/WIN32Server.m (-setWindowdevice:forContext:): The
	windows with autodisplay set to NO aren't displayed correctly on
	Windows, no matter the backing store type used. And trying to
	redisplay these windows here in the server not takes effect. So if
	the window have set autodisplay to NO, we change it to YES before
	create the window. This problem affects the tooltips, but this
	solution is different to the one used in the TestPlant branch.
	Because that solution involves changes in the side of GUI.

2014-10-25  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-compositeGState:...fraction:):
	Disable workaround for cairo > 1.8 for cairo > 1.13.
	Patch by Edwin Ancaer <eancaer@gmail.com>

2014-05-24  Fred Kiefer <FredKiefer@gmx.de>

	* configure.ac: Fix wrong assumption about Xft's .pc file that
	leads to build failure with -Wl,--no-undefined.
	Patch by Yavor Doganov  <yavor@gnu.org>

2014-05-07  Fred Kiefer <FredKiefer@gmx.de>

	* Tools/gpbs.m: Revert last change and correct the implementation
	and usage of gpbs_log.

2014-05-06  Ivan Vucica <ivan@vucica.net>

	* Tools/gpbs.m: Removed barely used, overly complex and almost
	certainly buggy logging code.

2014-05-05  Ivan Vucica <ivan@vucica.net>

	* ChangeLog: Corrected year for some recent commits.
	* GNUmakefile: Added use of Master/deb.make.
	* gnustep-back.spec.in: Added some details needed for Debian
	packaging.

2014-01-27  Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m (LoadDisplayMonitorInfo):
	Switch monitor logging to Debug level.
	Patch by Jonathan Gillaspie <jonathan.gillaspie@testplant.com>

2014-01-19  Fred Kiefer <FredKiefer@gmx.de>

	* Source/art/blit.m(MPRE): Remove compiler warning.
	* Source/art/image.m(-DPSimage:::::::::::): Correct parameter
	types. Fixes bug #41274.

2014-01-08  Fred Kiefer <FredKiefer@gmx.de>

	* configure: Remove duplicate addition of Xext.
	* configure.ac: Regenerate.

2014-01-05 Niels Grewe <niels.grewe@halbordnung.de>

	* Source/x11/XGServerWindow.m: Remove redundant method.

2014-01-05  Fred Kiefer <FredKiefer@gmx.de>

        * Source/x11/XGServerWindow.m(-_checkStyle:): Change NSLog into
	NSDebugLLog.

2014-01-01 Niels Grewe <niels.grewe@halbordnung.de>

        * Source/x11/XGServerWindow.m: Implement method to get
	the XWindow ID of the a window from its window number.

2013-12-29  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-GSSetFont:),
	* Source/cairo/CairoFaceInfo.m (-drawGlyphs:...): Use scaled font
	directly.

2013-12-26  Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/GSXftFontInfo.m
	* Source/xlib/XGFontManager.m
	* Source/xlib/XGBitmap.m: Remove some compiler warnings.

2013-12-24  Richard Frith-Macdonald <rfm@gnu.org>

        * Version: bump to 0.24.0

2013-12-23  Fred Kiefer <FredKiefer@gmx.de>

        * Update release notes to prepare for upcoming release.

2013-12-23  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoFaceInfo.m (-fontFace): Warn about the usage
	of non-scalable fonts.

2013-12-18  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-_createBuffer, -windowbacking::,
	-setWindowdevice:forContext:): Move code from last patch around a bit.

2013-12-18  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/x11/XGServerWindow.m (-_createBuffer): Fix a big
	memory leak noticed by Riccardo with the cairo backend,
	by #ifdef-ing out this method when using cairo.

2013-12-13  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGDragView.m (-_xWindowAcceptingDnDDescendentOf:...):
	Correct to work with kwin window decoration.

2013-12-13  Fred Kiefer <FredKiefer@gmx.de>

	* Tools/xpbs.m (-xProvideSelection:): Leave enough space for all
	possible types.
	* Source/x11/XGDragView.m: Simplify D&D window detection code.

2013-09-29  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/opal/OpalSurface.h
	* Source/opal/OpalSurface.m: Make the -device method public.
	* Headers/opal/OpalContext.h: Remove method definitions.
	* Source/opal/OpalContext.m: Limit the accepted image types.

2013-09-29  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/opal/OpalSurface.h
	* Source/opal/OpalSurface.m: Remove compiler warnings.
	* Source/opal/OpalContext.m: Move -flushGraphics method to here.
	* Source/opal/OpalGState.m: Simplify -DPSimage. Evaluate CGCTX
	only once per method.

2013-09-29  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/opal/OpalGState.h: Clean up to reduce warnings.
	* Source/opal/OpalGState.m: Add missing path and matrix methods.
	Remove warnings. Remove unneeded code. Reorder code to allow for
	easier comparison with GSGState.
	* Source/opal/OpalContext.m: Add missing includes to get shm
	completion working. Adjust to changes in OpalGState.

2013-09-23  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/opal/OpalGState.m: move variable declaration outside
	of for loop

2013-09-23  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalGState.m:
	Fixed a compile error (extra #endif).

	Added -DPSsetdash:::.

	Added stub -DPSsetstrokeadjust:.

2013-09-23  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalGState.m:
	* Source/opal/OpalSurface.m:
	Cutting down on junk code and unneeded output.

2013-09-23  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalContext.m:
	Once again pretending we're not drawing on screen. This is a temporary
	fix for -DPSimage:.

	-DPSgsave is now passed on to current gstate before GSContext is given
	chance to replace it.

	Changes relating to rename of OpalSurface and OpalGState methods
	-cgContext to -CGContext.

	* Source/opal/OpalGState.m:
	Apparently mostly functional -compositeGState:. Includes disabled
	modification of code from CairoGState.

	Apparently functional -drawGState.

	-DPSsetlinecap: stub (need to match linecap constants.)
	-DPSsetmiterlimit:.

	Extended -copyWithZone: to assign a 'default' OpalGStateRef to the
	newly copied gstate in case we currently have no context. This is
	done by creating a context and copying whatever's in that context
	onto the new OpalGState.

	Improved -DPSinitgraphics by setting the device offset that was
	set here and calling CGContextSaveGState() as many times as it
	was supposed to be called while CGContext did not exist. Noted
	that we should, instead of recreating contexts, just reset the
	internal GState of Opal.

	Added -GSSetCTM:.

	-flushGraphics no longer 'flushes' rect 0,0,1024,1024. Now it instead
	queries surface for its size.

	In case surface exists but not the CGContext, -DPSgsave creates it.
	Otherwise, it records that gsave should be run upon context
	creation.

	Added -DPSsetlinewidth:.

	Changes relating to rename of OpalSurface and OpalGState methods
	-cgContext to -CGContext.

	* Source/opal/OpalSurface.m:
	Added reminder of how we should handle recreation of CGContexts.

	Disabled non-doublebuffered windows. (We always need a backing
	CGBitmapContext so we can implement -compositeGState: and -drawGState:.

	Added accessors -x11CGContext and -backingCGContext.

	Fixed bug where sometimes we'd get incorrect expose values and would
	try to incorrectly copy the backing image, stretching the resulting
	on-screen image.

	Added -size accessor.

	* Headers/opal/OpalGState.h:
	Some accessors. _CGContextSaveGStatesOnContextCreation ivar.

	* Headers/opal/OpalSurface.h:
	New and renamed accessors.

2013-09-19  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalContext.m:
	Added GState switcher -DPSsetgstate:. See description of
	_opGState in OpalGState.h.

	* Headers/opal/OpalGState.h:
	Added _opGState i-var and relevant accessors.

	* Source/opal/OpalGState.m:
	Instead of yellow rectangle, -compositeGState:... method *should*
	now be painting doublebuffered content from the 'other' GState,
	but sadly does not. This needs debugging.

	Implemented -copyWithZone:. See description of _opGState in
	OpalGState.h to see how and why is _opGState used in this class,
	how it is being copied and why it's alright to keep it nil during
	-init and even after -DPSinitgraphics, but needs to be set in
	-copyWithZone:.

	Added -setOPGState: and -OPGState accessors for the _opGState
	field.

2013-09-18  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalSurface.m:
	Enabled doublebuffering. Fixed some debug code, disabled some other
	debug code.

2013-09-17  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/opal/OpalFontInfo.m: Use new OPFontGetGlyphWithCharacter to
	properly look up the glyph for a character.

2013-09-17  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalFontInfo.m:
	Removed some dead code.

	* Source/opal/OpalGState.m:
	Fixed erroneous offset of glyphs by taking -defaultLineHeightForFont,
	multiplying by 0.66, and adding that to pt.y. No idea why 0.66
	is the right number.

2013-09-17  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalContext.m:
	Added note that -supportsDrawGState should be implemented.

	* Source/opal/OpalGState.m:
	Fixed temporary code for painting colored rectangles in place of text.
	Partially fixed -GSShowGlyphsWithAdvances::: by removing temporary code
	for painting colored rectangles, and by setting text matrix in
	GSSetFont:.

2013-09-17  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/opal/OpalFontInfo.m: Move font space to user space conversion
	to a separate method. Implement -glyphIsEncoded:, -advancementForGlyph:,
	-glyphForCharacter:, -glyphWithName:.

	For -boundingRectForGlyph:, and -widthOfString:, return fake, fixed
	values.
	* Source/opal/OpalContext.m: Fix -isDrawingToScreen implementation;
	it now returns YES. This has the unfortunate side effect of breaking
	image drawing... but, on the positive side, causes NSLayoutManager
	to make calls to GSShowGlyphsWithAdvances in batches of up to
	16 glyphs, instead of one at a time...!
	* Source/opal/OpalGState.m: Implement -GSSetFont:, and make
	-GSShowGlyphsWithAdvances: call CGContextShowGlyphsWithAdvances

	Overall state is glyphs are drawn.. they appear upside down,
	and the glyph runs only seem to draw at (0, 0).

2013-09-17  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalFontInfo.m:
	Fixed scale of metrics by using unitsPerEm and pointSize.

2013-09-17  Ivan Vucica <ivan@vucica.net>

	* configure:
	* configure.ac:
	Added fontconfig and freetype as dependencies for Opal. configure
	script is not actually regenerated from configure.ac and contains
	a simplified piece of code which just appends relevant options to
	CPPFLAGS and LIBS.

	* Source/opal/GNUmakefile:
	Added fontconfig/ implementation files, like it was done in cairo
	backend.

	* Headers/opal/OpalFaceInfo.h:
	* Source/opal/OpalFaceInfo.m:
	Now copied from CairoFaceInfo and modified to use Core Graphics.

	* Headers/opal/OpalFontInfo.h:
	* Source/opal/OpalFontInfo.m:
	Now copied from CairoFontInfo. Starting modifying to use the Core
	Graphics. Currently font metrics are not correctly scaled.

	* Source/opal/OpalFontEnumerator.m:
	* Headers/opal/OpalFontEnumerator.h:
	Now copied from CairoFaceInfo. Modified to use the classes in the
	Opal backend.

	* Source/opal/OpalGState.m:
	Added DPSrlineto:: and DPSrmoveto::.

	* Source/fontconfig/FCFontInfo.m:
	* Headers/fontconfig/FCFontInfo.h:
	Removed a cairo-backend-specific method.

2013-09-10  Ivan Vucica <ivan@vucica.net>

	* Source/fontconfig/FCFontInfo.m:
	* Source/fontconfig/FCFontEnumerator.m:
	* Source/fontconfig/FCFaceInfo.m:
	* Headers/fontconfig/FCFontInfo.h:
	* Headers/fontconfig/FCFontEnumerator.h:
	* Headers/fontconfig/FCFaceInfo.h:
	* Source/cairo/CairoFontEnumerator.m:
	* Source/cairo/CairoFaceInfo.m:
	* Source/cairo/CairoFontInfo.m:
	* Headers/cairo/CairoFontInfo.h:
	* Headers/cairo/CairoFontEnumerator.h:
	* Headers/cairo/CairoFaceInfo.h:
	In preparation for reusing this code in the Opal backend,
	moved fontconfig code to a dedicated set of classes that are now
	superclasses of Cairo backend's font classes.

	* Source/cairo/GNUmakefile:
	Added fontconfig font classes directly to GNUmakefile for Cairo
	backend.

	It would be better if these had something like their own distinct
	GNUmakefile that produces a static library which would then be
	linked into Cairo. But the only backends that will use this are,
	for now, Cairo and Opal. So the ugliness and extra maintenance
	in case more classes are added should be, for now, acceptable.

	* Source/cairo/CairoGState.m:
	Fixed a mistake in a NSDebugMLLog() call's format. A percentage
	symbol was placed before word "self", resulting in compiler's
	interpretation as "%s".

2013-09-10  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/x11/XIMInputServer.m: If the requested XIM
	style (the GSXIMInputMethodStyle user default) is not available,
	fall back to using a stlye that both the X server and
	GNUstep support, if any. Also, add support for NoneStyle, which
	is for simple input methods that don't have any visualization.
	Problem reported and tested by Riccardo.

2013-09-09  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalFontInfo.m:
	Implemented -defaultLineHeightForFont, the key to getting
	GNUstep layouting system to use information provided in
	-advancementForGlyph:.

	Without that, the textcontainer->linefrags does not get
	created.

2013-09-08  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGGLContext.m,
	* Source/x11/XGGLFormat.m: Better error reporting by converting
	glGetError() to a string.

2013-08-21  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/x11/XIMInputServer.m: Add the setlocale(LC_CTYPE, "") call
	back that I removed last year (r35152).

	I tested the fcitx input method, and without the setlocale call,
	XOpenIM would fail. I'm not sure what the best plan is in the long
	term, I wanted to avoid calling setlocale from the core frameworks
	but in this case xlib seems to require it.

2013-08-02  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalContext.m:
	Implementation of -graphicsPort that returns a CGContext

	* Source/opal/OpalGState.m:
	-Stubs for -DPSsetlinejoin:, -DPSsetlinecap:, -DPSsetmiterlimit:
	-Implementation of -DPSimage::::::::::: for 32-bit RGB colorspaces

2013-07-29  Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSContext.m: Replace isa with object_getClass().

2013-07-25  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalContext.m:
	Pushing -DPSgsave: and -DPSgrestore: to OpalGState.

	* Source/opal/OpalSurface.m:
	-Disabled doublebuffering temporarily.
	-Work on fixing doublebuffering, including creating subimage
	 properly.
	-Richer debug image output code, plus saving as PNGs.

	* Source/opal/OpalGState.m:
	-DPSfill
	-Setting color now also sets stroke color.
	-Corrected name for -DPSgsave and -DPSgrestore.
	-Implemented -saveClip, -restoreClip.
	-Implemented -DPSeoclip and -DPSeofill.
	-Added dummy DPSshow:, GSShowText:: etc.
	-Implemented -DPScurrentpoint:: so that superclass's
	 DPSrlineto:: works.

	* Headers/opal/OpalSurface.h:
	Added -createCGContexts to header to fix a warning.

2013-07-24  Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/w32_movesize.m (-decodeWM_EXITSIZEMOVEParams:::):
	Remove code that caused missing windows content.
	* Source/cairo/CairoContext.m (-flushGraphics): Add experimental
	flush code for Windows.
	* Source/cairo/Win32CairoSurface.m (-initWithDevice:, -dealloc):
	Clean up HDC handling. Based on patch by Marcian Lytwyn <marcian.lytwyn@advcsi.com>

2013-07-24  Ivan Vucica <ivan@vucica.net>

	* configure.ac:
	* configure:
	Opal backend depends on both Opal and CoreBase. Added
	CoreBase to list of libraries we link with.

	* Source/opal/OpalFontInfo.m:
	* Source/opal/OpalFontEnumerator.m:
	Switched to NSDebugLLog().

	* Source/opal/OpalGState.m:
	-Switched to NSDebugLLog().
	-Fixed DPSimage method's conversion of NSAffineTransform to
	 CGAffineTransform
	-Implemented GSCurrentCTM
	-Implemented flushGraphics
	-Implemented DPSsavegstate and DPSrestoregstate

	* Source/opal/OpalSurface.m:
	-Switched to NSDebugLLog().
	-Fixed section that is supposed to write out the debug image.

2013-07-21  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalFontInfo.m:
	* Source/opal/OpalFontEnumerator.m:
	Some hacks to figure out how NSMenuItem's width is determined,
	and how the supported glyphs are determined.

	* Source/opal/OpalGState.m:
	Various method implementations and fixes.

	* Source/opal/OpalSurface.m:
	Enabled doublebuffered code path, now that Opal's endianess
	problem is fixed. Creation of CGContext factored out of
	initializer into a method that can be called whenever needed
	to recreate the context.

2013-07-15  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalFontEnumerator.m:
	* Source/opal/OpalFontInfo.m:
	More dummy font code, trying to get wider menu items et al.

	* Source/opal/OpalSurface.m:
	* Source/opal/OpalContext.m:
	* Headers/opal/OpalSurface.h:
	Work on getting backing store support to work.

	* Source/opal/OpalGState.m:
	* Headers/opal/OpalGState.h:
	Implementation of a lot of drawing and matrix methods.

2013-07-11  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalContext.m:
	Once the surface is created in context, it's also set as
	the active surface of the GState.

	* Source/opal/OpalGState.m:
	Blocked some superclass methods from running. Added debug
	output. Added call to dummy paint method in OpalSurface.

	* Source/opal/OpalSurface.m:
	* Headers/opal/OpalSurface.h:
	* Headers/opal/OpalGState.h:
	Opal context is now created in the surface. Added a dummy
	draw method.

	* configure.ac:
	* configure:
	Ensured linking with the Opal library.

2013-07-08  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-setIgnoreMouse::): Completely
	rewrite this method to use Xfixes.
	* Source/win32/WIN32Server.m (-setIgnoreMouse::): Implement a
	Windows version of this method.

2013-07-08  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-setIgnoreMouse::): New method that
	allows to ignore mouse events for a window.

2013-07-04  Richard Frith-Macdonald <rfm@gnu.org>

        * Tools/GNUmakefile.preamble:
        * Source/GNUmakefile.preamble:
        Fix order of use of library and header directories.

2013-07-03  Ivan Vucica <ivan@vucica.net>

	* Source/x11/XGGLFormat.m:
	* Headers/x11/XGOpenGL.h:
	ARGB visual is only picked if NSOpenGLPFAAlphaSize is
	specified in the pixel format.

2013-07-03  Ivan Vucica <ivan@vucica.net>

	* Source/x11/XGGLContext.m:
	* Source/x11/XGGLFormat.m:
	* Headers/x11/XGOpenGL.h:
	OpenGL context under X11 now picks up the best possible
	framebuffer that includes an alpha mask in the X visual info.
	The code is currently disabled as it needs more debugging.

2013-06-27  German A. Arias <german@xelalug.org>

	* Source/x11/XGServerEvent.m (-processEvent:): Don't add events
	WindowResized and WindowMoved in event_queue, to don't delay its
	sent. Instead, send these directly to the window. If not, the
	programa can move/resize the window while we send these events,
	causing a confusion.

2013-06-25  Ivan Vucica <ivan@vucica.net>

	* Source/opal/OpalFontInfo.m:
	* Source/opal/OpalContext.m:
	* Source/opal/OpalGState.m:
	* Source/opal/OpalFontEnumerator.m:
	* Source/opal/OpalSurface.m:
	* Headers/opal/OpalFontInfo.h:
	* Headers/opal/OpalContext.h:
	* Headers/opal/OpalGState.h:
	* Headers/opal/OpalFontEnumerator.h:
	* Headers/opal/OpalSurface.h:
	Minimal code for dummy graphics backend now implemented for
	Opal backend.

2013-06-23  Ivan Vucica <ivan@vucica.net>

	* config.h.in:
	* configure.ac:
	* configure:
	* Source/GSBackend.m:
	Added Opal backend to appropriate places (avoiding rebuild of
	configure and config.h.in).

	* Source/opal/OpalPSSurface.m:
	* Source/opal/GNUmakefile:
	* Source/opal/OpalFontInfo.m:
	* Source/opal/OpalPDFSurface.m:
	* Source/opal/OpalContext.m:
	* Source/opal/OpalGState.m:
	* Source/opal/OpalFontEnumerator.m:
	* Source/opal/OpalSurface.m:
	* Source/opal/OpalFaceInfo.m:
	Added dummy files for the Opal backend.

2013-05-11  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/Win32CairoSurface.m (-initWithDevice:): Make safer
	against the surface being deallocated during this method.
	* Source/cairo/Win32CairoSurface.m
	(WIN32Server-contentsOfScreen:inRect:): Screen grabbing code.
	* Headers/win32/WIN32Server.h,
	* Source/win32/WIN32Server.m (-monitorHandleForScreen:,
	-createHdcForScreen:, deleteScreenHdc:): Add helper methods for screen grabbing.
	Patch by Marcian Lytwyn <marcian.lytwyn@advcsi.com>

2013-04-24 23:10-EDT Gregory John Casamento <greg.casamento@gmail.com>

	* Source/cairo/CairoGState.m: Added code in -drawGradient:
	fromPoint:toPoint:options: to handle gradients for colorspaces
	other than NSCalibratedRGBColorSpace, NSDeviceRGBColorSpace,
	NSCalibratedWhiteColorSpace, NSDeviceWhiteColorSpace,
	NSCalibratedBlackColorSpace, NSDeviceBlackColorSpace.  The
	previous implementation assumed RGB based colorspaces only.

2012-03-01  Richard Frith-Macdonald <rfm@gnu.org>

        * Version ... bump subminor number in preparation for next release.

2012-03-01  Richard Frith-Macdonald <rfm@gnu.org>

        Make release
        * Version 0.23.0
        * Update release notes

2013-02-18  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m
	Fix compiler warnings reported by
	Sebastian Reitenbach <sebastia@l00-bugdead-prods.de>

2013-02-16  Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSContext.m
	* Source/x11/XGServerWindow.m
	Adopt to changes in gui.

2013-02-10  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/cairo/CairoGState.h
	* Source/cairo/CairoGState.m
	* Source/cairo/XGCairoXImageSurface.m
	* Source/gsc/GSContext.m
	* Source/gsc/GSStreamContext.m
	* Source/gsc/GSStreamGState.m
	* Source/x11/XGServerWindow.m
	* Source/x11/XGDragView.m:
	Silence warnings from clang.

2013-02-01  Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/WIN32Context.m(-isCompatibleBitmap): Add
	missing varible.

2013-02-01  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/gsc/GSGState.h
	* Headers/gsc/GSGStateOps.h
	* Headers/gsc/GSStreamGState.h
	* Source/art/ARTGState.m
	* Source/art/composite.m
	* Source/art/ftfont-old.m
	* Source/art/ftfont.h
	* Source/art/ftfont.m
	* Source/art/path.m
	* Source/cairo/CairoGState.m
	* Source/gsc/GSContext.m
	* Source/gsc/GSGState.m
	* Source/gsc/GSStreamContext.m
	* Source/winlib/WIN32GState.m
	* Source/xlib/XGGState.m: Adopt to CGFloat changes in DPS/PS
	functions of gui.

2013-02-01  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m
	* Source/gsc/GSGState.m
	* Source/gsc/GSStreamContext.m
	* Source/winlib/WIN32GState.m: Adopt to CGFloat changes on NSBezierPath.

2013-01-27  Fred Kiefer  <FredKiefer@gmx.de>

	* Source/gsc/GSContext.m
	* Source/cairo/CairoContext.m
	* Source/art/ARTContext.m
	* Source/xlib/XGContext.m
	* Source/winlib/WIN32Context.m: Move the bitmap conversion
	code from cairo to the gsc class. Add a new method to detect
	incompatible image formats and implement that for all backends.
	* Source/winlib/WIN32GState.m (GSCreateBitmap): Improve the
	handling of device black/white colour space.

2013-01-11  Fred Kiefer  <FredKiefer@gmx.de>

	* Source/win32/w32_general.m (-decodeWM_CLOSEParams:::): Post the
	close event instead of sending it directly to the window.
	Patch by Doug Simons <doug.simons@testplant.com>

2013-01-05 00:54-EST Gregory John Casamento <greg.casamento@gmail.com>
	Merging changes made by Marcian Lytwyn

	* Tools/win32pbs.m: (+ownerByOsPb:) compare against name
	instead of pasteboard object to prevent condition where
	paste works only once as observed on Windows.
	(MainWindowProc) Add code to handle WM_RENDERALLFORMATS as documented
	on MSDN here: http://msdn.microsoft.com/en-us/library/windows/desktop/ms649029(v=vs.85).aspx

2012-12-31  Fred Kiefer  <FredKiefer@gmx.de>

	* Source/cairo/CairoFntInfo.m (-drawGlyphs:..., -setupAttributes):
	Invert the value of matrix[2]. See bug #30493

2012-11-26 12:56-EST Gregory John Casamento <greg.casamento@gmail.com>

	* Headers/cairo/Win32CairoGState.h
	* Source/cairo/Win32CairoGState.m: Add missing files for windows.

2012-11-26 00:37-EST Gregory John Casamento <greg.casamento@gmail.com>

	* ChangeLog
	* config.h.in
	* configure
	* configure.ac
	* Headers/win32/WIN32Server.h
	* Source/cairo/CairoContext.m
	* Source/cairo/CairoGState.m
	* Source/cairo/CairoPDFSurface.m
	* Source/cairo/GNUmakefile
	* Source/cairo/Win32CairoSurface.m
	* Source/GSBackend.m
	* Source/gsc/GSGState.m
	* Source/win32/w32_create.m
	* Source/win32/w32_general.m
	* Source/win32/w32_GLcontext.m
	* Source/win32/w32_movesize.m
	* Source/win32/w32_windowdisplay.m
	* Source/win32/WIN32Server.m
	* Source/winlib/GNUmakefile.preamble: Merge of all testplant
	branch changes to trunk for Cairo changes.  Did code cleanup to
	make the code conform to coding standards.

2012-10-24  Doug Simons <doug.simons@testplant.com>

	* Source/win32/WIN32Server.m : Fix findWindowAt:windowRef:excluding:
	to skip windows with the ignoresMouseEvents property set.

2012-10-14  Fred Kiefer  <FredKiefer@gmx.de>

	* Source/win32/w32_create.m (-decodeWM_CREATEParams:::): Call
	windowbacking:: instead of handling backingstore here.
	Merge some changes from testplant branch
	* Source/win32/WIN32Server.m : Fix for fatal exceptions when a nil
	mouse event tried to post
	Patch by Jonathan Gillaspie <jonathan.gillaspie@testplant.com>
	* Source/gsc/GSGState.m (-description),
	* Source/cairo/CairoGState.m (-description): Add this method.
	* Headers/win32/WIN32Server.h - Added a mutable array for storing
	multiple screen information from GDI screen lookup
	* Source/win32/WIN32Server.m - Added startup sequence to invoke
	GDI functions to look up multiple screen/monitor information
	* Source/gsc/GSGState.m: Fix compiler warnings
	Patch by Marcian Lytwyn <marcian.lytwyn@advcsi.com>

2012-10-10  Jonathan Gillaspie <jonathan.gillaspie@testplant.com>

	* Source/win32/WIN32Server.m : Fix for fatal exceptions when a
	nil mouse event tried to post

2012-09-28  Fred Kiefer  <FredKiefer@gmx.de>

	* Source/gsc/GSStreamContext.m (-GSShowGlyphsWithAdvances:): Add
	missing method.

2012-09-26  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoPDFSurface.m:
	* Source/cairo/CairoContext.m:
	* Source/cairo/CairoSurface.m:
	* Source/cairo/CairoPSSurface.m:
	* Headers/cairo/CairoSurface.h: Add a -isDrawingToScreen method
	to CairoSurface. Returns NO for PDF/PS surfaces, yes for others.
	Use it to implement -[CairoContext isDrawingToScreen], so that
	-[NSGraphicsContext isDrawingToScreen] will return the correct
	value.

2012-09-21  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Source/x11/XGServerWindow.m (-imagecursor:::): Fix Xcursor
	specific code for big endian machines.

2012-08-17 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoFontEnumerator.m: Allow for Windows default
	fonts.
	* Source/win32/w32_GLcontext.m,
	* Source/x11/XGGLContext.m: Implement 10.6 methods to get/set the
	CGLContextObj.

2012-08-08  Marcian Lytwyn <marcian.lytwyn@advcsi.com>

	*** Modifications/fixes for cairo support on win32 ***
	* Headers/win32/Win32CairoGState.h - NEW
	* Source/win32/Win32CairoGState.m - NEW
	* Headers/win32/WIN32Server.h
	* Source/gsc/GSGState.m: Fix compiler warnings
	* Source/win32/WIN32Server.m
	* Source/win32/w32_create.m
	* Source/win32/Win32CairoSurface.m
	* Source/cairo/GNUmakefile
	* Source/cairo/CairoContext.m
	* configure
	* configure.ac

2012-06-27  Marcian Lytwyn <marcian.lytwyn@advcsi.com>

	*** Modifications to Win32 server backend to support multiple
	    monitors.
	* Headers/win32/WIN32Server.h - Added a mutable array for storing
	  multiple screen information from GDI screen lookup
	* Source/win32/WIN32Server.m - Added startup sequence to invoke
	  GDI functions to look up multiple screen/monitor information

2012-06-21  Eric Wasylishen  <ewasylishen@gmail.com>

	* configure.ac: use AC_CHECK_LIB to check for cairo if pkg-config
	is not available
	* configure: regenerate

2012-05-14  Quentin Mathe  <quentin.mathe@gmail.com>

	* Source/gsc/GSContext.m (+initialize): Protected +initialize from being
	called multiple times because of subclasses. As a result, this
	eliminates a gtable memory leak (e.g. +initialize sent to both GSContext
	and CairoContext at backend initialization time), and prevents the
	gstate stack to be reset while still in use (e.g. the program enumerates
	classes at runtime and sends messages to them... +initialize might be
	sent to GSStreamContext in such a case).

2012-05-12  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/x11/XIMInputServer.m: Remove the locale setting code.
	Use the correct #ifdef check for Xutf8LookupString, and use
	that function if available; otherwise use XLookupString.
	Interpret the return value of XLookupString as Latin-1.

2012-03-22  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/x11/XGServerEvent.m: Make the GSModifiersAreKeys
	default to YES, by renaming the default to GSModifiersAreNotKeys.
	This should fix bug 25659; for example, in Ink you can now
	open the color panel with <Shift>+<Alt>+c or <Alt>+<Shift>+c.
	* Documentation/Back/DefaultsSummary.gsdoc: Update docs for
	GSModifiersAreNotKeys.

2012-02-20 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m: Set the filter to BILINEAR for all
	patterns we use.

2012-02-19  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Source/gsc/GSGState.m (-GSSetFillColor:, -GSSetStrokeColor:):
	Fix potentially uninitialized color space element when setting
	fill and stroke colors.

2012-02-19 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-compositerect:op:): Use difference
	operator only for cairo version >= 1.9.4.

2012-02-18 Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/WIN32GState.m
	* Source/art/composite.m
	* Source/xlib/XGGState.m
	* Source/xdps/NSDPSContextOps.m: Replace NSCompositeHighlight with
	GSCompositeHighlight and map NSCompositeHighlight onto
	NSCompositeSourceOver.
	* Source/cairo/CairoGState.m (-compositerect:op:): Implement
	GSCompositeHighlight with the difference operator.

2012-02-09 Richard Frith-Macdonald <rfm@gnu.org>

	* Tools/gbps.m: Add lots of debug information (have objects describe
	themselves and where they are in the data sturcture).
	Simplify code by removing cached information about which owners
	respond to which selectors (probably not needed on modern systems,
	and we could re-add this more simply if it turns out I'm wrong).

2012-02-03  Adam Fedor  <fedor@gnu.org>

	* Bump version

2012-02-03  Adam Fedor  <fedor@gnu.org>

	* Version 0.22.0
	* Update release notes

2012-01-23  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoFntInfo.m (-setupAttributes):
	use CAIRO_HINT_METRICS_ON instead of CAIRO_HINT_METRICS_OFF,
	otherwise some text is cut of (e.g. quit Ink with unsaved
	changes, the "t" in "Quit" in the dialog is cut off)

2012-01-23  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoFontInfo.m (-setupAttributes):
	We must not leave the hinting settings as their defaults,
	because if we did, that would mean using the surface defaults
	which might or might not use hinting (xlib does by default.)

	Since we make measurements outside of the context of a surface
	(-advancementForGlyph:), we need to ensure that the same
	hinting settings are used there as when we draw. For now,
	just force hinting to be off.

2012-01-19  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Source/x11/XGServerWindow.m (-orderwindow:::): Introduce new
	user defaults to respectively make app icons and mini windows
	sticky (aka omnipresent).

2012-01-11 Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/WIN32FontEnumerator.m: Add missing include.

2012-01-11 Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/WIN32FontEnumerator.m,
	* Source/cairo/CairoFontEnumerator.m,
	* Source/xlib/GSXftFontInfo.m,
	* Source/xlib/XGFont.m: Use NSDebugLLog instead of NSDebugLog to
	reduce amount of default output.

2012-01-02  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoGState.m (-GSShowGlyphsWithAdvances:):
	Update the current point after drawing text. Should not affect
	anything in gui right now, but will be useful later.

2011-12-24  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoContext.m (-beginPrologueBBox:...):
	Add a hack to get landscape printing working. Comment in the source
	reproduced here:
	FIXME: This is confusing... When an 8.5x11 page is set to
	landscape, NSPrintInfo also swaps the paperSize to be 11x8.5,
        but gui also adds a 90 degree rotation as if it will
        be drawing on a 8.5x11 page. So, swap 11x8.5 back to 8.5x11 here.

2011-12-23  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoContext.m (-beginPrologueBBox:...): Use
	paper size from print info to set the cairo page size, instead
	of using the bounding box (which is usually smaller than the
	paper size, and was causing cairo print output to be wrong
	compared to GNUstep's built-in PostScript writer.)

2011-11-28 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerEvent.m (initialize_keyboard): Don't use
	XK_ISO_Level3_Shift as second alternate key.
	* Documentation/Back/DefaultsSummary.gsdoc: Document this mapping.

2011-11-07 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGGLFormat.m (-assembleGLXAttributes:): Use
	GLX_BUFFER_SIZE for NSOpenGLPFAColorSize instead of setting all
	the single colour sizes, which was wrong.

2011-11-07 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerEvent.m (initialize_keyboard): Use
	XK_ISO_Level3_Shift as second alternate key.
	* Documentation/Back/DefaultsSummary.gsdoc: Document this mapping.

2011-11-04  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/x11/context.c: check for NULL from XRenderFindVisualFormat

2011-10-25  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/gsc/GSStreamContext.m:
	* Source/gsc/GSContext.m:
	* Source/gsc/GSGState.m:
	* Headers/gsc/GSGStateOps.h: Change type for -GSSetFillColor: and
	-GSSetStrokeColor: from float to CGFloat

2011-10-20 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoFontEnumerator.m: Define FC_WEIGHT_ULTRABLACK
	for old versions of fontconfig.
	Patch by Richard Frith-Macdonald <rfm@gnu.org>

2011-10-20 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/x11/XWindowBuffer.h: Bracket even more usage of shm in
	conditional compilation.

2011-10-18 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/x11/XWindowBuffer.h: Protect the usage of shm.

2011-10-17 Fred Kiefer <FredKiefer@gmx.de>

	* configure.ac: Test for X shape extension
	* configure: Regenerate
 	* config.h.in: Regenerate
	* Source/x11/XGServerWindow.m (-restrictWindow:toImage:),
	* Source/x11/XWindowBuffer.m (-_exposeRect:): Protect usage of
	shape extension.
	Should fix bug #34552.

2011-10-13  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/GNUmakefile:
	* Source/cairo/CairoContext.m:
	* Source/cairo/CairoSurface.m:
	* Source/cairo/XGCairoModernSurface.m:
	* Headers/cairo/XGCairoModernSurface.h:
	* Headers/cairo/CairoSurface.h: New cairo surface which uses
	cairo_surface_create_similar to create a back buffer which
	has an alpha channel, even if the X server doesn't support
	surfaces with alpha. This new surface is also made the default
	since this seems to be the recommended way to double buffer
	with cairo.

2011-09-18  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoContext.m: revert the last change for now

2011-09-16  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoContext.m: Switch to XGCairoSurface by default,
	because it fixes the corrupted display problem reported by Riccardo
	on 16-bit displays.

2011-09-12 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-saveClip, -restoreClip:,
	-drawGradient:...): Check that the _ct isnt NULL.
	* Source/cairo/CairoGState.m (doubleFromUserSpace,
	floatToUserSpace): Use correct types in these helper functions.

2011-09-12 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGDragView.m (GSActionForDragOperation,
	GSDragOperationForAction): Corrected drag type conversion.
	Patch by Andreas Schick <andreas.schik@googlemail.com>

2011-09-11  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoGState.m (-drawGState:...): Check that the source
	context is non-NULL before calling cairo_get_target on it. Log a warning
	when either the source context or target context is NULL.

2011-08-16  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoGState.m (-drawGState:...): Use CAIRO_EXTEND_PAD
	on the pattern to prevent blurred edges when scaling up.

2011-08-15  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoGState.m (-DPSstroke:): If the line width is
	0, temporarily set it to 1 unit wide (in device space.) This
	is an attempt at matching the behaviour of the setlinewidth
	PostScript operator, which is supposed to interpret 0 as meaning
	the thinnest line that the output device can draw.
	Note that Quartz (and cairo) draw nothing with a line width of 0.

2011-08-07  Eric Wasylishen  <ewasylishen@gmail.com>

	* Tools/xpbs.m: Add some more comments

2011-08-07  Eric Wasylishen  <ewasylishen@gmail.com>

	* configure.ac: Test for Xfixes
	* configure: Regenerate
 	* config.h.in: Regenerate
	* Tools/xpbs.m: If Xfixes is available, use it to receive notifications when the
	owner of an X11 selection changes.

	In the future we should invalidate the list of cached pasteboard types when this
	happens, so, e.g. copying text from gnome-terminal, the general pasteboard will only
	have the text type, but subsequently copying text from OpenOffice.org, the general
	pasteboard will have plain text and RTF types (currently we don't do this, so
	you can't paste RTF contents unless it is in the clipboard when gpbs starts.)

	The above problem is also why DND from X to GNUstep doesn't work - the dragging
	pasteboard types are never updated.

2011-08-04  Eric Wasylishen  <ewasylishen@gmail.com>

	* Tools/xpbs.m: Get copy and paste of rich text from OpenOffice.org
	to Ink working.

	- OOo uses the MIME type "text/richtext", so make that another alias for RTF
	- Fix an obscure bug in measuring the size of the return buffer of
	XGetWindowProperty. When an array of Atom's is returned xlib will claim
	that they are 32-bit when in fact they may be 64-bit. This was causing
	xpbs to miss half of the available types for a clipboard on 64-bit systems.
	- Don't use 'True' for the delete paramater of XGetWindowProperty. I'm not sure
	why we were deleting window properties before. gtk doesn't do that.

2011-08-01  Eric Wasylishen  <ewasylishen@gmail.com>

	* configure.ac: Add a configure test for Xcursor
	* configure: regenerate
	* config.h.in: regernate

2011-07-30  Eric Wasylishen  <ewasylishen@gmail.com>
	* Source/win32/WIN32Server.m (-resolutionForScreen:):
	Scale the result by 0.75 so the Windows default of 96 DPI is
	mapped to the GNUstep default of 72 DPI. While this sounds wrong,
	72 and 96 are just "virtual" DPI's; both mean 1 point = 1 pixel,
	so it's actually the right thing to do.
	* Source/x11/XGServerWindow.m (-resolutionForScreen:):
	Comment out the implementation and just return 72 for now,
	because I'm not sure if we can trust the value the X server
	gives us.

	NOTE: Currently -gui ignores these methods and only looks at the
	GSScaleFactor user default. I'm going to make -gui use the server
	values now, because it's safe to do so on Windows (the system
	DPI is set by the user, and affects all applications.)

	NOTE: We might consider refactoring these methods to be called
	scaleFactorForScreen: to make it clearer what they do.

2011-07-18  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/winlib/WIN32GState.m (GSCreateBitmap): Add support for
	(8 bit-greyscale, 8-bit alpha) format. This fixes various default
	images not showing (menu arrows, scroller arrows, etc.)

2011-07-15  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/x11/XGServerWindow.m: Add Xcursor support (for RGBA
	imagecursor support.) configure test is still TODO, so it isn't
	compiled in at the moment.

2011-07-13  Eric Wasylishen  <ewasylishen@gmail.com>

	* Headers/x11/XGGeneric.h
	* Source/x11/XGServerWindow.m: Add new netwm window state atoms

2011-07-14 Fred Kiefer <FredKiefer@gmx.de>

	* Tools/win32pbs.m: Add include needed for Cygwin.

2011-07-08  Eric Wasylishen  <ewasylishen@gmail.com>

	* Headers/cairo/CairoGState.h:
	* Source/cairo/CairoGState.m: Remove most of the rounding code and
	implementation of DPSstrokeadjust.

2011-07-03  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/XGCairoSurface.m (-contentsOfScreen:inRect:):
	Use the passed rect properly.

2011-07-03  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/XGCairoSurface.m: Implementation of
	-[GSDisplayServer contentsOfScreen:inRect:] for x11/cairo

2011-06-22 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/x11/XGServer.h: Add #include of config.h.

2011-06-15 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoContext.m (-supportsDrawGState),
	* Headers/cairo/CairoGState.h (-supportsDrawGState)
	* Source/cairo/CairoGState.m (-supportsDrawGState): Revert last
	change as gui is fixed now.

2011-06-13 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoContext.m (-supportsDrawGState): Delegate to gstate.
	* Headers/cairo/CairoGState.h (-supportsDrawGState): Declare this method.
	* Source/cairo/CairoGState.m (-supportsDrawGState): Only allow the
	faster drawing operation when the clip can be represented as a
	list of rectangles.
	* Source/cairo/CairoGState.m (-copyWithZone:): Always free the
	clip rectangle list.

2011-06-01  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Headers/x11/XGServerWindow.h (GSMaxWMProtocols, _gswindow_device_t):
	Enlarge protocol array to make space for the _NET_WM_SYNC_REQUEST
	protocol atom.

	* Source/x11/XGServerWindow.m (_setSupportedWMProtocols:): Add
	assertion to catch out of bounds errors in the future.

2011-05-27 13:53  David Chisnall <theraven@gna.org>

	* libs/back/trunk/Source/x11/XGServerWindow.m: Call NSZoneFree() on
	  pointer allocated with NSAllocateCollectable(), not free(). This
	  is a no-op in GC mode, and will free the memory in non-GC mode.

2011-05-25  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/winlib/WIN32GState.m:
	* Source/art/ARTGState.m:
	* Source/cairo/CairoGState.m:
	* Source/xlib/XGGState.m:
	* Source/gsc/GSContext.m:
	* Source/gsc/GSGState.m:
	* Headers/gsc/GSGStateOps.h:
	Add a new interface, GSShowGlyphsWithAdvances, which replaces
	GSShowGlyphs as the primitive text drawing method.

	None of the backends implement it properly yet; I simply renamed
	the existing -GSShowGlyphs:: methods to -GSShowGlyphsWithAdvances:::,
	so they currently ignore the glyph advances.

2011-05-19 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/cairo/CairoFontEnumerator.h,
	* Headers/cairo/CairoFaceInfo.h: Protect the name id.
	* Source/cairo/CairoGState.m: Reorder variable declarations before
	GS_BEGINITEMBUF as some compilers may complain.
	Patch by Sebastian Reitenbach <sebastia@l00-bugdead-prods.de>

2011-05-15  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/x11/XGServerWindow.m:
	* Source/x11/XGServer.m:
	* Source/x11/XGServerEvent.m:
	* Headers/x11/XGGeneric.h:
	* Headers/x11/XGServerWindow.h:
	* Headers/x11/XGServer.h:
	Implement the _NET_WM_SYNC_REQUEST protocol described here:
	http://standards.freedesktop.org/wm-spec/1.3/ar01s06.html

	This is supposed to make window resizing smoother when dragging
	a resize handle provided by the window manager, by waiting to
	change the window manager's frame until the GNUstep window is
	finished repainting.

2011-05-05  Eric Wasylishen  <ewasylishen@gmail.com>

	* Undo the previous change and try a different approach..
	just cache the character set in CairoFaceInfo, but load them
	as needed as we were doing before.

2011-05-05  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoFontEnumerator.m:
	* Source/cairo/CairoFaceInfo (-characterSet): Remove the call to
	FcFontMatch in -characterSet which was a big performace
	bottleneck.
	Instead load the character set data when enumerating all fonts in
	CairoFontEnumerator.

2011-04-17  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoFontEnumerator.m: Remove declarations after
	statements for c89 compatability

2011-04-17  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoFontEnumerator.m: Replace
	-handleKey:selector:valueClass: and -handleKey:selector:
	methods with macros.

2011-04-17  Eric Wasylishen  <ewasylishen@gmail.com>

	* configure.ac: Copy the -Wdeclaration-after-statement test from
	base. Also adds -Wall.

2011-04-14  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoFontEnumerator.m:
	* Headers/cairo/CairoFontEnumerator.h: Override
	-matchingFontDescriptorsFor: to delegate the matching to Fontconfig

	This uses two utility classes which map Fontconfig patterns
	to and from NSFontDescriptor attributes dictionaries, preserving
	as much detail as possible.

2011-04-14  Adam Fedor  <fedor@gnu.org>

	* Version: Bump version

2011-04-14  Adam Fedor  <fedor@gnu.org>

	* Version 0.20.0

2011-04-09 Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSFunction.m (-initWith:): Correct printf format.
	* Source/x11/XGServerEvent.m (-XGErrorHandler::,
	-_XPointToOSPoint:for:, -processEvent:,
	-_handleTakeFocusAtom:forContext:, process_key_event): Correct printf format.
	* Source/x11/XGServerWindow.m (setNormalHints, -_OSFrameToXFrame:for:,
	-_OSFrameToXHints:for:, -_XFrameToOSFrame:for:, -_checkStyle:,
	-nativeWindow:...:, -styleoffsets:...:, -placewindow::,
	-setinputfocus:, -_DPSsetcursor::): Correct printf format.
	* Source/x11/XGServerWindow.m (-orderwindow): Remove misplaced semicolon.
	* Source/x11/XGDragView.m (-_resetDragTypesForWindow:): Correct printf format.
	* Source/x11/XIMInputServer.m (-ximStyleInit, -ximFocusICWindow:): Correct printf format.
	* Source/x11/XWindowBuffer.m: Correct printf format.
	* Source/GSBackend.m: Replace objc_get_class with NSClassFromString.
	* Tools/xpbs.m (-xSelectionNotify:): Correct printf format.
	Fixes warnings reported by clang.

2011-03-27  Eric Wasylishen  <ewasylishen@gmail.com>

	* Source/cairo/CairoFontEnumerator.m:
	* Source/cairo/CairoFaceInfo.m:
	* Source/cairo/CairoFontInfo.m:
	* Headers/cairo/CairoFontEnumerator.h:
	* Headers/cairo/CairoFaceInfo.h: Set the coveredCharacterSet ivar
	of CairoFontInfo. The character set is obtained from Fontconfig.
	There is an NSCharacterSet subclass which wraps the FcCharSet
	structure from fontconfig, so there is no need for a slow conversion
	from one character set format to another.

	This has the effect of enabling glyph substitution when using
	the cairo backend.

2011-03-23 Fred Kiefer <FredKiefer@gmx.de>

	* Tools/xpbs.m (-pasteboard:provideDataForType:, -availableTypes)
	(-xSelectionNotify:): Better handling of plain text data types.

2011-03-18 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m: Extract the bitmap conversion into
	a local function and use it througout the file.

2011-03-13  Eric Wasylishen  <ewasylishen@gmail.com>

	* configure.ac: Check for the X extention libraries (Xext, Xt, Xmu)
	using pkg-config if they aren't found with the default test

2011-03-07 Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m,
	* Source/x11/XGServerWindow.m: Change the way the image for the cursor
	gets passed on to the backend. The old way could only work for 8
	bit data.

2011-03-05  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Tools/xpbs.m (+xEvent:, +receivedEvent:type:extra:,
	-requestData:, -xTimeByAppending): Fix race condition where gpbs
	could time out waiting for a property change notification from the
	X server, which is already present in the X event queue.

2011-02-15 Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m,
	* Source/x11/XGServerWindow.m: New methods for cursor
	handling. Requires corresponding gui change.

2011-02-14  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Source/x11/XGServerWindow.m (-orderwindow:::): Omit app icons
	and mini windows from the pager and task bar even when they are
	displayed at normal window level.

2010-12-11 Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/WIN32GState.m: Remove a few compiler warnings.

2010-12-11 Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/WIN32GState.m (GSCreateBitmap, -DPSImage:::...:):
	Better error detection.

2010-12-08 Jonathan Gillaspie <jonathan.gillaspie@testplant.com>

	* Source/win32/WIN32Server.m: Added better logging on Window create and destroy errors.
	Added a secondary call to get current mouse position if the first call fails.
	* Source/win32/w32_text_focus.m: Cast parameter to appropriate (HWND) type.

2010-11-18 Eric Wasylishen <ewasylishen@gmail.com>

	* Source/winlib/WIN32FontInfo.m:
	* Source/winlib/WIN32GState.m:
	* Source/cairo/CairoFontInfo.m:
	* Source/cairo/CairoGState.m:
	* Source/win32/w32_general.m:
	* Source/win32/w32_create.m:
	* Source/x11/XGServerWindow.m:
	* Source/gsc/GSGState.m: Replace objc_malloc with malloc and
	objc_free with free

2010-09-11 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/convert.c (image2StandardPseudoColor): Small change
	to keep static code analyser happy.
	* Source/x11/XGServerEvent.m (process_key_event): Don't process
	the event if we don't have a key window.
	* Source/x11/XGServerWindow.m (_computeDepth): Test for unknown
	visual class.
	* Tools/gpbs.m: Rename newDataWithVersion: into dataWithVersion to
	follwo the Objective_c naming convention.

2010-09-10  Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/w32_activate.m: Revert the change to call
	 -[NSApp deactivate].. more investigation needed

2010-08-30  Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/WIN32Server.m: Only show taskbar buttons for windows
	which satisfy both:

	- style mask isn't NSBorderlessWindowMask
	- style mask don't have NSUtilityWindowMask set

	Should fix bug 30911

2010-08-29  Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/w32_activate.m: Call -[NSApp deactivate] in response
	to a WM_ACTIVEAPPP message reporting that the app lost focus.

	This delivers NSApplicationWillResignActiveNotification
	and NSApplicationDidResignActiveNotification, hides panels, etc.

2010-08-24  Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/WIN32Server.m: Handle Page Down and Page Up keys,
  as well as adding a few others.

2010-08-24  Eric Wasylishen <ewasylishen@gmail.com>

	* Headers/win32/WIN32Server.h:
	* Source/win32/WIN32Server.m:
	* Source/win32/w32_movesize.m:
	Fix a rather serious error where the extra window data was allocated
	in two places (allocated with objc_malloc in the WM_CREATE handler,
	and also allocated by Windows using the cbWndExtra field of the window
	class structure). Sometimes the window level was accessed from one
	memory area and sometimes from the other.

	This is a quick fix that leaves the level and ordered properties
	in the cbWndExtra area, and the rest is left in the WIN_INTERN
	structure.

	This fixes the problem where window ordering was broken when running
	apps in gdb.

2010-08-24  Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/WIN32Server.m (-setmaxsize::):
  Remove the maximize box when a maximum size is set on a window.

2010-08-10 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoFontEnumerator.m,
	* Source/xlib/GSXftFontInfo.m: Also request spacing information.
	Patch by Derek Fawcus <dfawcus@employees.org>.

2010-08-03  Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/WIN32Server.m:
	Only look at NSUtilityWindowMask to decide whether to use a thin-
	style title bar (WS_EX_TOOLWINDOW).

2010-07-28 Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSGState.m (-fillRect:withPattern:): Don't use an
	autoreleased bezier path.
	* Source/art/path.m (-DPSrectfill::::),
	* Source/xlib/XGGState.m (-DPSrectfill::::): Use
	-fillPath:withPattern: not -fillRect:withPattern: as the rect needs
	to be converted first.

2010-07-26 Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m,
	* Source/x11/XGServerEvent.m: Use NSDeleteCharacter instead of
	NSBackSpaceCharacter for the backspace key. This is what Cocoa and
	OpenStep have been doing all the time.
	Also use NSBackTabCharacter on X11 when XK_ISO_Left_Tab is
	pressed, but don't convert shift-tab into NSBackTabCharacter.
	Patch by Derek Fawcus <dfawcus@employees.org>.

2010-07-25  Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/WIN32Server.m:
	Fix accidental integer division intended to be float division when
	setting the timestamp on events. This was causing all timestamps
	to be rounded to the nearest second.

2010-07-25  Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/w32_GLContext.m:
	* Source/x11/XGGLContext.m:
	Apply fix for bug 29705: OpenGL subwindow positioning error
	(OpenGL subwindow position was incorrectly calculated when
	the window content view was flipped)

2010-07-25 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerEvent.m:
	Treat Shift modifiers in the same manner as other modifiers.
	This fixes the value of the shift bit (NSShiftKeyMask) in
	the modifierFlags passed to a -flagsChanged: method call.
	Without it the shift bit is inverted, as explained in
	the source comments, as X reports the modifier bits in
	force before the key was pressed/released.
	Patch by Derek Fawcus <dfawcus@employees.org>.

2010-07-25  Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/WIN32Server.m:
	When ordering out a window, use the SWP_NOACTIVATE flag on SetWindowPos
	so Windows doesn't activate/deactivate any windows when hiding a window.

	This fixes the bug where when a tooltip disappeared, it would deactivate
	the window the tooltip was over.

2010-07-07  Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/WIN32Server.m:
	* Source/win32/w32_movesize.m:
	Fix for bug #29709: Windows: Maximize button in a window title bar is
	always grayed out

2010-07-06  Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/WIN32Server.m: Tweak the conditions for incrementing the
	clickCount when handling mouse clicks: (i.e. double click detection)
	- Require a click to be within a distance (retrieved from Windows)
	   of the last click to count (previously there was no proximity check)
	- Allow clicks separated by the Windows double click time interval
	to count (e.g. if the Windows double click time interval is n,
	clicking at times 0, n, 2n, 3n would produce events with click counts
	1, 2, 3, and 4. This matches OS X behaviour. Previously, all clicks
	had to be within the windows double click time interval to count as
	one group.)

2010-06-23  Quentin Mathe <quentin.mathe@gmail.com>

	Fixed Windows backend issues introduced with r30523 where images are
	drawn at the wrong location by -[NSImage drawXXX] methods.
	See bug report #30069
	Images are also now drawn correctly with these methods in a
	rotated/scaled context unlike previously (but alpha blending still
	doesn't work properly).
	* Source/winlib/WIN32Context.m (-supportsDrawGState): Added.
	* Headers/winlib/WIN32GState.m: Added oldWorldTransform ivar.
	* Source/winlib/WIN32GState.m:
	(-setUpAppKitBaseCoordinatesForHDC:, -restoreGDIBaseCoordinatesForHDC:,
	drawGState:fromRect:toPoint:op:fraction:): Added.

2010-06-06 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m
	(-compositeGState:fromRect:toPoint:op:fraction:): Move the usage
	of _ct and source->_ct after the check whether they are set.

2010-06-01  Quentin Mathe <quentin.mathe@gmail.com>

	Fixed composite operator to behave correctly and added a new draw
	operator to get -[NSImage drawXXX] methods work exactly as Cocoa and
	improve the drawing performance in some cases.
	Eliminated all flipping checks in the backend to ensure the flipping
	remains an high-level AppKit concept.
	* Source/gsc/GSContext.m:
	(-GSdraw:toPoint:fromRect:operation:fraction:): Added.
	This method calls -drawGState:fromRect:toPoint:op:fraction:.
	* Headers/gsc/GSGState.h (-drawGState:fromRect:toPoint:op:): Added
	as an informal protocol which can be implemented by subclasses
	* Source/cairo/CairoContext.m (-supportsDrawGState): Added overriden
	implementation that enables -drawGState:fromRect:toPoint:op:fraction:.
	* Source/cairo/CairoGState.m:
	(-drawOrientationMarkersIn:): Added.
	(-DPSimage::::::): Removed flipping check.
	(-compositeGState:fromRect:toPoint:op:fraction:): Fixed to precisely
	implement the PostScript behavior which is to ignore rotation and
	scaling effect for the content but not for the destination point.
	Also documented in details since this code is complex.
	(-drawGState:fromRect:toPoint:op:fraction:): Added.

2010-05-25 Riccardo Mottola <rmottola@users.sf.net>

	* Source/x11/XGDragView.m
	* Source/gsc/GSGState.m
	Added missing imports.

2010-05-16 17:39-EDT Gregory John Casamento <greg.casamento@gmail.com>

	* Headers/win32/WIN32Server.h
	* Source/win32/w32_general.m
	* Source/win32/WIN32Server.m: Added code to re-activate the
	theme when the theme changes on Windows.

2010-05-11 Fred Kiefer <FredKiefer@gmx.de>

	* configure.ac: Make cairo the default backend. Fall back to art
	and xlib gracefully.
	* configure: Regenerate.

2010-05-10  Adam Fedor  <fedor@gnu.org>

	* Fix release documentation

2010-05-09  Adam Fedor  <fedor@gnu.org>

	* Version 0.19.0 Unstable release

2010-05-09  Adam Fedor  <fedor@gnu.org>

	* Version 0.18.0

2010-04-20 Doug Simons <doug.simons@testplant.com>

	* Source/winlib/WIN32GState.m:
	Fix problem with display location for some composited images.

2010-04-20 Doug Simons <doug.simons@testplant.com>

	* Source/win32/WIN32Server.m:
	Fix problem with key events going to window other than the key window.
	Block callbacks while setting the foreground window to prevent key/main
	window changes from cascading in a feedback loop.

2010-04-18 Eric Wasylishen <ewasylishen@gmail.com>

	* Source/winlib/WIN32FontInfo.m:
	Use DEFAULT_QUALITY for fonts instead of ANTIALISED_QUALITY.

	ANTIALISED_QUALITY forces small text to be non-antialised,
	which looks out of place compared with most Windows apps.

2010-04-15 Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/w32_create.m:
	Use the default icon size when loading the app ico file
	Otherwise, the first icon in the file would be used.

2010-04-14 Jonathan Gillaspie <jonathan.gillaspie@testplant.com>

  * Source/win32/WIN32Server.m:  Have non-key, non-main windows
  that order front not become active.  Also don't bring windows
  that are ordering out to the foreground first.

2010-03-25 Fred Kiefer <FredKiefer@gmx.de>

	* Source/art/ftfont.m,
	* Source/art/ftfont-old.m,
	* Source/xlib/XGGState.m: Add more missing imports.

2010-03-25 Riccardo Mottola <rmottola@users.sf.net>

	* Source/gsc/GSGState.m: import NSValue, include -> import
	* Source/xlib/XGGState.m: added missing imports

2010-03-24 Doug Simons <doug.simons@testplant.com>

	* Source/winlib/WIN32FontInfo.m: Include NSDebug.h for
	definition of NSDebugLLog().

2010-03-24 Doug Simons <doug.simons@testplant.com>

	* Source/win32/WIN32Server.m: Ignore duplicate mouse down
	events generated by first click in a window.

2010-03-19 Eric Wasylishen <ewasylishen@gmail.com>

	* Headers/win32/w32_movesize.h:
	* Source/win32/w32_movesize.m:
	* Source/win32/WIN32Server.m: Call displayIfNeeded on
	the window when WM_SIZING is recieved so windows redraw
	while being resized.

2010-03-19 Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/WIN32Server.m: Report deltaX and deltaY
	for mouse move events, like OS X does.

2010-03-19 Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/WIN32Server.m: Process WM_SYSKEYDOWN
	and WM_SYSKEYUP messages - these are delivered instead
	of normal WM_KEYDOWN and WM_KEYUP messages when the
	ALT key is presesd. (and also F10).

	This fixes NSAlternateKeyMask not being set.

2010-03-13 Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/w32_GLcontext.m: Set the WS_DISABLED flag
	on the OpenGL subwindow so mouse/keyboard events get
	redirected to the parent window.
	Previously mouse/keyboard events were being eaten by
	the OpenGL subwindow - now they work as expected.

2010-03-13 Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/w32_GLcontext.m:
	Make more than one NSOpenGLView in an application work.

	Win32GLContext was using the hDC stored in the pixel format
	object in a few places, instead of getting it from the
	Win32Subwindow object.

2010-03-13 Eric Wasylishen <ewasylishen@gmail.com>

	* Headers/win32/WIN32Server.h:
	* Source/win32/WIN32Server.m: Add support for horizontal
	mousewheel scrolling

010-03-13 Eric Wasylishen <ewasylishen@gmail.com>

	* Source/win32/WIN32Server.m: Fix handling of mousewheel events.
	The WM_MOUSEWHEEL message uses screen coordinates, so convert
	them to client coordinates.

2010-03-13 Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSContext.m (-GSDrawImage::):
	Bug fix by Anibal Rindisbacher <anibal784@gmail.com>

2010-03-12 Doug Simons <doug.simons@testplant.com>

	* Source/win32/WIN32Server.m: Capture the mouse to get mouse
	moved events outside of a window while a button is down.

2010-03-11 Doug Simons <doug.simons@testplant.com>

	* Source/win32/WIN32Server.m: Prevent generating spurious
	NSMouseMoved events when the mouse hasn't actually moved.

2010-03-08 Doug Simons <doug.simons@testplant.com>

	* Source/win32/WIN32Server.m: Oops, I don't know how the
	extra 'u' got in there... fixed.

2010-03-08 Doug Simons <doug.simons@testplant.com>

	* Source/win32/WIN32Server.m: When the shift key is down,
	charactersIgnoringModifiers should be uppercase (this is
	consistent with Cocoa and the x11 backend.

2010-03-07 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m: Only use calls for
	cairo_pattern_set_extend() on cairo > 1.6.0.
	Patch suggested by Eric Wasylishen <ewasylishen@gmail.com>.

2010-03-05 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/cairo/CairoGState.m:
	* Source/gsc/GSGState.m:
	Use the -zone method rather than GSObjCZone()

2010-02-24 16:45-EST Gregory John Casamento <greg.casamento@gmail.com>

	* Source/win32/WIN32Server.m: Added a boolean to control if
	callbacks are honored so that we can ignore the
	SetActiveWindow(...) call when windows are resigned.  Otherwise
	this causes some issues and could result in an inconsistent state.
	* Source/winlib/WIN32GState.m: Moved AlphaBlend to seperate
	function so that it can be called elsewhere.

2010-02-20 Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSStreamContext.m
	* Headers/cairo/CairoFontInfo.h
	* Source/cairo/CairoFontInfo.m
	* Source/cairo/CairoGState.m
	* Source/winlib/WIN32FontInfo.m
	* Source/art/ftfont.m
	* Source/art/ftfont-old.m
	* Headers/xlib/GSXftFontInfo.h
	* Headers/xlib/XGFontSetFontInfo.h
	* Source/xlib/XGFontSetFontInfo.m
	* Source/xlib/GSXftFontInfo.m
	* Source/xlib/XGFont.m: Adjust to the CGFloat change for NSFont
	and NSAffineTransform done in base and gui.

2010-02-11  Nicola Pero  <nicola.pero@meta-innovation.com>

	* Documentation/Back/GNUmakefile: Do not try including the
	non-existing GNUmakefile.local file.
	* Documentation/GNUmakefile: Same change.
	* Fonts/GNUmakefile: Same change.
	* Source/winlib/GNUmakefile: Same change.
	* Tools/GNUmakefile: Same change.

	* Fonts/GNUmakefile.postamble (before-uninstall): Remove
	back-resources_INSTALL_DIR if empty.

2010-02-10 Eric Wasylishen <ewasylishen@gmail.com>

	* Source/x11/XGServerWindow.m:
	* Source/x11/XGServerEvent.m:
	* Headers/x11/XGGeneric.h: Handle horizontal scrolling events

2010-02-07 03:37-EST Gregory John Casamento <greg.casamento@gmail.com>

	* Headers/win32/WIN32Server.h: Remove HOTKEY method.
	* Source/win32/w32_general.m: Remove HOTKEY method.
	* Source/win32/WIN32Server.m: Remove call to HOTKEY method.  Added
	function "mask_for_keystate(..)" to implement modifier mappings
	on Windows.   Also changed process_key_event to use the new function
	and changed the call to ToUnicode to use a blank array instead of
	modifying the existing keyState array since this was returning the
	characters with the modifiers still applied.

2010-02-05 16:31-EST Gregory John Casamento <greg.casamento@gmail.com>

	* Headers/win32/WIN32Server.h: Added declaration for decodeWM_HOTKEY:...
	* Source/win32/WIN32Server.m: Added call to method decodeWM_HOTKEY:...
	* Source/win32/w32_general.m: Added method decodeWM_HOTKEY:...

2010-01-26 Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/w32_text_focus.m: Re-enable the focus in event.
	* Source\win32\WIN32Server.m (-movewindow::, -placewindow::): Use
	the SWP_NOACTIVATE flag to pervent window activation.
	* Source\win32\WIN32Server.m (-setinputstate::): Set active on
	main not key.

2010-01-26 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XWindowBuffer.m (+windowBufferForWindow:depthInfo:):
	Merge the two checks for xshm.
	* Source/art/ftfont.m (-initWithFontName:...screenFont:):
	Initialize unicodeCmap to -1 to be able to detect missing unicode
	encoding in a font.

2010-01-25 04:13-EST Gregory John Casamento <greg.casamento@gmail.com>

	* Source/win32/w32_create.m: (-decodeWM_CREATEParams:::) add
	code to load and set the HICON into the window.  Currently,
	an .ico file with the same name as the image specified in
	NSIcon or CFBundleIconName needs to be provided in the
	resources.

2010-01-22 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XWindowBuffer.m (+windowBufferForWindow:depthInfo:)
	(test_xshm): Don't give up on xshm when pixmaps aren't supported.
	Based on proposal by Derk Fawcus <dfawcus+lists-gnustep-dev@employees.org>.

2010-01-22  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Source/x11/XWindowBuffer.m (+windowBufferForWindow:depthInfo:):
	* Source/art/ARTGState.m (-GSSetDevice:):
	* Source/cairo/XGCairoXImageSurface.m (-initWithDevice:):
	Fix bug #28590 (with a little help from Fred Kiefer).

2010-01-21 15:45-EST Riccardo Mottola <rmottola@users.sf.net>
	Committed by: Gregory John Casamento <greg.casamento@gmail.com>

	* Source/win32/w32_text_focus.m: Correction for extra event which
	was causing main/key windows to get out of sync in the backend and
	gui.

2010-01-14  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Source/x11/XGServerEvent.m (-processEvent:):
	* Source/x11/XGServerWindow.m (-_wm_state:, -_ewmh_state, -_checkStyle,
	-_rootWindowForScreen:, -window::::, -nativeWindow:::::): Revise
	detection of window miniaturization and deminiaturization based on
	ICCCM WM_STATE property.
	* Source/x11/XGServerWindow.m (-miniwindow:): Add special case for
	metacity window manager to avoid miniaturizing shaded windows.

2010-01-14 05:41-EST Gregory John Casamento <greg.casamento@gmail.com>

	* Headers/win32/WIN32Server.h: Added decodeWM_MOUSEACTIVATE:..
	* Source/win32/w32_general.m: Added call to decodeWM_COMMAND:
	to -[GSTheme processCommand:] the theme callback which handles
	native menus,

2010-01-12 Fred Kiefer <FredKiefer@gmx.de>

	* Tools/xpbs.m: Add missing comma after name of selection atom.

2010-01-10 Riccardo Mottola <rmottola@users.sf.net>

	* Source/win32/w32_activate.m: generate GSAppKitWindowLeave leave
	events.

2010-01-08 Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/w32_text_focus.m: Small clean up in focus handling.

2009-12-19 Eric Wasylishen <ewasylishen@gmail.com>

	* Source/cairo/CairoGState.m:
	-DPSsetflat: and -DPScurrentflat should not have been transforming
	the flatness value with the current transformation matrix.
	The effect of this could be seen in the Apple BezierPathLab example;
	zooming in on the circle caused it to look more and more like a
	polygon.

2009-12-11 Eric Wasylishen <ewasylishen@gmail.com>

	* Source/cairo/CairoGState.m:
	Add a call to cairo_pattern_set_extend(pattern, CAIRO_EXTEND_PAD);
	on the pattern used to draw images. This keeps the edges of images
	crisp when the are scaled up.
	The description from the Cairo docs is: "pixels outside of the
	pattern copy the closest pixel from the source".

2009-11-19 Doug Simons

	* Source/x11/XGServerWindow.m:
	Make sure we return current window bounds.

2009-11-16 Riccardo Mottola <rmottola@users.sf.net>

	* Source\win32\WIN32Server.m: Remove left-over call to a mouse down
	event in a mouse-up

2009-11-10 Richard Frith-Macdonald <rfm@gnu.org>

	* Source\win32\WIN32Server.m: Track mouse button state so that when
	mouse down events are lost (which appears occasionally to be the case)
	we can simulate the missing event.

2009-11-08 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-windowDevice:): Don't return a
	static variable as the window device.

2009-11-05 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m: Set the colour for all text drawing.

2009-11-04 Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSGState.m (-setColor:state:): Don't handle alpha specially.
	* Source/cairo/CairoGState.m: Clean up last change.

2009-11-04 Richard Frith-Macdonald <rfm@gnu.org>

	* Source\winlib\WIN32GState.m: Fixes for read image.
	* Source\win32\WIN32Server.m: Use layered window for alpha.

2009-11-03 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m: Set the fill or stroke colour
	immediatly before the drawing.
	* Source/art/ARTGState.m (-setColor:state:): Handle stroke colour
	correctly.

2009-11-03 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-compositeGState:...): Use the
	offset adjustment for cairo > 1.8 in the general case.

2009-11-01 Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/WIN32GState.m: first hack at GSReadRect implementation.

2009-11-01  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Source/x11/XGServerWindow.m (setWindowHintsForStyle): Revert
	change to (Motif) window style hints that would add a border
	around appicons and miniwindows on some window managers.

	* Source/x11/XGServerWindow.m (-miniwindow): Remove code that can
	make programs unresponsive during window miniaturization.

2009-10-31 Thomas Gamper <icicle@cg.tuwien.ac.at>

	* Source/x11/XGGLFormat.m
	Check explicitly for GLX_SAMPLES and GLX_SAMPLE_BUFFERS.

2009-10-29 Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSGState.m (-_fillRect:withPattern:): Convert the
	drawing coordinate back in user space.

2009-10-28 Thomas Gamper <icicle@cg.tuwien.ac.at>

	* Source/x11/XGGLFormat.m
	Check for GLX_VERSION_1_4.

2009-10-28 Riccardo Mottola <rmottola@users.sf.net>

	* Source/x11/XGGLFormat.m
	cleaned up c99-isms

2009-10-25 Thomas Gamper <icicle@cg.tuwien.ac.at>

	* Source/x11/XGServerWindow.m
	Implement setMouseLocation:onScreen:.

2009-10-25 Thomas Gamper <icicle@cg.tuwien.ac.at>

	* Source/x11/XGGLContext.m
	* Source/x11/XGGLFormat.m
	* Headers/x11/XGOpenGL.h
	Clean up OpenGL stuff, reformat code and add Multisampling
	support.

2009-10-23 Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSContext.m,
	* Headers/gsc/GSGStateOps.h,
	* Source/gsc/GSGState.m: Empty definitions of gradient methods.
	* Source/cairo/CairoGState.m: Simple cairo gradient implementation.

2009-10-20 Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/WIN32GState.m: Small correction of last change.

2009-10-19 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/gsc/GSGStateOps.h,
	* Source/gsc/GSGState.m,
	* Source/art/path.m,
	* Source/art/ARTGState.m,
	* Source/cairo/CairoGState.m,
	* Source/xlib/XGGState.m,
	* Source/winlib/WIN32GState.m: Implement pattern colours for all backends.

2009-10-18 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XGServerWindow.m:
	* Source/x11/XGServerEvent.m:
	Experimental code to try to spot window deminiaturisation and send
	an event to the gui so that it knows about it.

2009-07-31  Adam Fedor  <fedor@gnu.org>

	* Version 0.17.1

2009-07-27 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoFontEnumerator.m,
	* Source/xlib/GSXftFontInfo.m: Use DejaVu as another fallback
	font, as Bitstream Vera and FreeSans are no longer supplied
	directly by Debian.

2009-07-13 Fred Kiefer <FredKiefer@gmx.de>

        * Source/winlib/WIN32GState.m (-_paintPath:) Only draw when the
	fill/stroke colour has a non zero alpha.

2009-07-10 Fred Kiefer <FredKiefer@gmx.de>

        * Source/cairo/CairoGState.m
	(-compositeGState:fromRect:toPoint:op:fraction:): Add hack to
	avoid scrolling problem for cairo > 1.8.

2009-05-31 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XWindowBuffer.m: Protect the XSHM code parts with
	#ifdef statements.

2009-05-31 Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSContext.m (-DPScomposite:...:, -DPSdissolve:...:) Map
	onto GScomposite:toPoint:fromRect:operation:fraction:.
	* Source/gsc/GSGState.m (-compositeGState:fromRect:toPoint:op:,
	-dissolveGState:fromRect:toPoint:delta:) Map onto
	compositeGState:fromRect:toPoint:op:fraction:.
        * Source/winlib/WIN32GState.m (-compositeGState:fromRect:toPoint:op:,
	-dissolveGState:fromRect:toPoint:delta:),
	* Source/xlib/XGGState.m (-compositeGState:fromRect:toPoint:op:,
	-dissolveGState:fromRect:toPoint:delta:),
        * Source/cairo/CairoGState.m (-compositeGState:fromRect:toPoint:op:,
	-dissolveGState:fromRect:toPoint:delta:): Remove these methods.
	* Source/art/composite.m
	(-compositeGState:fromRect:toPoint:op:fraction:): Added.

2009-05-10  Adam Fedor  <fedor@gnu.org>

	* Version 0.17.0

2009-04-04 Riccardo Mottola <rmottola@users.sf.net>

	* Source/x11/XGGLFormat.m,
	Source/x11/XGGLContext.m: reorder instructions for c89 compatibility

2009-03-28 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XWindowBuffer.m (+windowBufferForWindow:depthInfo:):
	Return an autorelease instance.
	* Source/cairo/XGCairoXImageSurface.m (-initWithDevice:),
	* Source/art/ARTGState.m (-GSSetDevice:): Adopt callers.

2009-03-12 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerEvent.m: Correct formatting.

2009-03-12 Thomas Gamper <icicle@cg.tuwien.ac.at>

	* Source/x11/XGServerEvent.m:
	Implement key repeat support.

2009-03-07 Xavier Glattard <xavier.glattard@online.fr>

	* Source/x11/XGServerEvent.m:
	Fix a bug (from rev.28036) and consolidate the computing of
	expose rectangle of subwindows.

2009-03-06 Xavier Glattard <xavier.glattard@online.fr>

	* Source/x11/XGGLFormat.m:
	Missing var initialization.

2009-03-04 Xavier Glattard <xavier.glattard@online.fr>

	* Source/x11/XGServerEvent.m,
	* Source/x11/XGGLContext.m,
	* Source/x11/XGGLFormat.m:
	Fix typo and oversights - Comes along with the previous changes.

2009-03-04 Xavier Glattard <xavier.glattard@online.fr>

	* Source/x11/XGGLContext.m,
	* Source/x11/XGServerWindow.m,
	* Source/x11/XGServerEvent.m,
	* Source/win32/w32_GLcontext.m,
	* Source/win32/w32_windowdisplay.m,
	* Source/win32/WIN32Server.m:
	Two improvements related to OpenGL.
	1) prevent the backing store to be flushed after a call to [-drawRect:]
	(and fix a small bug is win32 window style)
	2) handle expose/paint events with retained/buffered backing store.

	* Source/x11/XGGLFormat.m,
	* Source/win32/w32_GLformat.m:
	Declare some new pixel format attributes.

	* Source/x11/XGGLContext.m,
	* Source/win32/w32_GLcontext.m:
	Undo Rev27944 related to NSRECT conversion.

2009-02-21 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGGLContext.m (XGXSubWindow -initWithView:visualInfo:):
	Set black background pixel.

2009-02-21 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGGLContext.m (XGXSubWindow -initWithView:visualInfo:)
	* Source/win32/w32_GLcontext.m (Win32Subwindow -initWithView:):
	Remove special code for different window border handling.

2009-02-11 Riccardo Mottola <rmottola@users.sf.net>

	* Source/win32/WIN32Server.m: Handle Alt-Gr (bug #25397)

2009-02-11 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XGServerWindow.m: Minor fixes to compile with GC

2009-02-08  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Source/x11/XGServerWindow.m (-titlewindow::, -docedited::): Add
	an asterisk before the window's title if its document is edited
	and the window manager is not capable of displaying the document's
	status (i.e., any window manager other than Window Maker for now).

2009-02-08  Matt Rice  <ratmice@gmail.com>

	* Source/x11/XGGLContext.m (-[XGXSubWindow initWithView:visualInfo:]):
	Use the depth provided by the VisualInfo not the parent window.

2009-02-06 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-copyWithZone:): Correction to last
	change.

2009-02-05 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-copyWithZone:): Better handling of
	clip copying when the clip is not representable by cairo.

2009-02-05 Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/XGBitmap.m: Fix some compiler warnings.

2009-02-03 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/win32/WIN32Server.m (-setParentWindow:forChildWindow:),
	Temporarily comment out method implementation as it was preventing
	popup menus from working.

2009-01-30 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/win32/WIN32Server.m: fix typo
	* Source/x11/XGServerWindow.m: ditto

2009-01-29 Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m (-setPartentWindow:forChildWindow:),
	* Source/x11/XGServerWindow.m (-setPartentWindow:forChildWindow:):
	Implement new method.
	* Source/cairo/CairoGState.m (-compositeGState:...): Adjust y
	coordinate of point.

2009-01-25 Riccardo Mottola <rmottola@users.sf.net>

	* Source/art/image.m: Fix for big-endiam machines

2009-01-24 Riccardo Mottola <rmottola@users.sf.net>

	* Source/art/image.m: Optimized and correct handling of 16 bit in
	_get_8_bits()

2009-01-17  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Source/x11/XGServerWindow.m (_setSupportedWMProtocols:,
	_checkStyle:, window::::, orderwindow:::): Set the WM protocols
	supported by a window according to its style mask.

2009-01-13 Fred Kiefer <FredKiefer@gmx.de>

	* Source/art/ftfont.m: Give more information on failed font face access.

2008-12-21  Adam Fedor  <fedor@gnu.org>

	* Version 0.16.0

2008-12-19  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Source/x11/XGServerEvent.m (check_modifier): Fix an issue where
	modifier key settings could be set incorrectly.

2008-12-19  Nicola Pero <nicola.pero@meta-innovation.com>

	* All GNUmakefiles: removed GNUSTEP_CORE_SOFTWARE=YES and
	added PACKAGE_NAME=gnustep-back.
	* GNUmakefile: Export PACKAGE_NAME to reduce chances of a problem
	if a GNUmakefile in a subdirectory is missing it.

2008-12-18  Nicola Pero <nicola.pero@meta-innovation.com>

	* All GNUmakefiles: added GNUSTEP_CORE_SOFTWARE=YES at the
	beginning.
	* GNUmakefile: Export GNUSTEP_CORE_SOFTWARE to reduce chances of a
	problem if a GNUmakefile in a subdirectory is missing it.

2008-12-17 Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/WIN32FontInfo.m (-coveredCharacterSet): Set cbThis
	element of GLYPHSET structure before calling Windows funtion.

2008-12-17 Richard Frith-Macdonald <rfm@gnu.org>

	* Tools/gpbs.m: Remove use of private method for connection keepalive.
	Keepalive is now enabled in base when necessary.

2008-12-15  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Source/x11/XGServerEvent.m (-processEvent:): Ignore
	_NET_STATE_WM property changes with Window Maker as it causes
	problems with hidden windows.
	Add a workaround for Window Maker so that unhidden windows
	correctly show their document edited status.

2008-12-11 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoContext.m (-GSDrawImage::): Correct test
	whether image conversion is needed.

2008-12-10  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Source/x11/XGServerEvent.m (-runLoopShouldBlock:): Add method to
	avoid blocking the run loop when the X event queue is not empty.

2008-12-02 Richard Frith-Macdonald <rfm@gnu.org>

	* GNUmakefile:
	* Fonts/GNUmakefile:
	* Tools/GNUmakefile:
	* Source/winlib/GNUmakefile:
	* Source/art/GNUmakefile:
	* Source/GNUmakefile:
	* Source/cairo/GNUmakefile:
	* Source/xlib/GNUmakefile:
	* Source/win32/GNUmakefile:
	* Source/x11/GNUmakefile:
	* Source/gsc/GNUmakefile:
	* Source/xdps/GNUmakefile:
	* Documentation/Back/GNUmakefile:
	* Documentation/GNUmakefile:
	Don't override installation domain ... fix for bug #24671

2008-11-30  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* install.sh: Fix header syntax and provide default for make
	command argument.

2008-11-20 Richard Frith-Macdonald <rfm@gnu.org>

	* Tools/gpbs.m: Use new private method for connection keepalive as
	we need it on windows.

2008-11-20  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Source/x11/XGServerWindow.m ([XGServer -windowlist]): Implement
	a fix for bug #24707.

2008-11-14  Wolfgang Lux  <wolfgang.lux@gmail.com>

	* Tools/gpbs.m (init): Don't change SIGABRT handler to prevent
	infinite recursion on abort().

	* Tools/xpbs.m (+receivedEvent:type:extra:forMode:): Don't cache
	number of pending events. Prevents an issue where gpbs could block
	in XNextEvent and other applications contacting the pasteboard
	server become unresponsive.

2008-11-06 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoContext.m (-GSDrawImage::): Convert the
	bitmap, when the format is unsupported.

2008-10-26 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XWindowBuffer.m (test_xshm): Check whether the X
	server supports shm pixmaps.

2008-10-24 Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m (-setalpha::): Implement transparent
	windows.
        * Source/winlib/WIN32GState.m (-DPSimage:...:): Call
	SetStretchBltMode() before scaling a bitmap.

2008-10-24 Fred Kiefer <FredKiefer@gmx.de>

	* Tools/xpbs.m (+initializePasteboard): Use XInternAtom when
	XInternAtoms isn't available.
	Patch by Riccardo Mottola <multix@ngi.it>.
	* configure.ac: Check for XInternAtoms.
	* configure,
	* config.h.in: Regenerate.

2008-10-24 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServer.m (-visualForScreen:, -depthForScreen:):
	New methods that hide RContext details.
	* Headers/x11/XGServer.h: Declare these new methods.
	* Source/x11/XWindowBuffer.m: Get the default visual and depth
	from the XGServer.

2008-10-22 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-_checkStyle:): Correct code
	for double parent handling.
	Patch by Wolfgang Lux <wolfgang.lux@gmail.com>.

2008-10-17 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/win32/WIN32Geometry.h (MSScreenRectToGS, GSScreenRectToMS),
	* Source/win32/WIN32Server.m,
	* Source/win32/w32_movesize.m:
	Remove unused parameters from these functions and adjust callers.

2008-10-17 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/win32/WIN32Server.h,
	* Source/win32/WIN32Server.m,
	* Source/win32/w32_activate.m,
	* Source/win32/w32_movesize.m,
	* Source/win32/w32_general.m: Removed unused and unneeded code
	left over from the last cleanup. This code was mostly setting
	server flags that never got read or using falgs that never were set.

2008-10-14 Fred Kiefer <FredKiefer@gmx.de>

        * Source/winlib/WIN32GState.m: Removed unneeded code. General cleanup.
        * Source/winlib/WIN32GState.m (-DPSimage:...:): Scale and rotate
	images correctly.
        * Source/winlib/WIN32GState.m (-compositeGState:...fraction:):
	Position images on scaled views better.

2008-09-14 Fred Kiefer <FredKiefer@gmx.de>

        * Source/art/ARTContext.m (-setupDrawInfo): Moved code from here
	to...
	* Source/x11/XGServer.m (-getForScreen:pixelFormat:masks:::):
	... here, including helper functions. Commented out this code and
	replaced it by a different approach.
	* Headers/x11/XGServer.h: Declare this new method.

2008-09-14 13:17-EDT Gregory John Casamento <greg_casamento@yahoo.com>

	* install.sh: Adding install script for use by compile-all.

2008-08-19 Fred Kiefer <FredKiefer@gmx.de>

        * Source/art/ARTContext.m (-GSSetDevice:::): Only call
	setupDrawInfo once.
        * Source/art/ARTContext.m (-setupDrawInfo): Try to handle
	endianess differance better.
        * Source/art/ARTContext.m (-initializeBackend): Call
	artcontext_setup_gamma().
	* Source/art/blit.h,
	* Source/art/blit-main.m:  New function artcontext_setup_gamma()
	split off from artcontext_setup_draw_info().

2008-08-14 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-_ewmh_isMinimized:): Correct
	indentation.
	* Source/x11/XGServerEvent.m (-receivedEvent:type:extra:forMode:):
	For PropertyNotify cache the window first.

2008-07-19 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-window::::): For EWMH window
	enable property change notifications.
	* Source/x11/XGServerWindow.m (-_ewmh_isMinimized:): Check whether
	the window is minimized.
	* Headers/x11/XGServerWindow.h (-_ewmh_isMinimized:): Declare new
	method.
	* Source/x11/XGServerEvent.m: Handle case when window gets minimized.
	* Headers/x11/XGGeneric.h: Add atom for hidden state.
	Patch by Hubert Chathi <hubert@uhoreg.ca>.

2008-07-12 Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/GSXftFontInfo.m (-setupAttributes:),
	* Source/xlib/XGFontSetFontInfo.m (-setupAttributes:),
	* Source/xlib/XGFont.m (-setupAttributes:),
	* Source/art/ftfont.m (-setupAttributes:),
	* Source/art/ftfont-old.m (-setupAttributes): Correct the sign of
	the descender in the bounding box.

2008-07-12 Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/GSXftFontInfo.m (-setupAttributes:),
	* Source/xlib/XGFontSetFontInfo.m (-setupAttributes:),
	* Source/xlib/XGFont.m (-setupAttributes:): Correct the setting of
	fontBBox, used for boundingRectForFont.

2008-07-11 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-setinputstate:): Disable new code,
	as it does not work on KDE 4.

2008-07-08 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-setinputfocus:): For EWMH window
	managers set the user time before requesting focus.
	* Source/x11/XGServerWindow.m (-setinputstate:): For EWMH window
	managers set active window status.
	Based on patch by Hubert Chathi <hubert@uhoreg.ca>.

2008-06-26 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-copyWithZone:): Use a runtime
	version check and adjust from > to >= 1.6.0.
	* Source/cairo/CairoFontInfo.m (-setupAttributes): Slightly better
	error checks.

2008-06-14  Adam Fedor  <fedor@gnu.org>

	* Version 0.14.0

2008-06-12 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerEvent.m,
	* Source/x11/XGDragView.m: Convert X event millisecond timestamp
	to NSEvent second timestamp.

2008-05-25  Adam Fedor  <fedor@gnu.org>

	* Revert library license version to 2 until applications
	can be converted

2008-06-07 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-copyWithZone:): Don't use special
	clip adjustment for cairo > 1.6.0, as this got fixed there.

2008-06-01 18:00-EDT Gregory John Casamento <greg_casamento@yahoo.com>

	* Headers/x11/XGGeneric.h:
	* Source/x11/XGServerWindow.m: Added code to automatically make
	any window which uses the NSDesktopWindowLevel also be omnipresent.
	This capability will be added as a style later.

2008-05-28 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-copyWithZone:): Avoid double
	allocation of dashes memory.
	* Source/gsc/GSGState.m (-DPSrectfill::::, -DPSrectstroke::::,
	-DPSrectclip::::): Don't use autoreleased objects.

2008-05-27 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (check_modifier,
	-receivedEvent:...): Faster checking for modifiers.

2008-05-27 Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/GSXftFontInfo.m (-coveredCharacterSet): Moved the
	swapping into the loop, where the actual data is available.
	Patch by Sebastian Reitenbach <sebastia@l00-bugdead-prods.de>.

2008-05-25  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Fail if libXext or libXt not found when building
	x11 server. Set have_freetype variable.

2008-05-25  Nicola Pero  <nicola.pero@meta-innovation.com>

	* Tools/GNUmakefile.postamble: Use GNUSTEP_DOC instead of
	GNUSTEP_DOCUMENTATION, and GNUSTEP_DOC_MAN instead of
	GNUSTEP_DOCUMENTATION_MAN.

2008-05-22  Adam Fedor  <fedor@gnu.org>

	* Source/cairo/CairoContext.m (-GSSetDevice:::): Fix memory leak.

2008-05-16  Adam Fedor  <fedor@gnu.org>

	* Source/XGCommonFont.m (XGFontCacheName): New function to standardize
	display name (and handle new Mac OS X display names).
	* Tools/font_cacher.m ([XFontCacher -getPathFor:display]): Use it.
	* Source/xlib/XGFontManager.m (cache_name):  Use it.

2008-04-11 Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/GSXftFontInfo.m (Ones): Correct the parameter name.
	* Source/winlib/WIN32FontInfo.m (-glyphIsEncoded:): Add parameter
	to windows call to supress defaults glyphs for missing ones.

2008-04-08 Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/XGGState.m (-_paintPath:, -_doComplexPath:...):
	Correct the handling of complex path filling. This is needed for
	the glyph drawing.

2008-04-07 Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/GSXftFontInfo.m
	(-appendBezierPathWithGlyphs:count:toBezierPath:) Implement this
	method with code copied over from the art backend.

2008-04-07 Fred Kiefer <FredKiefer@gmx.de>

	* Source/art/ftfont.m,
	* Source/art/ftfont-old.m (-glyphPacking): Add missing method.
	* Source/gsc/GSContext.m
	(-appendBezierPathWithPackedGlyphs:path:): Send on to gstate.
	* Headers/gsc/GSGStateOps.h
	(-appendBezierPathWithPackedGlyphs:path:): New method.
	* Source/gsc/GSGState.m (-DPScharpath:,
	-appendBezierPathWithPackedGlyphs:path:): Implement these methods.
	* Source/xlib/GSXftFontInfo.m (-coveredCharacterSet) Add missing
	method.

2008-04-04 Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/WIN32FontInfo.m
	(-appendBezierPathWithGlyphs:count:toBezierPath:): New method.
	Patch by Christopher Armstrong <carmstrong@fastmail.com.au>.
	* Source/art/ftfont.m,
	* Source/art/ftfont-old.m: Moved ligature handling code from here
	to gui.
	* Source/cairo/CairoFontInfo.m (-glyphIsEncoded:): Report all
	ligatures as not supported, as we have no way to determine if they
	exist in the font.

2008-04-03 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoFontInfo.m (-appendBezierPathWithGlyphs:...):
	Correct implementation.
	* Source/cairo/CairoGState.m (-DPScharpath::): Correct implementation.

2008-03-29 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoFontEnumerator.m,
	* Source/cairo/CairoFaceInfo.m,
	* Source/cairo/Win32CairoSurface.m,
	* Source/cairo/CairoFontInfo.m,
	* Source/cairo/Win32CairoGlitzSurface.m,
	* Source/cairo/CairoGState.m:
	Clean up and better error check and reporting on cairo and malloc calls.

2008-03-19  Adam Fedor  <fedor@gnu.org>

	* Version 0.13.2

	* configure.ac: Add --without-freetype option

2008-03-17 21:01-EST Gregory John Casamento <greg_casamento@yahoo.com>

	* Source/gsc/GSStreamContext.m: Add back implementation for
	DPSrectclip::::.

2008-03-15 19:35-EST Gregory John Casamento <greg_casamento@yahoo.com>

	* Source/gsc/GSStreamContext.m: Correct call in NSDrawBitmap::::...
	to add NSHeight, not NSWidth to the y coordinate if it's flipped.

2008-03-15 17:48-EST Gregory John Casamento <greg_casamento@yahoo.com>

	* Source/gsc/GSStreamContext.m: Added implementation for GSDrawImage.

2008-03-13 19:37-EST Gregory John Casamento <greg_casamento@yahoo.com>

	* Source/gsc/GSStreamContext.m: Remove implementation of
	DPSrectclip:::: since it was causing issues with printing.  Will
	investigate further to see if this is the correct fix.

2008-03-09 Fred Kiefer <FredKiefer@gmx.de>

        * Source/art/ARTContext.m (-GSDrawImage:): Remove this hack again.
	* Source/art/image.m (_image_get_color_rgb_cmyk_gray,
	_image_get_color_rgb_8):  Make sure the image gets unpremultied in
	all cases.

2008-03-08 Fred Kiefer <FredKiefer@gmx.de>

	* Source\win32\WIN32Server.m (-exwindowStyleForGSStyle:):
	New method used in window::::, stylewindow: and styleoffsets:::::.
	* Headers\win32\WIN32Server.h,
	* Source\win32\WIN32Server.m (-resetForGSWindowStyle:w32Style:):
	Remove method.

2008-03-06 Richard Frith-Macdonald <rfm@gnu.org>

	* Headers\win32\WIN32Server.h: make 'orderedIn' and 'level' 32bit
	fields at start of structure so that we can easily use GetWindowLong()
	and SetWindowLong() with them.
	* Source\win32\w32_movesize.m:
	* Source\win32\WIN32Server.m:
	Change to accessing 'orderedIn' and 'level' directly using
	GetWindowLong() and SetWindowLong() so that code works when windows
	are owned by another app.

2008-03-06 Richard Frith-Macdonald <rfm@gnu.org>

	* Source\win32\w32_movesize.m: Bypass all existing code to send a
	resize when a window is minimised ... just call the miniaturise:
	method of the gui.  Should fix bug 22274

2008-03-06 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-copyWithZone:): Correct the cairo
	version #ifdef.

2008-03-06 Richard Frith-Macdonald <rfm@gnu.org>

	* Source\win32\WIN32Server.m: Improve window level code ... when moving
	a window to the top of a level, jump it right to the top of the window
	z-order so that it is above any non-gnustep windows.
	* Source\win32\w32_movesize.m: If a window is jumped to the top of the
	z-order and hence breaks the level rules, use a bubble sort to get
	the windows back in level order by raising any windows which are
	lower than they should be.

2008-03-05 Richard Frith-Macdonald <rfm@gnu.org>

	* Headers\win32\WIN32Server.h: Add fields to track window level/ordering
	* Source\win32\WIN32Server.m: add code to implement window levvel/order
	management. NB. This is incomplete ... it seems that direct user action
	like clicking on a window will reorder it without going through the
	orderwindow::; method, so we need to deal with that somehow.
	* Source\win32\w32_movesize.m: Ensure that desktop level windows are
	pinned to the bottom.

2008-03-04 Xavier Glattard <xavier.glattard@online.fr>

	* configure.ac,
	  configure
	  : Display warning msgs when cairo backend is selected on win32
	* Headers/cairo/Win32CairoSurface.h,
	  Headers/cairo/Win32CairoGlitzSurface.h,
	  Source/cairo/Win32CairoSurface.m,
	  Source/cairo/Win32CairoGlitzSurface.m,
  	  Source/cairo/CairoContext.m,
  	  : Cairo and Cairo/Glitz experimental backends on win32

2008-02-26 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-_checkStyle:): Restructure code
	for double parent handling to avoid wrong computation path.

2008-02-25 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServer.m (-_screenContextForScreen:): Remove wrong
	local variable declaration and reorder code.
	* Source/x11/XGServer.m (-_initXContext:): Don't create default screen.

2008-02-15 Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m (-windowStyleForGSStyle:): Rewrite to
	handle all combination of styles.

2008-02-14 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/win32/WIN32Server.h,
	* Source/win32/WIN32Server.m,
	* Source/win32/w32_activate.m,
	* Source/win32/w32_movesize.m,
	* Source/win32/w32_create.m,
	* Source/win32/w32_general.m,
	* Source/win32/w32_text_focus.m,
	* Source/win32/w32_windowdisplay.m:
	General cleanup and reformatting.
	* Source/win32/w32_Events.h: Removed this file.

2008-02-14 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/win32/WIN32Server.h: Extend WIN_INTERN with
	backingStoreEmpty flag.
	* Source/win32/WIN32Server.m (-windowbacking::): Set
	backingStoreEmpty to YES;
	* Source/win32/w32_windowdisplay.m: Use backingStoreEmpty to
	determine drawing method.
	Patch by Christopher Armstrong <carmstrong@fastmail.com.au>.

2008-02-14 Fred Kiefer <FredKiefer@gmx.de>

	* Tools/win32pbs.m (-receivedEvent:...forMode:): Don't call NSApp
	to terminate the program.

2008-02-08 Fred Kiefer <FredKiefer@gmx.de>

        * Source/art/ARTContext.m (-GSDrawImage:): Hack to allow the
	handling of pre-multiplied bitmaps.

2008-01-31 Fred Kiefer <FredKiefer@gmx.de>

	* Tools/win32pbs.m: Use event polling code from WIN32Server.m.

2008-01-31 Fred Kiefer <FredKiefer@gmx.de>

	* Tools/xpbs.m: Improve support for RTF and add TIFF support.

2008-01-29 Fred Kiefer <FredKiefer@gmx.de>

	* Tools/xpbs.m: Add support for variable available clipboard
	types and minimal support for RTF.

2008-01-26 Fred Kiefer <FredKiefer@gmx.de>

	* Tools/xpbs.m: Add secondary selection support. Define some more
	MIME types and add support for more standard targets.

2008-01-24 Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/GSXftFontInfo.m (-setupAttributes): Use
	FC_PIXEL_SIZE instead of FC_SIZE. Fixes #21912.

2008-01-21 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/x11/XGOpenGL.h,
	* Source/x11/XGGLContext.m,
	* Source/x11/XGGLFormat.m:
	Get to work with newer versions of GLX.
	Patch by Thomas Gamper <icicle@cg.tuwien.ac.at>,
	slightly reworked.

2008-01-19 Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m (-setWindowdevice:forContext:):
	Correct wrong parameter name.

2008-01-19 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m: (-setWindowdevice:forContext:),
	* Source/win32/WIN32Server.m (-setWindowdevice:forContext:):
	Method replaces windowdevice:.
	* Source/gsc/GSContext.m,
	* Source/gsc/GSStreamContext.m,
        * Source/art/ARTContext.m,
	* Source/cairo/CairoContext.m,
	* Source/xlib/XGContext.m,
	* Source/winlib/WIN32Context.m (+GStateClass, +handlesPS):
	New methods to simplify the implementation of
	initWithContextInfo:. In that method call
	setWindowdevice:forContext: when the destination is a window.
	* Source/art/ARTContext.m (-setupDrawInfo): New method, code comes
	from old initWithContextInfo:, now called in GSSetDevice:::.

2008-01-11 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/XGServerWindow.m:
	Try to find window offsets using off-screen windows unless the
	GSBackChecksOffsetsOnScreen user default is set to YES.

2008-01-07 Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m (-receivedEvent:...forMode:): Add
	#ifdef for Cygwin.

2008-01-01  Adam Fedor  <fedor@gnu.org>

	* Version 0.13.1

2007-12-11 Isaiah Beerbower <public@ipaqah.com>

	* Source/cairo/*
	* Headers/cairo/*
	Reverting back to fontconfig font system.

2007-12-10 Isaiah Beerbower <public@ipaqah.com>

	* Source/cairo/CairoFontEnumerator.m (-enumerateFontsAndFamilies, cacheFolder,
	bundleModificationDate, cacheFont, cacheNFontBundle, mergeFontInfo):
	Rewrite to cache fonts in a plist and support nfont bundles.
	(-defaultSystemFontName, -defaultBoldSystemFontName,
	-defaultFixedPitchFontName):
	Added actual PostScript name for Bitstream Vera fonts.
	* Source/cairo/CairoFaceInfo.m (-fontFace,
	-initWithfamilyName:fullName:weight:italicAngle:traits:files:index:,
	-setFullName:, -fullName, -setItalicAngle:, -italicAngle, -setIndex:, -index):
	Update to reflect changes in CairoFontEnumerator.
	* Headers/cairo/CairoFaceInfo.m: Same.
	* Source/cairo/CairoFontInfo.m (-setupAttributes): Take italicAngle & fullName
	from CairoFaceInfo.

2007-12-10 Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/GSXftFontInfo.m:
	Explicitly include NSDictionary.h header for better MacOS-X
	compatibility.
	* Headers/gsc/GSGState.h: Change fillColorS and strokeColorS to
	NSColorSpace.
	* Source/gsc/GSGState.m (NSColor-colorWithValues:colorSpaceName:):
	Removed.
	* Source/gsc/GSGState.m (-GSSetFillColorspace:,
	-GSSetStrokeColorspace:, -GSSetFillColor:, -GSSetStrokeColor:):
	Changed to use NSColorSpace.

2007-12-03 Riccardo Mottola <riccardo@kaffe.org>

        * Source/winlib/WIN32GState.m: Implement Greyscale image handling

2007-11-29 Richard Frith-Macdonald <rfm@gnu.org>

        * Source/art/ReadRect.m:
        * Source/art/ARTContext.m:
        * Source/art/shfill.m:
	Explicitly include NSDictionary.h header for better MacOS-X
	compatibility.

2007-11-29 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XGServerWindow.m: ([imagecursor::::::]) don't flip the
	hot point coordinates ... NSCursor coordinates are already supposed
	to be flipped.

2007-11-29 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/x11/XGGeneric.h: Add atoms for new window types. Add
	definition of _NET_WM_STATE_ADD and _NET_WM_STATE_REMOVE
	* Source/x11/XGServerWindow.m (-setwindowlevel::): Better setting
	of skip state for window.
	* Source/x11/XGServerWindow.m (-orderwindow:::): Use it here as well.

2007-11-22 Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSContext.m (-GSDrawImage:):Implement via
	NSDrawBitmap::::::.

2007-11-09  Adam Fedor  <fedor@gnu.org>

	* Version 0.13.0

2007-11-05 Fred Kiefer <FredKiefer@gmx.de>

	* COPYING: Add GPL 3 licence file.

2007-11-05 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-DPSsetflat:, -DPSsetlinewidth:,
	-DPSsetmiterlimit, -DPScurrentflat:, -DPScurrentlinewidth:,
	-DPScurrentmiterlimit:, -DPSsetdash:::): Convert floats from user
	space to drawing space and visa versa.
	* Source/cairo/CairoGState.m (-DPSsetdash:::): Adjust dash values slightly.
	* Source/cairo/CairoFontEnumerator.m: Change NSLog to NSDebugLog.

2007-10-31 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-_setupRootWindow): Use
	objectForKey: instead of stringForKey:.
	Patch by Wolfgang Lux <wolfgang.lux@gmail.com>.

2007-10-30  Adam Fedor  <fedor@gnu.org>

        * gnustep-back.spec.in: Change Copyright to License.

2007-10-30 Fred Kiefer <FredKiefer@gmx.de>

	* Change files to use GPL 3 and LGPL 3.
	* Prepare for next release.

2007-10-18 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoContext.m,
	* Source/cairo/CairoGState.m: Format cleanup.
	* Source/cairo/XGCairoXImageSurface.m (-initWithDevice:): Use
	XGCairoSurface when a NSBackingStoreNonretained type window is used.

2007-10-12 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-placewindow:): Change window to be
	temporary resizable. Patch by Wolfgang Lux <wolfgang.lux@gmail.com>.
	* Source/x11/XIMInputServer.m: Clean up includes to avoid compiler warning.
	* Source/x11/raster.c (calculateCombineArea): Change parameter
	signedness to avoid compiler warnings.
	* Source/x11/convert.c (convertTrueColor_generic,
	convertPseudoColor_to_8): Change parameter signedness to avoid compiler warnings.

2007-10-08 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoFontInfo.m
	(-appendBezierPathWithGlyphs:count:toBezierPath:):  First implemenation.

2007-10-07 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/gsc/GSFunction.h: Declare the -getsample:: method in
	header.

2007-10-05 Fred Kiefer <FredKiefer@gmx.de>

	* Source/art/shfill.m (-DPSshfill:): Correct typing error. Remove
	now obsolete method declaration.
	* Headers/gsc/GSFunction.h,
	* Source/gsc/GSFunction.m: New files. Implementation of Postscript
	function taken from art/shfill.m.
	* Source/gsc/GNUmakefile: Compile new file.
	* Source/gsc/GSContext.m (-DPSshfill:),
	* Source/gsc/GSGState.m (-DPSshfill:): Implement new method.

2007-10-05 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-copyWithZone:): Only use cairo 1.4
	functions when cairo version fits.
	* Source/cairo/XGCairoXImageSurface.m (-initWithDevice:): Use
	depth from window device.

2007-10-01 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGDragView.m: Add missing include.

2007-10-01 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-copyWithZone:): No error logging
	when copy of path fails. This is normal in cairo 1.4.10 for empty
	paths.

2007-09-12 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/cairo/CairoGState.h,
	* Source/cairo/CairoGState.m (-setSize, -DPSgsave, -DPSgrestore):
	Remove unused methods.
	* Headers/cairo/CairoPDFSurface.h,
	* Source/cairo/CairoPDFSurface.m: New files.
	* Source/cairo/GNUmakefile: Add new source file.
	* Source/cairo/CairoContext.m (-initWithContextInfo:,
	-beginPrologueBBox:...title:) Rewrite to support PDF output.

2007-09-09 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-DPSeofill, -DPSfill, -DPSstroke):
	Clear the GNUstep path after operation.

2007-09-06 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-copyWithZone:): Copy dash and clipping.
	* Source/cairo/CairoGState.m (-_setPath:): Clear the cairo path.

2007-09-05 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/x11/XGGeneric.h: Add ivars for event time keeping.
	* Headers/x11/XGServer.h: Declare new event time keeping methods.
	* Source/x11/XGServerEvent.m (-setLastTime:, -lastTime): Implement
	new methods and use them to store event time.
	* Source/x11/XGServerWindow.m: Use these methods to get event time.

2007-09-05 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m: Add more checks for cairo status.

2007-09-05 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-_checkStyle:, -windowlist): Use
	defScreen instead of 0.

2007-09-05 Fred Kiefer <FredKiefer@gmx.de>

	* configure.ac,
	* configure: Move checking for Xrender extension.
	* Source/cairo/XGCairoXImageSurface.m: Add include for config.h.
	Patch by Yen-Ju Chen <yjchenx@gmail.com>.

2007-09-04 Fred Kiefer <FredKiefer@gmx.de>

	* Source\winlib\WIN32FontInfo.m (-coveredCharacterSet): Create the
	NSMutableCharacterSet to store the character ranges in.

2007-09-03 Nicolas Roard <nicolas@roard.com>

	* configure:
	* configure.ac: check that Xrender lib is present and add it to the
	link process. Only use Xrender for Cairo.
	* Source/cairo/XGCairoXImageSurface.m: use 32 bits surfaces when
	available, else stay with 24bits surface.
	* Source/cairo/CairoGState.m: some cleaning, and fixed the scrolling
	bug.

2007-09-02 Nicolas Roard <nicolas@roard.com>

	* configure:
	* configure.ac:
	* config.h.in: added checking for Xrender extension
	* Source/x11/context.c: Now check for 32 bit surface + alpha channel
	* Source/cairo/XGCairoSurface.m: Modified to get the correct visual,
	not the default one
	* Source/cairo/CairoGState.m: Use cairo groups to allow recopy on the
	same surface

2007-08-21 Fred Kiefer <FredKiefer@gmx.de>

	* Source/art/ftfont.m,
	* Source/art/ftfont-old.m: Extracted code shared between these two
	files into new files.
	* Source/art/FTFaceInfo.h,
	* Source/art/FTFaceInfo.m,
	* Source/art/FTFontEnumerator.h,
	* Source/art/FTFontEnumerator.m: New files with extracted code.
	* Source/art/GNUmakefile: Add new source files.

2007-08-21 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-_setupRootWindow): Revert last
	change.
	* Source/x11/XGServerWindow.m (-setinputfocus:): Use CurrentTime
	instead of generic.lastTime.

2007-08-21 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerEvent.m (-processEvent:): Made handling of
	focus in and out more explicit.

2007-08-16 Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/XGFontManager.m (load_cache),
	* Tools/font_cacher.m (-writeCacheTo): Increase version number of
	font format, as font mask values have changed.

2007-08-16 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-_setupRootWindow): Set lastTime to
	CurrentTime not 1 to get setinputfocus working for the first
	activation of the application.

2007-08-15 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-_checkWMSupports:,
	-_tryRequestFrameExtents:): Correct minor errors.
	* Source/art/ftfont.m (-coveredCharacterSet): Protect against
	illegal characters.

2007-08-15 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m: Add more EWMH methods and helper
	methods for them.
	* Tools/xpbs.m: Simplify dragging support code.

2007-08-13 Fred Kiefer <FredKiefer@gmx.de>

	* Source/art/ftfont.m (-coveredCharacterSet): Correct code.
	Patch by Yen-Ju Chen <yjchenx@gmail.com>.

2007-08-07 Fred Kiefer <FredKiefer@gmx.de>

	* Source/art/ftfont.m (-coveredCharacterSet): Use local FT_Size
	variable instead of ivar. The ivar is sometimes invalid.
	Cleaned up compiler warnings.

2007-08-02 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServer.m (+initializeBackend): Handle SIGINT by
	calling ([NSApp terminate: NSApp]) to shut down cleanly.

2007-07-03 Sergii Stoian <soyan255@gmail.com>

	* Source/cairo/CairoGState.m
	  (-_setPoint): Adjust point.
	  (-_adjustPath:): Optimize and cleanup.
	  (-compositeGState:fromRect:toPoint:op:fraction:): Adjust toPoint.

2007-07-02 Sergii Stoian <soyan255@gmail.com>

	* Source/cairo/CairoGState.m
	  (-DPSshow:): Apply correct scale and translate transformation matrix.
	  (-DPSsetstrokeadjust:): Implement.
	  (-DPSinitgraphics): Set _strokeadjust to 1 by default.
	  (-_adjustPath:): Implement new method that place the path to pixel
	  boundaries.
	  (-_setPath:): Change method definition adding fillOrClip argument.
	  Use _adjustPath: method.
	  (-DPSclip): Change call of _setPath: to new format.
	  (-DPSeoclip): Ditto.
	  (-DPSeofill): Ditto.
	  (-DPSfill): Ditto.
	  (-DPSstroke): Ditto.
	  (-compositerect:op:): Ditto.
	* Headers/cairo/CairoGState.h: Define _strokeadjust variable.
	* Source/cairo/CairoFontInfo.m: (-widthOfString:): Add sanity check.

2007-06-29 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/cairo/CairoSurface.h,
	* Source/cairo/CairoSurface.m (-setSize:): Add method.
	* Headers/cairo/CairoGState.h,
	* Source/cairo/CairoGState.m (-setSize:, -showPage): Add methods.
	* Source/cairo/CairoContext.m (-beginPrologueBBox:...title:,
	-showPage): New methods.
	* Source/cairo/CairoGState.m (-GSShowGlyphs::): Handle rotated
	text correctly.

2007-06-05 Fred Kiefer <FredKiefer@gmx.de>

	* Source/art/image.m (-DPSimage:): Replaced appendTransform: with
	prependTransform:. Undoes change from 2004-01-25.

2007-05-02  Nicola Pero  <nicola.pero@meta-innovation.com>

	* Source/GNUmakefile.postamble (after-clean): Remove
	$(BUNDLE_NAME)Info.plist on clean.

2007-04-27 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/cairo/CairoSurface.h,
	* Source/cairo/CairoSurface.m: Remove default surface type setting.
	* Headers/cairo/XGCairoSurface.h: Remove includes.
	* Source/cairo/XGCairoSurface.m: Add includes.
	* Headers/cairo/XGCairoXImageSurface.h: Remove includes.
	* Source/cairo/XGCairoXImageSurface.m: Add includes, add  missing
	dealloc method.
	* Headers/cairo/CairoPSSurface.h,
	* Source/cairo/CairoPSSurface.m: New files.
	* Source/cairo/GNUmakefile: Add CairoPSSurface.
	* Headers/cairo/CairoGState.h,
	* Source/cairo/CairoGState.m: Replace method -GSSetDevice::: with
	-GSSetDevice::: and GSCurrentDevice::: with GSCurrentSurface:::.
	* Source/cairo/CairoGState.m (-DPSshowpage): Implement this method.
	* Source/cairo/CairoContext.m (-DPSgrestore, -DPSgsave): Remove
	these newly added methods.
	* Source/cairo/CairoContext.m (-initializeBackend): No longer set
	default surface type.
	* Source/cairo/CairoContext.m (-GSSetDevice:::): Create the
	surface here.
	* Source/cairo/CairoContext.m (-initWithContextInfo:): For PS
	output set the surface here.

2007-04-24 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGDragView.m (-sendExternalEvent:... toWindow:) Tell
	xdnd about available types and selection owner.
	* Source/x11/XGServerEvent.m (processEvent:): Handle case
	SelectionRequest to get some simple xdnd support.
	Based on a patch by Matt Rice <ratmice@yahoo.com>.

2007-04-14  Adam Fedor  <fedor@gnu.org>

	* Version: Bump version

2007-04-04 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/gsc/GSContext.h: Remove ivar gtable.
	* Source/gsc/GSContext.m: Changed to use a gtable object
	shared between all contexts.
	* Headers/cairo/CairoGState.h:
	Declare new methods for save and restore.
	* Source/cairo/CairoContext.m (-DPSgrestore, -DPSgsave): Use these methods.
	* Source/cairo/CairoGState.m (-DPSgrestore, -DPSgsave): Implement
	these methods.
	* Source/cairo/CairoGState.m (-compositeGState:...fraction:):
	Another try on conversion of the coordinates.

2007-04-14  Adam Fedor  <fedor@gnu.org>

	* Version 0.12.0 (From gnustep-stable branch)

2007-03-30 Fred Kiefer <FredKiefer@gmx.de>

	* header/xlib/XGGeometry.h: Replace calls to the now deprecated
	methods on NSAffineTransform with correct ones.

2007-03-23 Fred Kiefer <FredKiefer@gmx.de>

	* Source/art/ReadRect.m,
	* Source/art/composite.m,
	* Source/art/shfill.m,
	* Source/cairo/CairoGState.m,
	* Source/gsc/GSGState.m,
	* Source/winlib/WIN32GState.m,
	* Source/xlib/XGGState.m: Replace calls to the now deprecated
	methods on NSAffineTransform with correct ones.

2007-03-22 Fred Kiefer <FredKiefer@gmx.de>

	* Source/art/ARTGState.h: Declare internal methods.
	* Source/art/ARTGState.m: New file split out from ARTContext.m.
	* Source/art/ARTConext.m: Removed ARTContext bits.
	* Source/art/blit-main.m: New file split out from blit.m.
	* Source/art/blit.m: Removed self include stuff.
	* Source/art/GNUmakefile: Add new source files.
	* Source/art/composite.m: Adopt to GNUstep coding style.

2007-03-22 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-compositeGState:...fraction:):
	Correct computation of source rectangle and add flip correction.
	The later is currently commented out.

2007-03-21 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m: General clean-up and optimisation of
	this class.

2007-03-21 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-setColor:state): Always call cairo_set_source_rgba().
	* Source/cairo/CairoGState.m (-GSReadRect:): Correct placement of rectangle.
	* Source/cairo/CairoGState.m (-compositerect:op:): Use
	cairo_paint() instead of cairo_fill().

2007-03-18 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m: A complete rewrite, now path and
	transformation handling from the super class get used.
	* Source/cairo/CairoFontInfo.m (-setupAttributes:,
	-drawGlyphs:length:on:): Don't invert the font matrix.
	* Source/gsc/GSGState.m (-DPSrectclip::::, -DPSrectfill::::,
	-DPSrectstroke::::): Use NSBezierPath to get correct results when rotated.

2007-03-11 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGDragView.m (GSActionForDragOperation,
	GSDragOperationForAction): Completed and corrected drag type
	mapping between xdnd and OpenStep. NSDragOperationAll should now
	be map back correctly when converted to xdnd and back again.

2007-03-07 Xavier Glattard <xavier.glattard@online.fr>

	* Source/win32/Event_format.sed,
	* Source/win32/GSDisplayServer_details.m,
	* Source/win32/RELEASE_NOTES,
	* Source/win32/w32_config.h,
	* Source/win32/w32_debug.m,
	* Source/win32/w32_notifications.m: Delete files.
	* Source/win32/WIN32Server.m (and other files):
	Deletion of all non-GNUstep debug stuff (printf...)
	Deletion of all Notification hooks (used for a debugging purpose)
	Deletion of the Application preference Panel that pops up the 1st
	time you run _any_ application.
	Deletion of the check of GSWINHandlesWindowDecorations and
	GSWIN32HandlesWindowDecorations options (none worked because of a
	typo and are now deprecated). Use of GSBackHandlesWindowDecorations
	option like X11 backend instead of GSUseWMStyles (marked as deprecated).
	Use of GSBackUsesNativeTaskbar option instead of GSUseWMTaskbar
	(marked as deprecated)
	All these options are read in -initWithAttribute: (no more in
	+inializeBackend) and set an instance (not class) variable.
	Add methods -handlesWindowDecorations/-setHandlesWindowDecorations
	Add methods -usesNativeTaskbar/-setUsesNativeTaskbar
	* Source/win32/w32_GLcontext.m:
	Fix a bug in OpenGL sub-window placement when handlesWindowDecorations == YES

2007-03-06 Richard Frith-Macdonald <rfm@gnu.org>

	* configure.ac: Add check for syslog
	* config.h.in: regenerate
	* configure: regenerate
	* Tools/gpbs.m: add --auto option to shut down when all connections
	from apps requiring pasteboard services are closed.

2007-03-02 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-DPSinitmatrix, -GSCurrentCTM):
	Don't consider flipped state.
	* Source/cairo/CairoGState.m (-compositeGState:...fraction:):
	Simplified the code and now use cairo_paint and cairo_paint_with_alpha.

2007-03-01 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-DPSinitgraphics): Set more cairo state.
	* Source/cairo/CairoGState.m (-compositeGState:...fraction:): Use
	either mask or fill, but not both.

2007-03-01 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-setColor:state:): Use fillColor
	instead of parameter. Only in the former is the alpha field
	set. Bug found by using valgrind.

2007-02-28 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoContext.m (-initWithContextInfo:): Set self
	from super call to get PS contexts working.

2007-02-28  Nicola Pero  <nicola.pero@meta-innovation.com>

	* configure.ac: Use gnustep-config to set GNUSTEP_MAKEFILES
	if not set.
	* GNUmakefile: Same change.
	* configure: Regenerated.

2007-02-28  Nicola Pero  <nicola.pero@meta-innovation.com>

	* Tools/win32pbs.m (WINVER): Define to make it compile with new
	releases where HWND_MESSAGE is not defined unless you explicitly
	request recent Microsoft Windows APIs by setting WINVER.

2007-02-27 Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/Win32FontInfo.m (-setupAttributes:):
	Correct setting of maximumAdvancement and add xHeight.
	* Source/art/ftfont.m (-initWithFontName:matrix:screenFont:):
	Correct setting of maximumAdvancement and xHeight.
	* Source/xlib/GSXftFontInfo.m (-setupAttributes:):
	Correct setting of maximumAdvancement.
	* Source/xlib/XGFont.m(-setupAttributes:): Correct setting of
	maximumAdvancement.
	* Headers/cairo/CairoFontInfo.h: Add new ivar lineHeight.
	* Source/cairo/CairoFontInfo.m (-setupAttributes:):
	Correct setting of descender and add lineHeight and xHeight.
	* Source/cairo/CairoFontInfo.m (-drawGlyphs:length:on:): Remove adjustment.
	* Source/cairo/CairoGState.m: Better protection against _ct being null.

2007-02-27  Nicola Pero  <nicola.pero@meta-innovation.com>

	* Source/GNUmakefile.postamble (config.h): Use MKDIRS, not
	GNUSTEP_MAKEFILES/mkinstalldirs, to create local directories.

2007-02-27  Nicola Pero  <nicola.pero@meta-innovation.com>

	* Source/x11/GNUmakefile.preamble (GNUSTEP_INSTALL_LIBDIR): Do
	not set this obsolete/unused variable.
	* Source/xdps/GNUmakefile.preamble: Same change.
	* Source/xlib/GNUmakefile.preamble: Same change.
	* Source/win32/GNUmakefile.preamble: Same change.
	* Source/winlib/GNUmakefile.preamble: Same change.
	* gnustep-back-debug.spec.in: Obsolete file removed.
	* GNUmakefile (CVS_MODULE_NAME): Obsolete variable removed.

2007-02-27  Nicola Pero  <nicola.pero@meta-innovation.com>

	* configure.ac: Fixed typo: store XFT_LIBS in CAIRO_LIBS, not in
	CAIRO_CFLAGS.
	* configure: Regenerated.

2007-02-24 Graham J Lee <leeg@thaesofereode.info>

	* Source/cairo/CairoGState.m (DPSmoveto::, DPSlineto::,
	DPSnewpath): check for valid context.

2007-02-18 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (_set_op): Change cairo operators for
	NSCompositeHighlight and NSCompositePlusDarker.
	* Source/cairo/CairoGState.m (DPSrectstroke::::, DPSrectfill::::,
	DPSrectclip::::): Use cairo_rectangle.
	* Source/cairo/CairoGState.m (-compositeGState:...fraction:):
	Changed to work like the other backends for the Gorm palette images.

2007-02-17 Richard Frith-Macdonald <rfm@gnu.org>

	* GNUmakefile.postamble: fix typo

2007-02-15  Nicola Pero  <nicola.pero@meta-innovation.com>

	* configure.ac: Source GNUstep.sh then use GNUSTEP_SYSTEM_HEADERS
	and GNUSTEP_SYSTEM_LIBRARIES if available rather than using
	hardcoded paths.
	* configure: Regenerated.

2007-02-14  Nicola Pero  <nicola.pero@meta-innovation.com>

	* Fonts/GNUmakefile (back-resources_INSTALL_DIR): New variable.
	* Fonts/GNUmakefile.postamble (before-uninstall): Updated the
	install rules to not use GNUSTEP_INSTALLATION_DIR.

2007-02-13 Xavier Glattard <xavier.glattard@free.fr>

	configure.ac: opengl fixups for win32

2007-02-11 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-DPScharpath::, -DPSshow:,
	-GSSetFont:, -GSSetFontSize:, -GSShowText::, -GSShowGlyphs::):
	Protect all font operation from _ct being NULL.
	* Source/cairo/CairoGState.m (-compositeGState:...fraction:):
	Small improvement for scrolling.

2007-02-11 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-GSReadRect:): Implemented this method.

2007-02-10 Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSGState.m (-bezierPath): New method.
	* Source/gsc/GSGState.m (-DPSpathbbox::::): Corrected to use new method.
	* Source/cairo/CairoGState.m (-GSSetPatterColor:,
	-pointInMatrixSpace:, -deltaPointInMatrixSpace:,
	-rectInMatrixSpace:, -DPSarct:, -GSReadRect:): New methods to
	override super implementation.
	* Source/cairo/CairoGState.m (-GSCurrentCTM, -GSConcatCTM:,
	-DPStranslate::, -DPSscale::, -DPSrotate:, -DPSinitmatrix,
	-DPSconcat:) Protect all matrix operation from _ct being NULL.
	* Source/cairo/CairoGState.m (-compositeGState:...fraction:):
	Small improvents to both unflipped case.

2007-02-08 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/winlib/WIN32FontInfo.m:
	Fix error calculating advancement.

2007-01-31 Richard Frith-Macdonald <rfm@gnu.org>

	* Source\winlib\WIN32FontInfo.m:
	* Source\winlib\GNUmakefile.preamble:
	* Source\win32\GNUmakefile.preamble:
	* Headers\winlib\WIN32FontInfo.h:
	Implement number of glyphs and covered characterset.
	Set maximumAdvancement.

2007-01-31 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/art/ftfont.m: Implement methods to get count of characters
	and characterset based on code by Yen-Ju Chen
	* Source/cairo/CairoFontEnumerator.m: Tidy layout
	* Source/cairo/CairoFaceInfo.m: ditto
	* Source/cairo/CairoFontInfo.m: ditto

2007-01-31 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/win32/WIN32Server.m:
	* Source/win32/GNUmakefile:
	* Source/win32/w32_GLcontext.m:
	* Source/win32/w32_GLformat.m:
	* Headers/win32/WIN32OpenGL.h:
	OpenGL support patch by: Xavier Glattard <xavier.glattard@free.fr>.

2007-01-31 Richard Frith-Macdonald <rfm@gnu.org>

	* Source\winlib\WIN32FontInfo.m: Attempt to make unicode clean
	* Source\winlib\WIN32FontEnumerator.m: ditto
	* Source\win32\WIN32Server.m: Implement -windowlist method.

2007-01-15  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerWindow.m ([XGServer -orderwindow:::]): Set
	icon hints regardless of window manager (patch #5434 from Yen-Ju
	Chen).

2007-01-14 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XGGLContext.m: Fixup coordinates of subwindow for
	bug report by Xavier Glattard.

2006-12-31 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-setOffset:, -DPSinitmatrix): Use
	cairo functions to handle offset.
	* Source/cairo/CairoGState.m (-GSCurrentCTM): Changed order of
	transformations.
	* Source/cairo/CairoGState.m (-compositeGState:...fraction:):
	Corrected cases for flipped surface.

2006-12-31 Richard Frith-Macdonald <rfm@gnu.org>

	* configure.ac:  Explicitly add freetype libs and flags when building
	cairo, in case the cairo config stuff has left them out.
	Should fix bug #18508
	* configure: regenerate

2006-12-30  Mark Tracy <tracy454@concentric.net>
	* Source/art/ReadRect.m (-GSReadRect:): incorporate offset into
	coordinate transformation calculations. Fixes bug #18260

2006-12-28  Matt Rice  <ratmice@gmail.com>

	* Source/x11/XGServerWindow.m (-flushwindowrect::): Don't convert
	rect origin sent to handleExposeRect:forDriver: to int and back to
	float.

2006-12-27 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/cairo/CairoContext.m: declare XWindowBuffer class
	* configure.ac: disable glitz (if it cannot be found) in such a
	way that Cairo backend still builds/runs.
	* configure: regenerate

2006-12-26 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/x11/XGGeneric.h: Added XGWMNetStates.
	* Source/x11/XGServerWindow.m (-_checkWindowManager,
	-setwindowlevel::): Prevent some window types from showing up in
	the taskbar for old window managers that cannot handle window types.
	Patch by Yen-Ju Chen <yjchenx@gmail.com>.

2006-12-26 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/cairo/XGCairoXImageSurface.h:
	* Source/cairo/XGCairoXImageSurface.m (-initWithDevice:):  Use
	XWindowBuffer to draw on.
	* Source/cairo/CairoContext.m (+initializeBackend): Use
	XGCairoXImageSurface as surface.
	* Source/cairo/CairoGState.m (-DPSimage:...:): Respect endianess,
	when creating a cairo image surface.
	Patch by Yen-Ju Chen <yjchenx@gmail.com>.

2006-12-19 Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/XGCairoGlitzSurface.m (-initWithDevice:): Correct
	getting of visual ID.
	Patch by: Xavier Glattard <xavier.glattard@free.fr>.

2006-12-08 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XGServerEvent.m: Fix incorrect setting for second help
	key.
	* Documentation/Back/DefaultsSummary.gsdoc: Document mappings of
	X keys to help keys.

2006-11-25  Matt Rice  <ratmice@gmail.com>

	* Source/art/ftfont.m (appendBezierPathWithGlyphs:count:toPath:):
	Uncomment code and switch to using FTC_Manager_LookupSize.

2006-11-19 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/winlib/WIN32GState.m:
	* Source/art/path.m:
	* Source/art/ftfont.m:
	* Source/art/ftfont-old.m:
	* Source/art/shfill.m:
	* Source/art/image.m:
	* Source/xlib/XGGState.m:
	* Source/x11/XGServerWindow.m:
	Use accessor method (-transformStruct) to get at affine transform
	internals.  Make art code closer to coding standards in an attempt
	to improve readability.

2006-11-15  Nicola Pero  <nicola.pero@meta-innovation.com>

	Notice: you should now use 'make DESTDIR=/tmp/xxx install' if you
	want to relocate all the installation into /tmp/xxx/
	* GNUmakefile.postamble: Use DESTDIR instead of INSTALL_ROOT_DIR
	everywhere.

	* Documentation/Back/GNUmakefile: Use GNUSTEP_INSTALLATION_DOMAIN
	instead of GNUSTEP_INSTALLATION_DIR.
	* Documentation/GNUmakefile: Same change.
	* Fonts/GNUmakefile: Same change.
	* Source/GNUmakefile: Same change.
	* Source/art/GNUmakefile: Same change.
	* Source/cairo/GNUmakefile: Same change.
	* Source/gsc/GNUmakefile: Same change.
	* Source/x11/GNUmakefile: Same change.
	* Source/xdps/GNUmakefile: Same change.
	* Source/xlib/GNUmakefile: Same change.
	* Source/win32/GNUmakefile: Same change.
	* Source/winlib/GNUmakefile: Same change.
	* Tools/GNUmakefile: Same change.

2006-11-03 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/xlib/XGFont.m: Assume ascii encoding as a fallback if no
	mapping can be found from the font registry to the encoding.

2006-10-31  Matt Rice  <ratmice@yahoo.com>

	* Source/x11/XGServerEvent.m (_handleTakeFocusAtom:forContext:):
	Unset ignore_take_focus for the key window.

2006-10-29 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/xlib/XGFont.m: Use encodingFromCharset (undeprecated and
	handles more cases than GSEncodingForRegistry)

2006-10-28  Adam Fedor  <fedor@gnu.org>

	* back.make.in: Use correct flags;
	* Source/GNUmakefile.preamble: Add library depends for backend.
	(Partial fix for Bug #16453, see also gui).

2006-10-27 Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XIMInputServer.m (-initWithDelegate:display:name:):
	Replace call to GetStringEncoding with [NSString
	localizedNameOfStringEncoding:]
	* Source/x11/XGServerWindow.m (-_setupMouse): Make log message on
	multiple mouse buttons a debug log message. Seems like newer X
	servers detect loads of mouse buttons which are not there.

2006-10-21  Matt Rice  <ratmice@yahoo.com>

	* Source/win32/WIN32Server.m: Update -windowlist implementation.
	* Source/x11/XGServerWindow.m (-orderwin:::): Replace
	desiredOrderedWindow with ignore_take_focus.
	(windowlist): Implement.
	(setinputfocus:): Replace desiredOrderedWindow with ignore_take_focus.
	* Headers/x11/XGGeneric.h (XGGeneric): Remove desiredOrderedWindow.
	* Headers/x11/XGServerWindow.h (gswindow_device_t):
	Add ignore_take_focus.

2006-10-15 22:48-EDT Gregory John Casamento <greg_casamento@yahoo.com>

	* Source/gsc/GSStreamContext.m: GSRectClipList() copied
	implementation from GSGState.m.

2006-10-15 11:14-EDT Mark Tracy <tracy454 at concentric dot net>

	* Source/gsc/GSStreamContext.m: GSStreamContext did not implement
	GSRectFillList fix: copied code from GSGState.m.
	Patch applied by Gregory Casamento

2006-10-12  Adam Fedor  <fedor@gnu.org>

	* Source/xlib/XGFontSetFontInfo.m (-drawGlyphs:length:onDisplay:drawable:with:at:], [-widthOfGlyphs:length:]): Fix spelling of length

2006-10-11 Nicola Pero <nicola.pero@meta-innovation.com>

	* GNUmakefile (GNUSTEP_INSTALLATION_DOMAIN): Use GNUSTEP_INSTALLATION_DOMAIN
	instead of GNUSTEP_INSTALLATION_DIR.

2006-10-04 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XGServerEvent.m:
	For help key, generate key/down/up ewvent as well as flag changes.
	Use X Super_L key symbol as default backup help key, since many
	keyboards don't have a help key mapping by default, but the super
	keys are often the 'windows' keys available on PC keyboards.
	* Version: bump version number for next release

2006-10-04 Fred Kiefer <FredKiefer@gmx.de>

	* Headers/gsc/GSGState.h: Added copying protocol.
	* Headers/cairo/CairoGState.h: Removed duplicated ivars that are
	already defined in the new super class GSGState.
	* Source/cairo/CairoGState.m: Changed to use super class ivars
	where apropriate. Removed all compiler warnings. Changed colour
	setting and getting to work with super class methods.
	Reimplemented DPSinitmatrix to handle offset and use this from
	everywhere. Removed methods duplicating super class code.
	* Source/cairo/CairoContext.m (GSWSetViewIsFlipped:): Removed as
	super class implementation should be used.

2006-10-03 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XWindowBuffer.m: ([_exposeRect:])
	Clip draw area to size of buffer rather than size of wiondow,
	in case the two have become out of sync somehow.
	* Source/win32/WIN32Server.m: Add help key mask
	* Source/x11/XGServerEvent.m: ditto

2006-10-02  Nicola Pero <nicola.pero@meta-innovation.com>

	* configure.ac: Check the new variable GNUSTEP_IS_FLATTENED,
	and default to yes.
	* configure: Regenerated.

2006-09-29 Hans Baier <hansfbaier@googlemail.com>

	* Source/cairo/CairoGState.m: Added hack to retrieve current rgb
	and alpha from cairos internal structures. Will be replaced by proper
	code when the cairo functions are available
	* Source/cairo/CairoGState.m:
	* Headers/cairo/CairoGState.h: refactored class as a subclass of
	GSGState. Removed all unimplemented methods implemented in the
	superclass.
	* Headers/cairo/CairoFaceInfo.h: fixed header file to include the
	needed freetype headers
	* Source/cairo/XGCairoGlitzSurface.m: fixed glitz api change
	glitz_glx_find_drawable_format ->
	glitz_glx_find_drawable_format_for_visual. Compiles now but doesnt
	work yet, because I don't know how to retrieve a proper VisualID.
	someone who knows, please fix it!

2006-09-28 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/win32/WIN32Server.m: Use GSBackHandlesWindowDecorations
	* Source/x11/XGServerWindow.m:  ditto
	New user default to turn on backend handling of window decorations
	for all backends which support it.

2006-09-27 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XGServerWindow.m: Add more debug for checking style
	Use _NET_FRAME_EXTENTS or _KDE_NET_WM_FRAME_STRUT to determine
	offsets if our window manager supports them.

2006-09-26 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XGServerWindow.m: Add more debug for checking style
	offsets. Wait for up to a second for visibility events in case
	XSync() does not work to ensure we receive them.

2006-09-25 Richard Frith-Macdonald <rfm@gnu.org>

	* Headers/x11/XGGeneric.h: Extra fielkd to flag when style offsets
	are known.
	* Source/x11/XGServerEvent.m: Add a lot more debug logging for
	reparenting.  Ignore and log changes to 'known' style offsets.
	* Source/x11/XGServerWindow.m: On startup we now check to see if
	style offsets have been recorded in the root window, and if not
	we briefly create a test window of each style to determine style
	offsets, so we know what the offsets are for each style before
	anything attempts to use them.

2006-09-24 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XGServerEvent.m: Use #if to disable old window exposure
	mechanism in favour of sending exposure events to the front end.
	Hopefully this will fix a bug where the old bypassing of the gui
	event queue could cause an attempt to copy from a region outside
	the image buffer.
	If there are no problems with this, we should remove the old, complex
	mechanism.

2006-09-13 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XGServerWindow.m: use generic.wintypes.win_modal_atom
	for popup menu in gnome/ewmh window manager so that popup menus work
	in modal windows.  Reported as bug 17713 by Yen-Ju Chen.

2006-09-12 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/art/ARTContext.m:
	* Source/art/path.m:
	* Source/art/composite.m:
	* Source/art/shfill.m:
	* Source/art/image.m:
	* Source/xlib/XGGState.m:
	* Source/x11/XGServerWindow.m:
	* Source/x11/XGServerEvent.m:
	Get backend to generate NSEvent objects with event location given in
	OpenStep coordinates. Fix flushwindowrect coordinate handling.
	Update art backend to try to honor the x and y window offsets
	provided in the graphics state.

2006-09-09 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XGServerWindow.m: ([_XFrameToOSFrame:for:]) fix transform
	error.

2006-09-08 Adam Fedor <fedor@gnu.org>

	Tools/gpbs.1: Add documentation on options (from Dennis Leeuw).

2006-09-06 Richard Frith-Macdonald <rfm@gnu.org>

	* Headers/x11/XGGeneric.h: New ivars to hold offsets for different
	window styles.
	* Source/x11/XGServerWindow.m: Offset handling and frame management
	routines rewritten to try to get it right more often.
	Fix long-standing bug positioning windows ... so initial positions
	of titled windows should not conflict with horizontal menu.
	* Source/x11/XGServerEvent.m: Rewritten code which handles reparenting
	notification so that we calculate the offsets of our window properly.
	NB. these fixups require corresponding fixups in the gui library.

2006-08-17 Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/GSXftFontInfo.m:
	changed method signatures to fix typos (lenght->length)
	Patch by: Hans Baier <hansfbaier@gmail.com>

2006-08-13 Christopher Armstrong <carmstrong@fastmail.com.au>

	* Source/winlib/WIN32GState.m: Fixups to last patch

2006-08-10 Christopher Armstrong (carmstrong@fastmail.com.au)
	(patch committed by Greg Casamento)
	* Source/winlib/WIN32GState.m: Better 24bit image support, Slightly
	extended composite method, Dashed-line handling (for selections)
	* Headers/winlin/WIN32FontInfo.m: Changed method
	signature draw:length:onDC:at: to correct spelling of length.

2006-08-01 Riccardo Mottola <riccardo@kaffe.org>

	* Headers/xlib/XGPrivate.h,
	Headers/xlib/GSXftFontInfo.h,
	Headers/xlib/XGFontSetFontInfo.h:
	changed method signatures to fix bug intruduced by RFM during typo fixes
2006-07-09  Fred Kiefer <FredKiefer@gmx.de>

	* Header/x11/XGGeneric.h,
	* Source/x11/XGServerWindow.m (-_setupRootWindow, -window::::),
	* Source/x11/XGServerEvent.m (-processEvent:):
	Impelemented handling for _NET_WM_PING.

2006-07-07 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XGServer.m:
	Handle SIGTERM by calling ([NSApp terminate: NSApp]) to shut down
	cleanly.

2006-07-04 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/art/ftfont.m:
	* Source/x11/XGServer.m:
	* Source/x11/XGDragView.m:
	* Source/GSBackend.m:
	* Source/gsc/GSGState.m:
	* Tools/gpbs.m:
	Avoid spurious warnings produced by gcc-4.1

2006-06-22 Richard Frith-Macdonald <rfm@gnu.org>

	* Tools/gpbs.m: Fix to get profiling to work for this daemon

2006-05-29  Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/XGGState.m (-dealloc, -deepen):
	Free XFT drawing structures and don't reuse the same ones for
	copies of the gstate. Fixes bug #13705.

2006-05-29  Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/GSXftFontInfo.m (FcFontEnumerator
	-defaultSystemFontName, -defaultBoldSystemFontName,
	-defaultFixedPitchFontName): Added this methods which return
	values similar to the art and cairo backend.
	Removed compiler warnings from this file.
	* Source/xlib/XGFontSetFontInfo.m (-dealloc): Call super dealloc.
	* Source/xlib/XGGeometry.m
	* Source/xlib/XGFont.m
	* Source/xlib/XGGState.m:
	* Tools/font_cacher.m:
	Removed compiler warnings.

2006-05-27  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-_DPSsetcursor::): Don't set cursor
	on root window. Patch by Mircea Trache <aer@shaw.ca>.

2006-05-13  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/x11/XGServer.h,
	* Source/x11/XGServerWindow.m (-_XFrameToXHints:for:): New method to
	compute X hints directly from X frame. Previously the X frame
	was converted to an OS frame and from this the X hints were computed.
	* Source/x11/XGServerWindow.m, Source/x11/XGServerEvent.m:
	Replaced all usages of [_OSFrameToXHints:for:] with [_XFrameToXHints:for:].

2006-05-04  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-styleoffsets::::::): New method to
	compute window frame offset based on the _NET_FRAME_EXTENTS or
	_KDE_NET_WM_FRAME_STRUT property. This is based on a slightly
	extended patch by Yen-Ju Chen <yjchenx@hotmail.com>.
	Call this new method from [styleoffsets:::::] and [_OSFrameToXHints:].
	* Source/x11/XGServerWindow.m (-iconTileImage): Make sure the
	window pointer gets freed.

2006-05-03  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-nativeWindow:::::): Implemented to
	support using an X window for GNUstep drawing.

2006-04-30  David Ayers  <d.ayers@inode.at>

	* Source/x11/raster.c (RCreateImage): Remove unused variables.

	* Source/x11/XGServerEvent.m (gotShmCompletion:) Declare privat
	interface for shared memory handling.

2006-03-13  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerWindow.m (titlewindow::): Set NAME and ICON_NAME
	WM properties (Patch #5014 from Yen-Ju Chen).

2006-03-12  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/XGCairoGlitzSurface.m
	* Headers/cairo/XGCairoGlitzSurface.h:
	Rewrote to fit with changed glitz interface.

2006-03-13  Adam Fedor  <fedor@gnu.org>

	* Version 0.10.3

2006-03-13  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-termwindow:): Reset the window
	cache, if it points to the terminated window.

2006-03-12  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/NSBezierPathCairo.m
	* Source/cairo/NSBezierPathCairo.h
	* Source/cairo/CairoDevice.m
	* Source/cairo/CairoFontManager.m
	* Source/cairo/CairoFreeTypeFontInfo.m
	* Headers/cairo/CairoDevice.m
	* Headers/cairo/CairoFontManager.m
	* Headers/cairo/CairoFreeTypeFontInfo.m:
	Removed these files.
	* Source/cairo/GNUmakefile:
	Removed references to obsolete files.
	* Source/cairo/CairoFontInfo.m (-setCacheSize:):
	Fill the cache with zeros.
	* Source/cairo/CairoFontInfo.m (-setupAttributes):
	Free the font options.
	* Source/cairo/CairoGState.m (:bezierPath, -GSSendBezierPath:):
	Added NSBezierPath methods.
	* Source/cairo/XGCairoXImageSurface.m
	* Source/cairo/CairoContext.m
	* Source/cairo/XGCairoSurface.m
	* Source/cairo/CairoSurface.m
	* Source/cairo/XGCairoGlitzSurface.m
	* Headers/cairo/CairoSurface.h:
	Clean up of cairo backend code.

2006-03-07  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-compositeGState:...fraction:,
	DPSimage::...:): Handle flipped views correctly.

2006-02-22 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/gsc/GSStreamContext.m: Fix opening of file on mingw32
	Don't log where we are printingf to unless debugging is on.

2006-02-13  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-copyWithZone:): Handle more of the
	state parameters in copy.
	* Source/cairo/CairoGState.m (-compositerect:op:): Protect
	operator setting with save/restore.

2006-02-12  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-compositeGState:...fraction:): Deal
	with flipped views. Also some cleanup in the whole file and a hack
	to set alpha.

2006-02-11  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-DPSImage::::::::): Handle missing
	parameters, row end padding and destroy the temporary image at the
	very end.

2006-02-06  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServer.m (_initXContext): Don't set the environment
	value for NSHOST. Patch by Tim MacIntosh <tmcintos@avalon.net>.
	See mails on dev mailing list for more explaination.

2006-02-06  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/x11/xdnd.h: Declare two more functions used in xpbs.m.
	* Tools/gpbs.m: Removed compiler warnings about mismatching declarations.

2006-01-29  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoFontInfo.m (_cairo_extents_for_NSGlyph,
	-drawGlyphs:length:on:) Corrected the conversion from NSGlyph to UTF8.
	* Source/cairo/CairoFontEnumerator.m:
	Use the same default fonts as the art backend.

2006-01-23  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/cairo/CairoFaceInfo.h,
	* Source/cairo/CairoFaceInfo.m,
	* Source/cairo/CairoFontEnumerator.m,
	* Source/cairo/CairoFontInfo.m:
	Rewrite of all cairo font handling to work with exported cairo
	functions and enumerate fonts with the font config library.

2006-01-14 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/gsc/GSContext.m:
	* Source/x11/XGServer.m:
	* Source/x11/XGServerWindow.m:
	* Source/x11/XWindowBuffer.m:
	* Headers/x11/XGServerWindow.h:
	Some fixes for 64bit processor support.  In particular, allow for
	bug/feature of X that 32bit data supplied in XChangeProperty must
	actually be 64bit on a 64bit machine.  The X client library discards
	the upper 32bits of each value when encoding the data to be sent to
	the server.  These changes fix WindowMaker interaction on AMD64.

2006-01-09 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/win32/WIN32Server.m: Attempt to terminate gracefully when
	a quit message is received.

2005-12-22  Adam Fedor  <fedor@gnu.org>

	* Version 0.10.2

	* Source/art/ARTContext (-beep): Removed, unused.
	* Source/xdps/NSDPSContext.m (-beep): Idem.

2005-12-20  Adam Fedor  <fedor@gnu.org>

	* Source/art/ARTContext.m ([ARTContext -beep]): Respect user setting
	of bell volume.
	* Source/x11/XGServe.m: Idem.

2005-12-16  Adam Fedor  <fedor@gnu.org>

	* configure.in: Check for Xutf8LookupString
	* Source/x11/XIMInputServer.m: Use it.

2005-12-10  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-titlewindow::): Use UTF8 window
	title where possible.

2005-11-20  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Check for winlib as well so we don't get invalid
	backend.

2005-11-19 21:39  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTContext.m (flip_bytes, byte_order)
	(-initWithContextInfo:): Detect if the server doesn't have the same
	endianness and adjust the color bitmasks if necessary.

2005-11-18  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-window::::): Don't use the NET WM
	window icon for Window Maker.
	* Source/x11/XGServerWindow.m (_createNetIcon:::, _setNetWMIconFor:):
	Rewrote this methods to be prepared to use the mini window icon,
	when that gets available in back.

2005-11-16 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/art/composite.m:
	* Source/art/ftfont-old.m:
	* Source/art/ftfont.m:
	* Source/art/shfill.m:
	* Source/cairo/CairoDevice.m:
	* Source/cairo/CairoFreeTypeFontInfo.m:
	* Source/cairo/CairoGState.m:
	* Source/gsc/GSContext.m:
	* Source/gsc/GSStreamContext.m:
	* Source/win32/GSDisplayServer_details.m:
	* Source/win32/WIN32Server.m:
	* Source/win32/w32_activate.m:
	* Source/win32/w32_debug.m:
	* Source/win32/w32_movesize.m:
	* Source/win32/w32_notifications.m:
	* Source/win32/w32_windowdisplay.m:
	* Source/winlib/WIN32GState.m:
	* Source/x11/XGGLContext.m:
	* Source/x11/XGGLFormat.m:
	* Source/x11/XGServerEvent.m:
	* Source/x11/XGServerWindow.m:
	* Source/xdps/AFMFileFontInfo.m:
	* Source/xdps/NSDPSContext.m:
	* Source/xdps/NSDPSContextOps.m:
	* Source/xlib/XGBitmap.m:
	* Source/xlib/XGCommonFont.m:
	* Source/xlib/XGFontSetFontInfo.m:
	* Source/xlib/XGGState.m:
	* Tools/font_cacher.m:
	* Tools/xpbs.m:
	Some fixups for coding style violations.  Should have no effect other
	than to render code more consistent/readable.

2005-11-07  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (_createNetIcon, _setNetWMIconFor:):
	New methods to create and set NET WM icon for window.
	* Source/x11/XGServerWindow.m (-window::::): Use this methods to
	set window icon.

	* Source/cairo/CairoGState.m (-DPSImage::::::::): Try to deal with
	flipped views.
	* Source/cairo/CairoFontInfo.m: Reduced the amount of unexported cairo
	functions we use.

2005-10-30 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/win32/WIN33Server.m: synchronize defaults so settings are
	not lost.  Tidy a lot of stuff to conform to coding standards.
	Update event handling code to use ET_WINMSG rather than less versatile
	deprecated API.

2005-10-23  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Check for invalid backend graphics name.
	Error if no X11 libraries if using x11 server.

2005-10-20  Adam Fedor  <fedor@gnu.org>

	* Headers/win32/WIN32Server.h: uint -> unsigned int
	* Source/win32/...: Idem.
	* Source/win32/w32_notifications.m: Comment out unimplmented
	windows method.

2005-10-20 Tom MacSween <macsweent@sympatico.ca>

	* Source/win32/: Fixed a compile error when debug flags were
	activated. Removed detailed documation from MS. Read and
	write correctly from defaults.

2005-09-19  Adam Fedor  <fedor@gnu.org>

	* Version 0.10.1

	* configure.ac: Make art the default graphics module.

2005-09-14  Tom MacSween <macsweent@sympatico.ca>

	* Restructuring of the windows server to handle various
	window and toolbar issues (See Source/win32/RELEASE_NOTES for
	more info).
	* Headers/win32/WIN32Server.h: Added ivars and flags and methods.
	* Headers/winlib/WIN32GState.h: Added method to avoid confliting
	types with superclass.
	* Source/win32/GNUmakefile: Add new files.
	* w32_debug.m, w32_activate.m, w32_create.m, w32_general.m,
	w32_movesize.m, w32_text_focus.m, w32_windowdisplay.m,
	GSDisplayServer_details.m: New files.
	* Source/win32/WIN32Server.m: Large changes. Merged with
	WIN32ServerEvent. Lots of documentation.

	* Source/winlib/WIN32GState.m: Variable name changes to
	avoid shadowing.

2005-08-28  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/cairo/CairoSurface.h,
	* Source/cairo/CairoSurface.m,
	* Source/cairo/XGCairoGlitzSurface.m,
	* Source/cairo/XGCairoSurface.m,
	* Source/cairo/XGCairoXImageSurface.m,
	* Source/cairo/CairoGState.m (-GSSetDevice:::):
	Rewrote the device handling to work for resized windows.
	* Headers/cairo/CairoFontInfo.h,
	* Source/cairo/CairoFontInfo.m (-drawGlyphs:length:on:, -setupAttributes),
	* Source/cairo/CairoGState.m (-GSShowGlyphs::):
	Moved adjustment of font size and positioning to CairoFontInfo.
	* Source/cairo/CairoContext.m:
	Clean up.

2005-08-20  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoGState.m (-DPSImage::::::::):
	For the ARGB32 case sort the colour fields in the bitmap correctly.

2005-08-20  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoFaceInfo.m (-fontFace): Use
	_cairo_toy_font_face_create, as Cairo did rename this function.
	* Source/cairo/CairoFontInfo.m (_cairo_glyph_for_NSGlyph): Use
	Cairo function _cairo_scaled_font_text_to_glyphs to convert to glyphs.

2005-08-16  Adrian Robert <arobert@cogsci.ucsd.edu>

	* Source/art/ftfont.m (-[FTFontInfo drawString:...]):
	Initialize index d for delta_data[].  (Already done in ftfont-old.)

2005-07-28  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/cairo/CairoFaceInfo.h,
	* Headers/cairo/CairoFontEnumerator.h,
	* Headers/cairo/CairoFontInfo.h,
	* Headers/cairo/CairoSurface.h,
	* Headers/cairo/XGCairoSurface.h,
	* Source/cairo/CairoContext.m,
	* Source/cairo/CairoGState.m,
	* Source/cairo/CairoFaceInfo.m,
	* Source/cairo/CairoFontInfo.m,
	* Source/cairo/CairoFontEnumerator.m,
	* Source/cairo/CairoSurface.m,
	* Source/cairo/NSBezierPathCairo.m,
	* Source/cairo/XGCairoGlitzSurface.m,
	* Source/cairo/XGCairoSurface.m,
	* Source/cairo/XGCairoXImageSurface.m:

	Adopted to changes in latest release of cairo.

	* Source/cairo/GNUmakefile:
	Removed file CairoFontManager.m

2005-07-22  Adam Fedor  <fedor@gnu.org>

	* Version 0.10.0

2005-07-17  Adam Fedor  <fedor@gnu.org>

	* Version: Add interface version number
	* Source/GNUmakefile: Use it.
	* Source/GNUmakefile.postamble: Idem, add custom Info.plist.
	* Source/GNUmakefile.preamble: Update for interface version.

2005-07-14  Adam Fedor  <fedor@gnu.org>

	* Source/winlib/WIN32GState.m ([WIN32GState -compositeGState:...]):
	Fall through to default operation if alpha blend not sucessful.

2005-07-09  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/gsc/GSGState.h,
	Source/gsc/GSGState.m: New methods
	[-compositeGState:fromRect:toPoint:op:fraction:] and
	[GSSetPatterColor:]. Also added ivar pattern.
	* Source/gsc/GSGState.m (-dealloc, -deepen, -setColor:state:):
	Deal with pattern ivar.
	* Source/gsc/GSContext.m,
	Source/gsc/GSStreamContext.m: New methods
	[-GScomposite:toPoint:fromRect:operation:fraction:] and
	[-GSSetPatterColor:].
	* Source/xlib/XGGState.m: New method
	[-compositeGState:fromRect:toPoint:op:fraction:] use this to
	implement [-compositeGState:fromRect:toPoint:op:] and
	[-dissolveGState:fromRect:toPoint:delta:].

2005-07-04  Adam Fedor  <fedor@gnu.org>

	* Documentation/news.texi: Update.

2005-07-01  Adam Fedor  <fedor@gnu.org>

	* Documentation/Back/Back.gsdoc,
	Documentation/Back/DefaultsSummary.gsdoc,
	Documentation/Back/WindowFocus.gsdoc,
	Headers/art/ARTContext.h,
	Headers/x11/XGDragView.h,
	Headers/xlib/XGFontSetFontInfo.h,
	Headers/xlib/XGGeometry.h,
	Source/x11/wrasterP.h,
	Source/xlib/XGFontSetFontInfo.m,
	Source/xlib/linking.m,
	Tools/GNUmakefile.postamble,
	Tools/GNUmakefile.preamble,
	Tools/gpbs.1: Add/fix copyright and licenses.

2005-06-17  Adam Fedor  <fedor@gnu.org>

	* Tools/gpbs.m ([PasteboardServer -connectionBecameInvalid:]):
	Use isKindOfClass.

2005-06-07  Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/Win32GState.m (GSCreateBitmap): Allow
	NSCalibratedRGBColorSpace as well.
	(-_compositeGState:fromRect:toPoint:op:fraction:) Removed the
	leading underscore of the method name.

2005-05-26  Adam Fedor  <fedor@gnu.org>

	* Update FSF Address.

2005-05-20  Adrian Robert <arobert@cogsci.ucsd.edu>

	* Headers/xlib/XGGState.h, Source/xlib/XGGState.m: Changed
	HAVE_LIBXFT #ifdefs to HAVE_XFT.
	* configure.ac, config.h.in: Changed comments for HAVE_XFT to
	clarify that it is different from HAVE_LIBXFT (latter is just the
	runtime lib, while former implies a functional installation).

2005-05-14  Adrian Robert <arobert@cogsci.ucsd.edu>

	* Source/xlib/XGGState.m: Added missing #ifdefs to last patch so
	compilation on non-libxft system is unaffected.

2005-05-12  Adrian Robert <arobert@cogsci.ucsd.edu>

	* Headers/xlib/XGGState.h (xft_draw, xft_alpha_draw, xft_color,
	-xftDrawForDrawable, -xftColor): New ivars and methods for caching
	Xft (freetype) draw state.
	* Source/xlib/XGGState.m (-xftDrawForDrawable:, -xftColor): Cache
	Xft draw state.
	* Source/xlib/GSXftFontInfo.m: Use cached Xft draw state for rendering.

2005-04-20  Adam Fedor  <fedor@gnu.org>

	* Fonts/GNUmakefile.postamble: Make sure to install in
	$(GNUSTEP_INSTALLATION_DIR).
	* GNUmakefile: Add check to not install fonts if fonts=no.
	Fixes bug #12749

2005-04-19  Adam Fedor  <fedor@gnu.org>

	* Source/art/path.m ([ARTGState -_stroke:]): Change floorf->floor.
	Fixes bug #12731.

2005-04-16  Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/XGGState.m
	(-_compositeGState:sourcefromRect:fromRecttoPoint:toPointop:opfraction:]):
	New way to compute drect. This fixes bug #12459.

2005-04-07  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m  (-iconSize): Use XFree to free
	xiconsize. Fixes bug #12578.

2005-04-04 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/winlib/WIN32GState.m: tunr on alpha blending and swap colors
	to correct format.

2005-04-01  Adam Fedor  <fedor@gnu.org>

	* Source/win32/WIN32Server.m: Re-add 2005-02-23 change.

	* Source/xlib/GSXftFontInfo.m (-setupAttributes): Make log message
	more verbose.

2005-04-01 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XGDragView.m: Complete code changes to factor out as
	much as possible into the superclass and avoid duplication.

2005-03-30  Adam Fedor  <fedor@gnu.org>

	* Version 0.9.5

	* Headers/x11/XGDragView.h, Source/x11/XGDragView.m: Tag previous
	version of file for release.
	* Source/win32/WIN32Server.m: Revert 2005-02-23 change for this release.

2005-03-29 Richard Frith-Macdonald <rfm@gnu.org>

	* Headers/x11/XGDragView.h: Make this a subclass of GSDragView
	* Source/x11/XGDragView.m: Rewrite to be a subclass of GSDragView
	so that bugfixes from it are in  XGDragView.  Remove lots of
	redundant code.  Still quite a bit to do.
	* Source/win32/WIN32Server.m: Add code to draw own window decorations
	and GSWIN32HandlesWindowDecorations user default to turn it off.
	Fixed code for detecting window at a screen point to ignore invisible
	windows (fixes crash in DnD).
	Altered window type to 'tool' for borderless windows, so that we don't
	get a button in the taskbar for every window we create.

2005-03-29  Adrian Robert <arobert@cogsci.ucsd.edu>

	* Source/art/ftfont.h, Source/art/ftfont.m, Source/art/ftfont-old.m:
	Support DPSxshow, xyshow, ashow, widthshow, and awidthshow in same
	drawString:... method that was just implementing DPSshow, and drop
	the stub that was slated to handle the former methods.
	* Source/art/ARTContext.m: Use the methods defined above.

2005-03-28 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/win32/WIN32Server.m: fix for locating window at point.

2005-03-21  Adam Fedor  <fedor@gnu.org>

	* Source/art/blit.m (artcontext_setup_draw_info): Add mail address
	to log message.

2005-02-23  Luis Cabellos

	* Source/win32/WIN32Server.m: Use new run loop api under mingw32

2005-02-22  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Rewrite, avoid setting vars unecessarily. Use
	pkg-config if possible. Switch back to xlib/winlib when other backends
	don't satisfy dependancies.
	* config.make, config.h: Update to match.
	* GNUmakefile (SUBPROJECTS): Add Fonts
	* Fonts: New folder with default nfont

	* Source/x11/GNUmakefile: Remove unneeded file.

2005-02-12  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m  (-setalpha::): Support for window
	alpha handling on X servers that implement this.

2005-02-12 13:58  Alexander Malmberg  <alexander@malmberg.org>

	* Headers/x11/XGServerWindow.h: Make the border and depth ivars
	unsigned.

2005-02-12 13:54  Alexander Malmberg  <alexander@malmberg.org>

	* Source/x11/XGServerWindow.m (setNormalHints): If the window isn't
	resizable, force the min and max sizes to be equal to the current
	size.
	(-placewindow::): Set the hints after updating xframe.

	Fixes bug #11713.

2005-02-10 00:50  Alexander Malmberg  <alexander@malmberg.org>

	* Tools/gpbs.m (init): Remove the program name from the arguments
	passed to the new task.

2005-02-08 Richard Frith-Macdonald <rfm@gnu.org>

	* Tools/gpbs.m: Use NSTask to re-execute as daemon.

2005-02-05 00:44  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/path.m (-_clip_add_svp:): Handle the case where
	no spans are generated for the path.

2005-01-31 07:30  Christian <christian@tenbyten.com>

	* Tools/gpbs.m: Correct missplaced bracket when built for windows.

2005-01-21 21:51  Alexander Malmberg  <alexander@malmberg.org>

	Various warning and whitespace cleanups.

	* Headers/x11/XGServerWindow.h,
 	* Source/art/ftfont.m,
	* Source/gsc/GSGState.m,
	* Source/win32/WIN32Server.m,
	* Source/x11/XGDragView.m,
	* Source/x11/XGServerEvent.m,
	* Source/x11/XGServerWindow.m: Change signedness of various
	variables.
	* Tools/gpbs.m: Add missing ctype.h include.
	* Source/x11/XGDrawView.m (-_setCursor): Initialize variables.

2005-01-20 22:39  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTContext.m (-initWithContextInfo:): Enable stroke
	adjusting for the default gstate.

2005-01-20 17:58  Alexander Malmberg  <alexander@malmberg.org>

	* Source/xlib/XGGState.m (-DPSrectstroke::::): Don't decrease
	the width/height.

2005-01-15  Adrian Robert <arobert@cogsci.ucsd.edu>

	* Source/x11/XGServerEvent.m (-processEvent:): For XdndPosition
	event (ClientMessage), convert the point from root coordinates
	using XTranslateCoordinates() instead of relying on cached window
	position.  Update cached window position from this.

2005-01-12 00:32  Alexander Malmberg <alexander@malmberg.org>

	* Source/gsc/GSStreamContext.m (-DPSsetstrokeadjust:):
	Give 'setstrokeadjust' a boolean argument.

2005-01-11 21:57  Alexander Malmberg <alexander@malmberg.org>

	* Headers/x11/XWindowBuffer.h: Make the pending_rect ivar a struct
	of int:s.
	* Source/x11/XWindowBuffer.m: Add casts to remove pointer sign
	warnings.
	(-_exposeRect:, -_gotShmCompletion): Update uses of pending_rect.

2005-01-11 20:27  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ARTGState.h: Add strokeadjust ivar.
	* Source/art/ARTContext.m (-DPScurrentstrokeadjust)
	(-DPSsetstrokeadjust): Use the strokeadjust ivar.
	* Source/art/path.m (-DPSrectclip::::): Don't use the optimized
	path if the clipping path is complex.
	(-_stroke::): Remove second argument, rename to ...
	(-_stroke:): ... this. If strokeadjust is active, adjust the path
	to make it clearer.
	(-DPSrectstroke::::): Update _stroke::: call. Remove dash adjustment
	code.
	(-DPSstroke): Update _stroke:: call.
	* Source/art/composite.m: Fix comment typo. Remove some old
	debugging code.

2005-01-11 16:15  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/blit.m: Remove #warning:s.
	* Source/art/blit_scrapheap.m: Add mmx implementation of 15/16bpp
	blit_alpha_opaque.

2005-01-11 16:01  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Copy old contents to ftfont-old.m and
	include that file if the freetype version is <2.1.8. Rewrite
	this file to work with freetype >=2.1.8.
	* Source/art/ftfont-old.m: New file.

2004-12-30 18:38 Gregory John Casamento <greg_casamento@yahoo.com>

	* Source/x11/XGDragView.m: _handleDrag: method correction for
	bug#11352 and for fixes to allow compilation with gcc < 3.0.

2004-12-09  Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m  (-standardcursor:): Don't set
	default cursor, when no standard cursor is available.
	* Source/x11/XGServerWindow.m  (-standardcursor:): Don't set
	default cursor, when no standard cursor is available.
	Replaced the usage of the type xgps_cursor_id_t with Cursor
	throughout this file.

2004-12-06  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m  (-setwindowlevel::): Stop using
	the KDE override atom for window levels. The old behaviour may be
	reactivated via the define USE_KDE_OVERRIDE.

2004-11-28  Matt Rice <ratmice@yahoo.com>

	* Source/x11/XGGLFormat.m (-initWithAttributes:,append,append1): Add
	missing curly brackets, fix append and append1 macros so they can safely
	be used without curly brackets.

2004-11-28 Richard Frith-Macdonald <rfm@gnu.org>

	* Tools/gpbs.m: When run as daemon, re-execute with --no-fork flag
	so that we can work with threading using pth library (default on
	some BSD versions).

2004-11-10 18:41  Alexander Malmberg <alexander@malmberg.org>

	* Source/x11/XWindowBuffer.m (test_xshm): New function.
	(test_xshm_error_handler): New function.
	(+windowBufferForWindow:depthInfo:): Move XShm detection code
	to test_xshm and use it to decide whether to use XShm or not.
	(+initialize): Move use_xshm setting code to test_xshm.
	(+_gotShmCompletion:): Don't warn if we can't find an XWindowBuffer
	for the event.

2004-11-10  Matt Rice <ratmice@yahoo.com>

	* Source/x11/XGServerWindow.m (-iconSize): Implement new method.
	(-iconTileImage:): ditto.

2004-11-09 22:42  Alexander Malmberg <alexander@malmberg.org>

	* Source/x11/XGBitmapImageRep.m: Remove dead file.
	* Source/x11/GNUmakefile: Remove reference.

2004-11-09 22:15  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m (fix_path): Don't prepend the path to absolute
	file names.
	(-initWithFontName:matrix:screenFont:): Initialize cachedGlyph.
	(-advancementForGlyph:): Handle NSNullGlyph.
	(-glyphForCharacter:): Return NSNullGlyph if there's no glyph for
	the character.

2004-11-09 19:00  Alexander Malmberg <alexander@malmberg.org>

	* Tools/gpbs.m (main): If we get a -GSStartupNotification argument,
	post the notification after initializing. Fixes bug #10876.

2004-11-04  Adrian Robert <arobert@cogsci.ucsd.edu>

	* Source/x11/XGServerEvent.m (process_key_event): Modifier detection:
	If default "GSModifiersAreKeys" is YES, ignore 'shift' and/or other
	state and just map keypress to first modifier for they key.
	* Documentation/Back/DefaultsSummary.gsdoc: Document new default
	"GSModifiersAreKeys".
	* Source/xlib/XGBitmap.m (_bitmap_combine_alpha()): corrected typo
	in error message.

2004-10-30  Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/XGContext.m  (+initializeBackend): Use anti-aliaesd
	fonts when available and not specified otherwise.
	* Documentation/Back/DefaultsSummary.gsdoc: Document that AA fonts
	are now the default for xlib.

2004-09-28  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerEvent.m (initialize_keyboard): Corrected typo
	reported by Benhur Stein <benhur.stein@gmail.com>.

2004-09-24  Adrian Robert <arobert@cogsci.ucsd.edu>

	* Source/x11/XGServerEvent.m: Improvement of earlier update to
	determine modifiers from KeySyms rather than KeyCodes: in
	process_key_event, KeySym is now looked up taking shift/compose
	modifier state into account, while in handling of KeyMapNotify in
	processEvent: this state is also considered in the majority of cases.
	Base on suggestions by Kazunobu Kuriyama (kazunobu.kuriyama@nifty.com).

2004-09-23  Adam Fedor  <fedor@gnu.org>

	* Version 0.9.4

	* Documentation/news.texi: Update

2004-09-21 19:19  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Add lineHeight ivar to FTFontInfo.
 	(+defaultLineHeightForFont): Implement.
	(-initWithFontName:matrix:screenFont:): Set lineHeight.

2004-09-19  Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m: Added missing include for new Cygwin
	event pooling.

2004-09-17  Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/Win32GState.m (-_compositeGState:...fraction:):
	Made the use of AlphaBlend depend on a define, which by default is missing.

2004-09-09  Fred Kiefer <FredKiefer@gmx.de>

	* Tools/xpbs.m (-[XPbOwner getSelectionData:type:], -[XPbOwner
	xProvideSelection:]): Removed some compiler warnings.
	* Source/cairo/CairoGState.m (-DPSimage:...:): Slightly improved.
	(-compositeGState:fromRect:toPoint:op:fraction:) New method
	(-compositeGState:fromRect:toPoint:op:,
	-dissolveGState:fromRect:toPoint:delta:) Implemented via new method.
	Added all missing colour conversions.
	(GSShowGlyphs::) Use new method on CairoFontInfo.
	* Header/cairo/CairoFontInfo.h (-drawGlyphs:length:on:atX:y:) New method.
	* Source/cairo/CairoFontInfo.m (-drawGlyphs:length:on:atX:y:) New method.
	Moved some includes from header to here, extracted method
	[setupAttributes] and other cleanup.

2004-09-08  Adam Fedor  <fedor@gnu.org>

	* Headers/x11/XGServer.h: Add 8bit fast drawing.
	* Source/x11/XGServer.m ([XGScreenContext
	-initForDisplay:screen:]): For 8bit, test for RGB_BEST_MAP.
	* Source/xlib/XGBitmap.m (_pixmap_combine_alpha,
	_bitmap_combine_alpha, _pixmap_read_alpha): Add 8 bit case.
	(patch from Paul Secchia <paul@worldnet.att.net>).

	* Documentation/Back/DefaultsSummary.gsdoc: Document it.

	* Documentation/news.texi: Update for new release.

2004-09-05 00:05  Alexander Malmberg <alexander@malmberg.org>

	* Tools/GNUmakefile.preamble: Compile with -Wall.
	* Tools/xpbs.m: Rename to +initializePasteboard. Return NO iff
	XOpenDisplay fails.
	* Tools/win32pbs.m (+initialize): Rename to +initializePasteboard.
	Return YES.
	* Tools/gpbs.m ([PasteboardServer -init]): Call	+initializePasteboard
	instead of +class. Set xPbClass to nil if the call fails.

2004-09-01  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Prepend don't overwrite CFLAGS and LDFLAGS given
	in environment.

2004-08-31  Adrian Robert <arobert@cogsci.ucsd.edu>

	* Source/x11/XGServerEvent.m: Changed mapping of GNUstep modifier
	keys to X11 KeySyms instead of KeyCodes.  (Added check_key(); updated
	check_modifier(), -processEvent: (KeyMapNotify), changed
	default_key_code() to key_sym_from_defaults(), updated
	initialize_keyboard().)

2004-08-30  Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/GSXftFontInfo.m: Changed usage of CString for font
	name and family into UTF8String for XFT. Patch by Yen-Ju Chen
	<yjchenx@hotmail.com>.

2004-08-24  Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m (-windowbounds:): Corrected variable
	name, so the fiel compiles again.
	(-setupRunLoopInputSourcesForMode:): Added new event polling code
	for Cygwin.
	* Source/cairo/CairoContext.m (-NSReadPixel:, beep): Removed methods.

2004-08-23  Fred Kiefer <FredKiefer@gmx.de>

	* Source/cairo/CairoContext.m (-DPScurrentalpha:,
	-DPSsetoffset::): Removed methods.
	* Source/cairo/CairoGState.m (-offset, -setoffset:): Added methods.
	(-forwardInvocation:): Improved output.
	(-GSSetDevice:::) Commented out NSLog calls.
	* Source/gsc/GSGState.m (-_showString:lenght:): Removed this
	method which was a left over from last patch.

2004-08-09 14:38  Alexander Malmberg <alexander@malmberg.org>

	* Source/win32/WIN32Server.m, Source/win32/WIN32ServerEvent.m,
	Headers/win32/WIN32Geometry.h (MSScreenRectToGS, GSScreenRectToMS):
	The 'GS' rect is, in the terminology of NSWindow.h, the window frame,
	not the screen frame. make the conversions match this and update
	the callers.
	* Source/x11/XGServerWindow.m (-_OSFrameToXFrame:for:,
	-_OSFrameToXHints:for:, -_XFrameToOSFrame:for:): Update conversions.
	(-windowdevice:): Remove artificial delays and geometry querying.
	Update based on the frame from the last ConfigureNotify.
	(-placewindow::): Remove event coordinate adjustments. Always send
	move/resize events to -gui right away.

2004-08-03  Fred Kiefer <FredKiefer@gmx.de>

	* Header/cairo/*:
	* Source/cairo/*:
	* Source/GSBackend.m:
	* configure.ac:
	* configure:
	Added cairo backend from Banlu Kemiyatorn <object@gmail.com>.

2004-07-30 15:52  Alexander Malmberg <alexander@malmberg.org>

	* Headers/gsc/GSCStateOps.h, Source/gsc/GSContext.m,
	Source/gsc/GSGState.m (-GSReadRect:): New method.

	* Source/art/GNUmakefile: Add ReadRect.m.
	* Source/art/ReadRect.m: New file.
	* Source/art/blit.m, Source/art/blit.h: Add read_pixels_a and
	read_pixels_o. Fix spurious low bits in BLEAN_READ for 16bpp and
	15bpp modes.

	* Source/xlib/XGContext.m (-GSReadRect:): Remove.
	* Source/xlib/XGGState.m (-GSReadRect:): Update key names and set all
	keys even if the rectangle is degenerate. Return nil if the image
	can't be read. Set the Matrix key.

2004-07-26 15:37  Matt Rice <ratmice@yahoo.com>
		  Alexander Malmberg <alexander@malmberg.org>

	* Source/x11/XGServerWindow.m (-_createAppIconPixmaps): New method.
	(-orderwindow:::): Use -_createAppIconPixmaps to set IconPixmapHint
	if we're using windowmaker.

2004-07-14  Adam Fedor  <fedor@gnu.org>

	* Documentation/Back/Standards.txt: update.

2004-07-13 03:11  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/shfill.m (function_setup, -DPSshfill:): NSDebugLLog
	helpful error messages if something was wrong in the shader
	dictionary.

2004-07-09  Adam Fedor  <fedor@gnu.org>

	* Documentation/Back/Standards.txt: New EWMH file.

2004-07-06  Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/Win32GState.m (-_compositeGState:...fraction:):
	Applied alpha blending patch by MA Garcias <lists@tragnarion.com>.
	Disabled GDI_WIDELINE_BEZIERPATH_BUG.
	* configure.ac: Added test for msimg32, needed for AlphaBlend.
	* configure: Regenerated.
	* Source/xlib/XGGState.m: Moved additional show methods to super class.
	* Source/gsc/GSGState.m: Implemented additional show methods based
	on (-showGlyphs::) and simple glyph conversion.

2004-06-19  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m (-standardcursor::): Added more
	standard cursors.
	* Source/win32/WIN32Server.m (-standardcursor::): Added more
	standard cursors.

2004-06-28 00:45  Alexander Malmberg <alexander@malmberg.org>

	* Headers/x11/XGServerWindow.h: Add buffer_width and buffer_height
	ivars.
	* Source/x11/XGServerWindow.m (-windowdevice:): Use buffer_width and
	buffer_height instead of xframe to keep track of the size of the
	buffer and alpha_buffer.

2004-06-28 00:41  Alexander Malmberg <alexander@malmberg.org>

	* Source/xlib/XGGState.m (-setWindowDevice:): Remove use of
	cast-as-lvalue.

2004-06-26 13:04  Alexander Malmberg <alexander@malmberg.org>

	* Source/x11/XGServerEvent.m (-processEvent: ConfigureNotify):
	Don't ignore the event for unmapped windows. Use XTranslateCoordinates
	to get the size and position right for both real and artificial
	events. Only update the position hints if we're mapped.

	* Source/x11/XGServerWindow.m: Add handlesWindowDecorations variable.
	(-handlesWindowDecorations): New method.
	(setWindowHintsForStyle, -styleoffsets:::::): If we aren't handling
	window decorations, treat all windows as borderless.
	(-stylewindow::, -setinputstate::): Assert that we're handling window
	decorations.
	(-window::::): Create the window structure earlier so it can be used
	to convert frames.
	(-_setupRootWindow): Set handlesWindowDecorations based on the
	GSX11HandlesWindowDecorations defaults value.

	* Documentation/Back/DefaultsSummary.gsdoc: Document
	GSX11HandlesWindowDecorations.

2004-06-19  Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m (-findWindowAt:windowRef:excluding:)
	New method for D&D. (-dragInfo), (-slideImage:from:to:) Removed.

2004-06-11  Adam Fedor  <fedor@gnu.org>

	* Version 0.9.3
	* Documentation/news.texi: Update.

	* configure.ac: Remove WindowMaker/libwraster check

2004-05-27  Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32ServerEvent.m (-windowEventProc:::) Added
	handling of size and move events and extracted end of resize event
	handling into the same new method. PAINT now always validates the
	whole window.
	Patch by MA Garcias <lists@tragnarion.com>.
	New method [-resizeBackingStoreFor:] used for end of resize events.

2004-05-13 17:11  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m (-advancementForGlyph:): Return a zero size for
	control glyphs.

	(-positionOfGlyph:precededByGlyph:isNominal:): Check if either glyph
	is a control glyph before converting to freetype glyph indices.

2004-05-12  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/win32/WIN32Geometry.h: (GSWindowOriginToMS) corrected computation.
	* Source/win32/WIN32Server.m (-orderwindow:::) Removed obsolte
	"return" in non-NSWindowOut case and use flag SWP_NOACTIVATE.
	(-placewindow::, -movewindow::) Don't use flag SWP_NOREDRAW.
	Patch by MA Garcias <lists@tragnarion.com>.
	* Source/win32/WIN32ServerEvent.m Corrected definition of the
	GET_X_LPARAM and GET_Y_LPARAM macros.

2004-03-30 01:49  Alexander Malmberg <alexander@malmberg.org>

	* Source/x11/XGGLFormat.m (-initWithAttributes:): Fix handling of
	15bpp and 16bpp modes (NSOpenGLPFAAccumSize).

2004-02-29 21:42  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.h, Source/art/ftfont.m: Add
	-drawGlyphs::at::to::::::alpha::color::::transform:drawinfo: method.

	* Source/art/ARTContext.m (-GSShowGlyphs::): Use it if the
	destination window has an alpha buffer.

	(-initWithContextInfo:): Try to find a DirectColor or TrueColor
	visual before falling back on the default visual.

2004-02-28  Adam Fedor  <fedor@gnu.org>

	* Version 0.9.2

2004-02-28  Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m (-setupRunLoopInputSourcesForMode:):
	Use a shorte timer interval.

2004-02-24 15:45  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/image.m: Add support for grayscale, one-is-black
	color spaces.
	(_image_get_color_rgb_cmyk_gray): Invert gray value if one is black.
	(-DPSimage:::::::::::): If the color space is NSDeviceBlackColorSpace
	or NSCalibratedColorSpace, treat one as black.

2004-02-17  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerWindow.m ([XGServer -orderwindow:::]): Don't
	try to raise the root window.

2004-02-08 23:20  Gregory John Casamento <greg_casamento@yahoo.com>

	* Source/xlib/XGGState.m: Added necessary calibrated
	colorspaces to the DPSimage: method.

2004-02-04 01:48  Alexander Malmberg <alexander@malmberg.org>

	* Source/x11/XGServerEvent.m: Remove uses of the now deprecated
	"casts as lvalues" gcc extension.

2004-01-27  Adam Fedor  <fedor@gnu.org>

	* Documentation/Back/DefaultsSummary.gsdoc: Fix doc markup
	* Documentation/Back/GNUmakefile: Change install location.

2004-01-25  Fred Kiefer <FredKiefer@gmx.de>

	* Source/art/shfill.m (-DPSshfill:):
	* Source/winlib/Win32GState.m (-DPSimage::::):
	* Source/xlib/XGGState.m (-DPSimage::::): Replaced
	appendTransform: with prependTransform:.
	* Source/art/image.m (-DPSimage:): Replaced prependTransform: with
	appendTransform:.

2004-01-25 13:52  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/image.m (-_image_do_rgb_transform:::): Fix off-by-one
	error in horizontal clipping.

2004-01-10  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Check if XShm is really implemented (it isn't on
	Cygwin even though the headers are there).
	* Source/x11/XGServerEvent.m ([XGServer -processEvent:event]):
	ifdef around XShm call.

2004-01-10  Adam Fedor  <fedor@gnu.org>

	* Prevent orderwindow:relativeTo: from making a window key.
	* Headers/x11/XGGeneric.h: Add Ivar.
	* Source/x11/XGServerEvent.m (-_handleTakeFocusAtom:forContext:):
	Don't take focus if we ordered this window previously.

	* Source/x11/XGServerWindow.m ([XGServer -orderwindow:::]):
	Set desiredOrderWindow.
	([XGServer -setinputfocus:]): Reset it.

2004-01-10  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerWindow.m ([XGServer -orderwindow:::]):
	When otherWin == 0, make sure the window does not go in front
	of the current key window.

	* Source/win32/WIN32Server.m ([WIN -orderwindow:op:otherWin:winNum]):
	Allow otherWin < 0.

2004-01-10 16:25  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/blit.m: Replace uses DI_16_B5G5R5A1 and DI_16_B5G6R5
	with uses of DI_16_B5_G5_R5_A1 and DI_16_B5_G6_R5.
	(sover_ao): Add an optimized version for the 16/15 bpp modes.
	(satop_aa): Simplify calculation of da'.
	(datop_aa): Simplify calculation of da'. Fix the rounding.
	(xor_aa): Fix the rounding.
	(DI_16_B5_G5_R5_A1, DI_16_B5_G6_R5): Unpack pixels in a more
	efficient way.

	* Source/art/blit_scrapheap.m: New file.

2004-01-07 14:51  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/composite.m (-_composite_func::::::): If the source has
	alpha, the destination is opaque, and the operator is NSCompositeCopy,
	set dst_needs_alpha to YES.

	(-compositerect:op:): If alpha is needed, make sure alpha is always
	created _before_ setting up the alpha destination pointers. Only
	write alpha for NSCompositeCopy if the current color isn't opaque.

2004-01-07  Fred Kiefer <FredKiefer@gmx.de>

	Added missing .cvsignore files and extended the existing ones.

2003-12-31  Fred Kiefer <FredKiefer@gmx.de>

	* Tools/win32pbs.m New file to handle windows clipboard
	interaction.
	* Tools/GNUmakefile
	Compile new file for windows backend.
	* Tools/gpbs.m (PasteboardServer -init) for windows backends use
	Win32PbOwner as the pasteboard owner class.

2003-12-30  Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/path.m (-GSSendBezierPath:) preset the count
	variable, as this is expected by the method [NSBezierPath
	getLineDash:count:phase:].
	* Source/xlib/XGGState.m (-_doPath::draw:) allways set fill rule
	for path_fill.

2003-12-30  Fred Kiefer <FredKiefer@gmx.de>

	* Source/art/path.m (-DPSrectstroke::::,
	-_axis_rectangle::::vpath:axis::::pixel:): Adopted to change in
	NSAffineTransform.h.

2003-12-28  Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m (initWithAttributes:): Adjusted
	spelling of useWMTaskBar to header, to get it compile.

2003-12-26  Adam Fedor  <fedor@gnu.org>

	* Focus fixes.
	* Headers/win32/WIN32Server.h: Add flags ivar
	* Source/win32/WIN32Server.m (orderwindow:::): If useWMTaskBar
	flag set, don't show app icon and don't order out menu window.
	* Source/win32/WIN32ServerEvent.m (windowEventProc:::):
	On activation message, activate app, on deactivation message,
	deactivate app (if message comes from menu window).

2003-12-25  Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m (-_initWin32Context) set a default
	cursor, which is used each time the window is entered.

2003-12-23  Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/WIN32GState.m (-copyBits:fromRect:toPoint:): Made
	save against self and source being the same object and corrected
	computation for flipped views. This code is copied over from xlib.
	* Source/winlib/WIN32FontEnumerator.m Reimplemented the whole file.
	* Source/winlib/WIN32FontInfo.m (-setupAttributes) assign font
	family ivar and use common functions with font enumerator.
	* Source/win32/WIN32ServerEvent.m (WIN32Server
	-windowEventProc::::) flag that we handle erasing of the
	background ourselves. (invalidateWindow) copy from backing store
	if possible.

2003-12-03  Adam Fedor  <fedor@gnu.org>

	* Headers/win32/WIN32Server.h: Add ivars currentFocus, desiredFocus.
	* Source/win32/WIN32Server.m (setinputfocus:): Don't set if window
	already has focus
	* Source/win32/WIN32ServerEvent.m (-windowEventProc::::): Main
	event handler.
	(mainWindowProc): Call -windowEventProc::::.
	(-handleGotFocus:): Handle main/key directly without sending event
	to frontend.

2003-12-02  Adam Fedor  <fedor@gnu.org>

	* Source/win32/WIN32Server.m: Add a bunch of DebugLLog
	statements (WTrace, NSEvent, Focus).  Move event functions to...
	* Source/win32/WIN32ServerEvent.m: here.

2003-12-02 Leigh Smith   <leigh@bogus.example.com>

	* Source/winlib/WIN32GState.m ([WIN -_paintPath:drawType]):
	Corrected bug in Bezier curves, a bug in line widths and adds a
	workaround for a Windows GDI drawing bug when drawing curved wide
	lines.

2003-11-25 20:12  Alexander Malmberg <alexander@malmberg.org>

	* Source/x11/XGServerEvent.m (initialize_keyboard): Make sure that
	no _*_keycodes contains the same keycode twice.

2003-11-25 12:09  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m ([FTFontInfo_subpixel
	-drawGlyphs::at::to::::::color::::transform:drawinfo:): If freetype
	is sufficiently new, use its LCD subpixel support instead of scaling
	manually.

2003-11-23  Adam Fedor  <fedor@gnu.org>

	* Version 0.9.1

2003-11-23  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerEvent.m (process_modifier_flags()) treat caps
	lock as alpha shift and not as shift modifier.

2003-11-20  Adam Fedor  <fedor@gnu.org>

	* Source/xlib/XGBitmap.m (_pixmap_combine_alpha): Use RGetClosestXColor
	to get colors on 8bit displays.
	(_bitmap_combine_alpha): Likewise. Fixes PR #6341

2003-11-19  Benhur Stein <benhur@inf.ufsm.br>

	* Source/x11/XGServerEvent.m ([XGServer -processEvent:event]): Correct
	off-by-one error.

2003-11-19  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServer.m: Add some docs.

	* Window focus fixes.
	* Source/x11/XGServerEvent.m ([XGServer -processEvent:event]): Move
	take focus code...
	([XGServer -_handleTakeFocusAtom:forContext:]):  ...to here. Check for
	common problems before passing event to frontend.
	([XGServer -processEvent:event])(FocusOut): Invalidate current
	focus window and focus request.

2003-11-18 16:57  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Remove fallback ivar. Add advancementImgd
	and a simple glyph size cache for use in -advancementForGlyph:.

	(-initWithFontName:matrix:screenFont:): Set up advancementImgd.
	(-advancementForGlyph:): Use advancementImgd instead of setting up
	a FTC_ImageTypeRec on each call. Cache glyph sizes to avoid expensive
	freetype calls.

2003-11-05  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerEvent.m ([XGServer -processEvent:]): New
	method broken off from -receivedEvent:type:extra:forMode:.

2003-11-05 03:29  Alexander Malmberg <alexander@malmberg.org>

	* Source/x11/XGServerEvent.m (-receivedEvent:type:extra:forMode:):
	Casts as lvalues will be deprecated in gcc 3.4. Thus, don't assign
	to the cWin macro. Reported by Lyndon Tremblay.

2003-11-02 02:58  Alexander Malmberg <alexander@malmberg.org>

	* Source/gsc/GSStreamContext.m Whitespace cleanups.

	(writeHex): Use index properly; don't always write the first byte.
	Use fputc() instead of fprintf() (was doing the hex conversion
	manually anyway, might as well make it efficient).

2003-11-02 02:27  Alexander Malmberg <alexander@malmberg.org>

	* Source/gsc/GSStreamContext.m (fpfloat, writeHex): Make static.

2003-10-29  Yen-Ju Chen <yjchenx@hotmail.com>

	* Source/x11/XGServerWindow.m ([XGServer -_setupRootWindow]): Always
	set WindowMaker app icon property
	([XGServer -window::::]): Idem for GNUstep window styles.
	([XGServer -stylewindow::win]): Idem.
	([XGServer -docedited::win]): Idem.
	([XGServer -setwindowlevel::]): Idem.

2003-10-22  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Check for X11 function prototypes (Fixes problems
	on Solaris 2.6).

2003-10-20 20:09  Alexander Malmberg <alexander@malmberg.org>

	* Tools/xpbs.m (-xProvideSelection:): Copy all characters and the
	terminating nul in XG_COMPOUND_TEXT handling.

2003-10-20 16:20  Alexander Malmberg <alexander@malmberg.org>

	* Tools/xpbs.m (+xSelectionNotify:): Don't call XGetAtomName()
	if the property is None.

2003-10-19  Adam Fedor  <fedor@gnu.org>

	* Source/xlib/XGBitmap.m: Cache color lookup to reduce use
	of XQueryColor (based on code from Marko Riedel).

	* configure.ac: Add 2.57 prereq

2003-10-15  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Don't look for jpeg/tiff (already linked in by gui).

2003-10-08 15:58  Alexander Malmberg <alexander@malmberg.org>

	* Source/xlib/XGContext.m (+initializeBackend): Give NSLog an
	objective-c string (@""), not a c string (""). Reported by Matt
	Rice.

2003-10-05  Adam Fedor  <fedor@gnu.org>

	* Documentation/GNUmakefile: Make Back documentation
	* Documentation/Back/GNUmakefile: Set DocumentationDirectory.

	* Source/x11/raster.c (RMakeCenteredImage): Remove (unused).

2003-10-04 14:27  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/path.m (-DPSrectclip::::): Move the call to -DPSnewpath
	so it gets called on all paths through the method.

2003-10-03  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Use -Wl for netbsd linker options.

2003-10-02  Adam Fedor  <fedor@gnu.org>

	* Source/xlib/XGGState.m (-DPSrectclip::::): Clear path.
	* Source/winlib/WIN32GState.m (-DPSrectclip::::): Idem.
	* Source/art/path.m (-DPSrectclip::::): Idem.

2003-09-30  Adam Fedor  <fedor@gnu.org>

	* Source/gsc/GSGState.m ([GSGState -DPSrectclip::::]): Clear
	the current path after clipping.

2003-09-29  Adam Fedor  <fedor@gnu.org>

	* Version 0.9.0

2003-09-22 13:03  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/image.m (-_image_do_rgb_transform:::): Check if the
	coordinates involved are too large to handle normally. If they
	are, scale down the numbers a bit (gives less accuracy, but no
	overflow).

2003-09-20  Adam Fedor  <fedor@gnu.org>

	* Headers/xlib/XGGState.h: Add GSReadRect def.
	* Headers/xlib/XGPrivate.h: Add _pixmap_read_alpha def.
	* Source/xlib/XGBitmap.m (_pixmap_read_alpha): Implement.
	* Source/xlib/XGGstate.m (-GSReadRect:): Idem.

2003-09-15  Adam Fedor  <fedor@gnu.org>

	* Source/gsc/GSGState.m ([GSGState -deepen]): Typo fix - copy
	textCtm (reported by Banlu Kemiyatorn <id@project-ile.net>).

2003-09-09  Adam Fedor  <fedor@gnu.org>

	* Source/gsc/GSContext.m (-DPSsetgstate:): Copy gstate so we
	don't modify original.

2003-09-08 01:39  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/blit.m (artcontext_setup_draw_info): Add some debug
	logging.

2003-09-03  Adam Fedor  <fedor@gnu.org>

	* Source/xdps/GNUmakefile: include config.make (patch from
	Aredridel <aredridel@nbtsc.org>).

2003-09-02  Adam Fedor  <fedor@gnu.org>

	* Tools/gpbs.m (init): Don't mess with file descriptors on MinGW.

2003-09-02  Fred Kiefer <FredKiefer@gmx.de>

	* Tools/xpbs.m
	Made all calls to XGetAtomName() free their memory later on.
	Removed function osTypeToX(). Extracted method
	[getSelectionData:type:] from [xSelectionNotify:].
	[xSelectionNotify:] now supports incremental data transfer and is
	save against failing string conversions. Complete rewrite of
	[xProvideSelection:] to better follow the ICCCM
	specification. This now implements TIMESTAMP, MULTIPLE and
	COMPOUND_TEXT (all untested!)

2003-08-31  Adam Fedor  <fedor@gnu.org>

	* Tools/gpbs.m (init): Close file descriptors so gpbs can be a proper
	daemon.

2003-08-26  Adam Fedor  <fedor@gnu.org>

	* Version 0.8.9

2003-08-19  Fred Kiefer <FredKiefer@gmx.de>

	* Tools/xpbs.m
	Made some of the NSLog messages	more explicit on what did go wrong.

2003-08-17  Fred Kiefer <FredKiefer@gmx.de>

	* Tools/gpbs.m
	[PasteboardServer init] made sure that class XPbOwner gets
	initialized, by adding a dummy call to class.
	* Tools/xpbs.m
	[XPbOwner requestData:] added loop to get data of size bigger that 32K
	bytes. [XPbOwner pasteboard:provideDataForType:] and
	[XPbOwner pasteboardChangedOwner:] removed the remaining ifdef tests for
	X_HAVE_UTF8_STRING. Removed function xTypeToOs() as this was not used.

2003-08-16  Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/XGFontManager.m
	In load_cache() enclosed loading of archive in exception handling and
	removed the writing of the archive previously done to update the format.

2003-08-05  Martin Brecher <martin@mb-itconsulting.com>

	* Tools/gpbs.1: Updated, fixed typos, added BUGS and HISTORY
	section, file is now unprocessed as it should be.

2003-08-10 23:26  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Override the new default font name methods.
	Log the glyph when logging FTC_SBitCache_Lookup errors.

2003-08-09  Fred Kiefer <FredKiefer@gmx.de>

	* Tools/xpbs.m
	Reworked the X interaction so that both STRING and UTF8_STRING are
	supported both ways.

2003-08-08  Fred Kiefer <FredKiefer@gmx.de>

	* Tools/xpbs.m
	[XPbOwner initialize] switched the usage of PRIMARY and CLIPBOARD.
	* Documentation/Back/DefaultsSummary.gsdoc
	Add new GSOldClipboard deafult.

2003-08-02  Kazunobu Kuriyama  <kazunobu.kuriyama@nifty.com>

	* Tools/xpbs.m: Multi-lingual cut & paste support

2003-08-02 13:29  Alexander Malmberg <alexander@malmberg.org>

	* Source/x11/XGServer.m (-dealloc): Only use the rcontext freeing
	hack when using our own wraster.

2003-08-01  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Move freetype check before Xft check and
	fix up flags.

2003-07-30  David Ayers  <d.ayers@inode.at>

	* Created tag 'pre-header-reorg-20030731'.

	* Source/art/GNUmakefile: Do not make headers publilc.
	* Source/gsc/GNUmakefile: Ditto.
	* Source/x11/GNUmakefile: Ditto.
	* Source/xdps/GNUmakefile: Ditto.
	* Source/xlib/GNUmakefile: Ditto.

	* Headers/win32/*.h: Update includes for new header structure.
	* Headers/winlib/*.h: Ditto.
	* Headers/x11/XGServer.h: Ditto.
	* Headers/xlib/*.h: Ditto.

	* Source/art/ftfont.m: Ditto.
	* Source/gsc/*.m: Ditto.
	* Source/x11/*.m: Ditto.
	* Source/xdps/*.m: Ditto.
	* Source/xlib/*.m: Ditto.

	* Tools/gpbs.m: Ditto.

2003-07-26  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServer.m
	In [XGScreenContext dealloc] free hermes_data of RContext.

2003-07-26  Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSGState.m
	In [GSCurrentCTM] autorelease the returned value.

2003-07-23  Adam Fedor  <fedor@gnu.org>

	* Version 0.8.8

2003-07-22  Kazunobu Kuriyama <kazunobu.kuriyama@nifty.com>

	* Headers/xlib/XGFontSetFontInfo.h: New file.
	* Source/xlib/XGFontSetFontInfo.m: New file.
	* Source/xlib/XGContext.m:
	([XGContext +initializeBackend]): Modified to use XGFontSetFontInfo.
	* Source/xlib/GNUmakefile: Modified to include XGFontSetFontInfo.m.

2003-07-22  Adam Fedor  <fedor@gnu.org>

	* Headers/x11/XGOpenGL.h (GSglxMinorVersion): New

	* Source/x11/XGGLContext.m (+clearCurrentContext): Use it to call
	correct function.
	(-initWithFormat:shareContext:, makeCurrentContext): Idem.
	* Source/x11/XGGLFormat.m ([ XGGLPixelFormat -getValues:
        forAttribute:forVirtualScreen:]): Idem.
	(initWithAttributes:): Idem.
	(Patch from Damien Genet with some changes).

2003-07-21  Adam Fedor  <fedor@gnu.org>

	* Documentation/Back/DefaultsSummary.gsdoc: Add new
	GSXIMInputMethodStyle deafult (Adam Fedor).

	* Source/x11/context.c, StdCmp.c, convert.c, raster.c, scale.c:
	Updated to 0.80.2 version

2003-07-13  Kazunobu Kuriyama <kazunobu.kuriyama@nifty.com>

	* Header/x11/XGInputServer.h: Add the new category InputMethod.
	* Header/x11/XGServer.h: Add the new category InputMethod.
	* Source/x11/XIMInputServer.m:
	([XIMInputServer (XIMPrivate) -ximStyleInit]): Cover the input
	method styles RootWindow, OffTheSpot, OverTheSpot, and OnTheSpot.
	([XIMInputServer (XIMPrivate) -ximCreateIC:]): Implement OffTheSpot
	and OverTheSpot.  Implement the category InputMethod.
	* Source/x11/XGServer.m: Implement the category InputMethod.  Add
	overriding methods to NSTextView (NSView (InputMethod)).

2003-07-27 Richard Frith-Macdonald <rfm@gnu.org>

	* Tools/gpbs.m: Use protocols
	* Source/x11/XGServerWindow.m: Use UTF8String rather than cString
	to avoid crashes using non-ascii strings ... is this right?

2003-07-16  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServer.m
	Added [XGScreenContext dealloc] to clean up RContext.
	* Source/x11/XGServerWindow.m
	[_checkWindowManager] better clean up of memory.
	[_setupRootWindow] and [titlewindow::] free the value of the
	XTextProperty.

2003-07-16  Fred Kiefer <FredKiefer@gmx.de>

	* Tools/xpbs.m
	[XPbOwner xSelectionNotify:] and [XPbOwner xProvideSelection:]
	explicit conversion of transferd strings from/to
	NSISOLatin1StringEncoding.

2003-07-05  Adam Fedor  <fedor@gnu.org>

	* Documentation/Back/DefaultsSummary.gsdoc: New file.

	* Tools/gpbs.1: Unziped
	* Tools/GNUmakefile.postamble: gzip man files.

	* configure.ac: Add openbsd flags like freebsd.

2003-07-06  Fred Kiefer <FredKiefer@gmx.de>

	* Header/x11/XGGeneric.m
	Added some new Atoms to structure XGWMWinTypes.
	* Source/x11/XGServerWindow.m
	[_checkWindowManager] initializes the new atoms. In
	[setwindowlevel::] changed the EWMH case, so that it works
	correctly with KDE 3.1. There we used to have borders on menu windows.

2003-07-05 14:05  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Handle freetype <=2.1.2 in the error
	reporting.

2003-07-03 22:03  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Give more information when reporting
	FTC_SBitCache_Lookup() errors.

2003-07-02 17:28  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m (-initWithFontName:matrix:screenFont:):
	Return nil if it's not a valid font.

2003-07-01 16:37  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Use the correct set of flags when loading
	glyphs for freetype >=2.1.3. Anti-alias by default if there is no
	defaults value for GSFontAntiAlias.

2003-06-30 18:11  Alexander Malmberg <alexander@malmberg.org>

	* Source/xlib/XGFont.m (-xCharStructForGlyph:):	Don't try to treat
	NSGlyph pointers as unichar pointers; break on non-little-endian
	systems.

2003-06-29 17:34  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m (-initWithFontName:matrix:screenFont:): Round
	the matrix entries for screen fonts to integers to get consistent
	handling of non-integer sized screen fonts.

2003-06-28 15:27  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Use a specific table when translating
	face names. Add a list of standard face names so make_strings can
	generate .strings files.

	* Source/GNUmakefile: Add nfontFaceNames.strings to the list of
	localized resources. Set the language list to English and Swedish.

	* Source/GNUmakefile.preamble: Add a quick hack to make make_strings
	pick up the .m files in all subprojects.

	* Source/English.lproj/nfontFaceNames.strings,
	Source/Swedish.lproj/nfontFaceNames.strings: Add English (dummy) and
	Swedish translations of the nfont face names.

2003-06-27 Richard Frith-Macdonald <rfm@gnu.org>

	* Tools/gpbs.m: Removed unused methods no longer in protocol.

2003-06-25  Adam Fedor  <fedor@gnu.org>

	* Tools/gpbs.1.gz: New file (from Martin Brecher).
	* Tools/GNUmakefile.postamble (after-install): Install it.

2003-06-26 00:33  Alexander Malmberg <alexander@malmberg.org>

	* Source/ftfont.m (-_generateGlyphsForRun:at:): Add (experimental)
	handling of utf16 to glyph generation so planes beyond the BMP can
	be used.

2003-06-20  Adam Fedor  <fedor@gnu.org>

	* Version 0.8.7

2003-06-17 20:07  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/composite.m, Source/art/ftfont.m, Source/art/path.m:
	Minor cleanups.

2003-06-17  Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSStreamContext.m (GSShowGlyphs::, output:length:)
	Removed compiler warnings about signed/unsigned comparision.
	Declared the extension method [GSFontInfo nameOfGlyph:].
	In [NSDrawBitmap:::::::::::] initiliale variable alpha to stop the
	compiler from complaining.
	* Source/x11/xdnd.c (xdnd_is_dnd_aware(), xdnd_get_type_list)
	Removed compiler warnings about signed/unsigned comparision.
	* Header/x11/XGGeneric.h
	Made ivar focusRequestNumber unsigned.
	* Source/x11/XGServerEvent.m (receivedEvent:type:extra:forMode:)
	Removed compiler warnings about signed/unsigned comparision.
	[receivedEvent:type:extra:forMode:] initialiase deltaY in all
	cases.
	* Source/x11/XGServerWindow.m (PropGetCheckProperty(),
	_setupRootWindow, windowdevice:, setwindowlevel::, imagecursor::::::)
	Removed compiler warnings about signed/unsigned comparision.
	Adopted to changes in GSDisplayServer.h.
	* Source/x11/XGDragView.m (_handleEventDuringDragging:,
	_updateAndMoveImageToCorrectPosition, _xWindowAcceptingDnDunderX:Y:,
	_xWindowAcceptingDnDDescendentOf:underX:Y:)
	Removed compiler warnings about signed/unsigned comparision.
	* Source/xlib/XGGState.m (_doComplexPath:::)
	Removed compiler warnings about signed/unsigned comparision.
	* Source/xlib/GSXftFontInfo.m (setupAttributes)
	Removed compiler warnings about unused variable.
	* Source/win32/WIN32Server.m
	Adopted to changes in GSDisplayServer.h.
	windowStyleForGSStyle() changed parameter style to unsigned.
	* Tools/xpbs.m
	Removed include for file GSPasteboardServer.h to remove some
	compiler warnings.

2003-06-12 21:44  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Handle 2.0.* correctly in the freetype
	version check.

2003-06-12 19:22  Alexander Malmberg <alexander@malmberg.org>

	* Source/x11/XWindowBuffer.m: Add XWindowBufferUseXShm defaults
	variable.

2003-06-11 15:32  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Implement -glyphWithName: and
	-appendBezierPathWithGlyphs:count:toBezierPath:.

2003-06-07 23:05  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Add some ifdef:s to get it to compile with
	both freetype <=2.1.2 and >=2.1.3.

2003-06-06  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerWindow.m (setWindowHintsForStyle): Specifically
	check for success of XGetWindowProperty call.

2003-05-25  Adam Fedor  <fedor@gnu.org>

	* Version 0.8.6

2003-05-19 15:56  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/shfill.m (function_getsample): Clamp to range.
	(function_setup): Use -doubleValue, not -intValue, for values that
	are allowed to be real numbers.

2003-05-18  Benhur Stein

	* Source/xlib/XGGState.m (-copyBits:fromRect:toPoint:): Draw
	correctly when source and dest have different flip'ness.
	(-_compositeGState:sourcefromRect:fromRecttoPoint:toPointop:opfraction:]):
	Draw correctly when source is flipped.

2003-05-18 00:03  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/GNUmakefile, Source/art/shfill.m: Implement basic
	version of shfill operator.

2003-05-17 14:49  Alexander Malmberg <alexander@malmberg.org>

	* configure.ac: Make sure to add -lm when adding -ltiff (wasn't done
	in one case).

	* configure: Regenerate.

2003-05-11 19:21  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Report errors in more cases.

2003-05-07  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Check for freetype separetely and add to xlib flags
	if present.

2003-05-02  Adam Fedor  <fedor@gnu.org>

	* Documentation/Back/GNUmakefile: Remove GNUSTEP_MAKEFILES

2003-04-27  Adam Fedor  <fedor@gnu.org>

	* Updates for filesystem change.
	* GNUmakefile (GNUSTEP_MAKEFILES): Remove
	* Documentation/GNUmakefile, Source/GNUmakefile,
	Source/*/GNUmakefile, Tools/GNUmakefile: Idem
	* configure.ac: Replace $GNUSTEP_SYSTEM_ROOT/Makefiles with
	$GNUSTEP_MAKEFILES.  Replace Libraries with Library/Libraries.
	Replace Headers with Library/Headers.

2003-03-01  Fred Kiefer <FredKiefer@gmx.de>

	* Source/winlib/Win32FontInfo.m
	* Source/xlib/GSXftFontInfo.m
	* Source/xlib/XGFont.m
	In [setupAttributes] removed setting of fontDictionary values.
	* Source/xdps/AFMFileFontInfo.m
	Create the fontDictionary in [_setFontInfo].

2003-04-27 Richard Frith-Macdonald <rfm@gnu.org>

	* Tools/xpbs.m: ([xSendData:format:items:type:to:]) Fix bug
	calculating offset into data buffer.  Prevent crashing and
	provision of garbage data.

2003-04-10 12:12  Alexander Malmberg <alexander@malmberg.org>

	* Source/x11/XWindowBuffer.m (-dealloc): Don't explicitly set the
	X window's background pixmap back to None.

2003-04-02 14:04  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ARTContext.m, Source/art/blit.h: Clean up includes.

	* Source/art/blit.m (plusd_aa): Fix calculation of alpha.

2003-03-29 19:13  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ARTContext.m, Source/art/blit.h, Source/art/blit.m,
	Source/art/ftfont.h, Source/art/ftfont.m: Implement rendering of
	text to buffers with destination alpha. Change the subpixel
	font rendering to override the glyph operator since it's the one
	actually being used.

2003-03-25  Adam Fedor  <fedor@gnu.org>

	* Source/xlib/GSXftFontInfo.m: Protect 'id' when including
	fontconfig/fontconfig.h (suggestion from Pete French).

2003-03-26 00:24  Alexander Malmberg <alexander@malmberg.org>

	* Source/x11/XWindowBuffer.m (-dealloc): Free the shared memory
	pixmap (if one was allocated).

	* Source/art/composite.m: When checking whether the overlap handling
	should be used, compare windows, not gstates.

2003-03-22  Willem Rein Oudshoorn  <woudshoo@xs4all.nl>

	* Source/x11/XGServerWindow.m ([XGServer -orderwindow:::]):
	Use XWithDrawWindow instead of XUnmapWindow as suggested by
	Xlib programming manuals.

2003-03-03 20:05  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Remap glyph numbers from freetype so
	NSNullGlyph is never used.

2003-03-01  Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/GSXftFontInfo.m
	In [setupAttributes] moved the call to open the XFT font further
	to the back as Derek Zhou claims that this takes over the
	ownership of the pattern, which then results in strange behaviour.

2003-02-27  Fred Kiefer <FredKiefer@gmx.de>

	* configure.ac
	Check for FreeType 2 fontconfig.
	* configure
	* config.h.in
	Regenerated
	* Header/xlib/GSXftFontInfo.h
	Define font enumerator for fontconfig.
	* Source/xlib/XGContext.m
	Use new enumerator in anti-alias mode if available.
	* Source/xlib/GSXftFontInfo.m
	Added fontconfig specific code.
	Patch from Derek Zhou dzhou@chrontel.com with some adaption

2003-03-24  Adam Fedor  <fedor@gnu.org>

	* Version: 0.8.5

2003-03-11  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Only add libgdi32 for winlib

2003-03-08  Adam Fedor  <fedor@gnu.org>

	* Headers/x11/XGOpenGL.h: Standardize BOOL redefine to XWINDOWSBOOL.

2003-02-24  Adam Fedor  <fedor@gnu.org>

	* Version: 0.8.4

2003-02-20  Willem Rein Oudshoorn  <woudshoo@xs4all.nl>

	* Source/xlib/XGFont.m ([XGFontInfo -setupAttributes]): Use
	ascender and descender informaton of the X11 font instead of using
	maximum bounding box.

2003-02-19  Adam Fedor  <fedor@gnu.org>

	* Source/gsc/GSStreamContext.m (fpfloat): New function. Used everywhere
	to print a float regardless of current locale.

2003-02-17  Willem Rein Oudshoorn  <woudshoo@xs4all.nl>

	* Source/x11/XGDragView.m ([XGDragView -drawRect:]): use [self
	frame] instead of `rect'.  Fixes #101846.
	([XGDragView -_handleDrag:]): Fixed typo in comment
	([XGDragView -_handleEventDuringDragging:theEvent]): Removed old
	comment.

2003-02-16 Richard Frith-Macdonald <rfm@gnu.org>

	* Source/x11/XGDragView.m: Set drag window at NSPopUpMenuWindowLevel
	so that it lies above pretty much anything apart from screensaver.

2003-02-09  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m
	Removed implementation of image sliding. Corrected
	xgps_cursor_image compiler warning.
	* Header/x11/XGSlideView.h
	* Source/x11/XGSlideView.m
	Removed files as they are now in the front end.
	* Source/x11/GNUmakefile
	Removed XGSlideView.m

2003-02-10 18:44  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Implement -glyphIsEncoded:.
	(add_face): Avoid calling malloc(0).

2003-02-09  Adam Fedor  <fedor@gnu.org>

	* Source/gsc/GSStreamContext.m (-GSShowGlyphs::): Implement to use
	glyphshow if font gives back glyph names, otherwise use previous
	hack.

2003-02-09  Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSStreamContext.m
	[DPSconcat:] simplify the output for common cases.
	[GSShowGlyphs::] added hack implementation, so that some usefull
	output is still provided.

2003-02-08 21:10  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Add somewhat experimental -nameOfGlyph:
	method to try to get printing to work.

2003-02-06 Richard Frith-Macdonald <rfm@gnu.org>

	* Tools/gpbs.m (ihandler): Fix for mingw, which doesn't have kill()
	* Headers/winlib/WIN32FontInfo.h: New method to draw glyphs
	* Source/winlib/WIN32FontInfo.m: New method to draw glyphs
	* Source/winlib/WIN32GState.m: New method to draw glyphs

2003-02-02 22:00  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m (-initWithFontName:matrix:screenFont:): Use
	better guess for x-height value.

	* Source/x11/XGServerWindow.m: Use safer order of includes.

	* Source/xlib/GSXftFontInfo.m (-widthOfGlyphs:lenght:,
	-drawGlyphs:lenght:onDisplay:drawable:with:at:): Convert glyph
	buffers to 16-bit buffers that the Xft functions can handle.

	* Source/xlib/XGFont.m: Whitespace cleanups.

2003-01-31  Chris B. Vetter <chrisv@web4inc.com>

	* Tools/gpbs.m (-dealloc): Remove observer.
	(ihandler): Reset all signals and try to reraise original signal.
	(init): Set NSIG signals.
	(main): release server before exiting.

2003-02-02  Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/GSXftFontInfo.m
	Added glyph methods needed for new text system.

2003-01-31  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m
	Implemented [movewindow::] and [restrictWindow:toImage:].
	* Source/x11/XGBitmapImageRep.m
	Removed the xPixmap methods.
	* Source/x11/XGSlideView.m
	Use new display server methods to implement without X calls. This
	class can now be moved to frontend.
	* Source/x11/XGDragView.m
	Use new display server methods.

2003-01-31 22:33  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m (-_generateGlyphsForRun:at:): Implement
	handling of text attachments.

2003-01-27 18:10  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m: Clean up includes.
	(-initWithFontName:matrix:screenFont:):	Use absolute values of the
	matrix entries when checking if a screen font entry should be used.

2003-01-26 21:24  Alexander Malmberg <alexander@malmberg.org>

	* Source/xlib/GSXftFontInfo.m: Update with screen font changes in
	backend/gui interface.

2003-01-26 20:07  Alexander Malmberg <alexander@malmberg.org>

	* Source/x11/XWindowBuffer.m (-_exposeRect:): Round rectangle to
	expose outwards so all pixels intersected by the expose rectangle
	are actually exposed.

2003-01-26 20:04  Alexander Malmberg <alexander@malmberg.org>

	* Headers/xlib/XGPrivate.h, Source/art/ARTContext.m,
	Source/art/ARTGState.h, Source/art/composite.m, Source/art/ftfont.h,
	Source/art/ftfont.m, Source/art/image.m, Source/art/path.m,
	Source/winlib/WIN32FontInfo.m, Source/xdps/AFMFileFontInfo.m,
	Source/xlib/XGFont.m, Source/xlib/XGGState.m: Merge in
	text-system-branch.

2003-01-26 18:17  Alexander Malmberg <alexander@malmberg.org>

	* Source/xlib/XGFont.m: Make -GSShowGlyphs::'s helpers actually
	work.

2003-01-26 17:22  Alexander Malmberg <alexander@malmberg.org>

	* Headers/xlib/XGPrivate.h, Source/xlib/XGFont.m,
	Source/xlib/XGState.m: Implement basic version of -GSShowGlyphs::
	with a few helpers.

2003-01-26 17:15  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ftfont.m (-advancementForGlyph:): Return correct
	metrics for both screen and printer fonts.

2002-11-26 12:58  Alexander Malmberg <alexander@malmberg.org>

	* Source/winlib/WIN32FontInfo.m, Source/xdps/AFMFileFontInfo.m,
	Source/xlib/XGFont.m, Source/xlib/XftFontInfo.m: Update with new
	screen font changes in backend/gui interface.

	Source/art/ftfont.m: Update with new interface. Add basic support
	of screen fonts.

2002-11-24 00:40  Alexander Malmberg <alexander@malmberg.org>

	* Source/x11/XWindowBuffer (-_exposeRect:): Round coordinates
	explicitly to avoid truncating problems.

2002-11-24 00:35  Alexander Malmberg <alexander@malmberg.org>

	* Source/art/ARTContext.m, Source/art/ftfont.h, Source/art/ftfont.m:
	Implement the glyph generation backend methods. Implement the
	GSShowGlyphs operator. Handle glyphs properly in FTFontInfo.

2003-01-23  Adam Fedor  <fedor@gnu.org>

	* Headers/xlib/GSXftFontInfo.h: Renamed from XftFontInfo
	* Source/xlib/GSXftFontInfo.m: Idem.
	* Source/xlib/GNUmakefile: Update for change.
	* Source/xlib/XGContext.m: Idem.

2003-01-23  Adam Fedor  <fedor@gnu.org>

	* Documentation/Back: Some documentation.

2003-01-20  Adam Fedor  <fedor@gnu.org>

	* Source/gsc/GSStreamContext.m (-GSSetCTM:): Implement.
	(-GSConcatCTM:): Idem.
	(-NSDrawBitmap:::::::::::): Don't flip images in a flipped view.
	Correct scaling of images.

Tue Jan 21 02:08:05 2003  Alexander Malmberg <alexander@malmberg.org>

	* Source/xlib/XGFont.m ([XGFontInfo -dealloc]): Fixed memory leak:
	use XFreeFont(), not XUnloadFont().

2003-01-14  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Check for GLX_RGBA_TYPE in glx.h

2003-01-14  Fred Kiefer <FredKiefer@gmx.de>

	* Source/xdps/NSDPSContext.m
	Removed unneeded method [xrContext]. Moved context access into
	[createDPSContext] and call [XGServer xrContextForScreen:] instead
	of [XGServer xrContext].

2002-12-31  Adam Fedor  <fedor@gnu.org>

	* Headers/x11/XGOpenGL.h: Redefine BOOL to avoid name collision

2002-11-27  Frederic De Jaeger <dejaeger@free.fr>

	* configure.ac: add the flag --disable-glx.
	* configure: regenerated

2002-11-24  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XIMInputServer.m
	In [lookupStringForEvent:window:keysym:] autorelease the string,
	so it gets freed late on.

2002-11-21  Adam Fedor  <fedor@gnu.org>

	* Version: 0.8.3

	* Source/gsc/GSStreamContext.m (-GSSendBezierPath:): Add back and
	implement.

	* Source/x11/XGServerEvent.m ([XGServer
	-receivedEvent:type:extra:forMode:] (ClientMessage:TAKE_FOCUS)):
	minor correction.

2002-11-21  Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSGState.m
	Implemented [GSSendBezierPath:].
	* Source/gsc/GSStreamContext.m
	Removed (empty) implementation of [GSSendBezierPath:].
	* Source/x11/XGServer.m
	Added #ifdef around include of XGOpenGL.h.

2002-11-16  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGGLContext.m (-initWithFormat:shareContext:): Remove
	assert.

	* Source/x11/XGServerWindow.m ([XGServer -setinputstate::]): Return
	if window is NULL.

2002-11-16  Gregory John Casamento <greg_casamento@yahoo.com>

	* Headers/x11/XGOpenGL.h: Added define to avoid collision of
	parameters named "id" in some versions of the OpenGL headers
	with the Objective-C type "id".   This was causing build of
	back to fail.

2002-11-15  Frederic De Jaeger <dejaeger@free.fr>

	* Source/x11/XGGLFormat.m, Source/x11/XGGLContext.m
	  Headers/x11/XGOpenGL.h: New files.
	* Source/x11/Makefile: Updated.
	* configure.ac: add a test for GLX
	* Source/x11/XGServer.m (glContextClass,
          glPixelFormatClass): Implement.

2002-11-08  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerEvent.m ([XGServer
	-receivedEvent:type:extra:forMode:] (ClientMessage:TAKE_FOCUS)):
	Reassert focus and/or send FocusIn event in all cases.

2002-10-29  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerWindow.m ([XGServer -_checkWindowManager]):
	Make sure not to dereference possible NULL pointer.

2002-10-28  Adam Fedor  <fedor@gnu.org>

	* Source/gsc/GSStreamContext.m (-DPSsetalpha:): Use GSsetalpha
	as defined in frontend, for printers that don't support setalpha.

2002-10-27  Adam Fedor  <fedor@gnu.org>

	* Tools/font_cacher.m: Add @end (Reported by Caba Conti
	<520040438669-0001@t-online.de>).

2002-10-21  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XIMInputServer.m
	([XIMInputServer -initWithDelegate:display:name:]): Use
	GSEncodingFromLocale.
	* Source/xlib/XGFont.m ([XGFontInfo -setupAttributes]): Idem.
	* Source/xlib/XftFontInfo.m ([XftFontInfo -setupAttributes]): Idem.

2002-10-19  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerEvent.m ([XGServer
	-receivedEvent:type:extra:forMode:] (ClientMessage:TAKE_FOCUS)):
	Don't set desiredFocusWindow to 0.
	([XGServer
	-receivedEvent:type:extra:forMode:] (FocusOut): Hack: if focus
	went nowhere, don't deactivate app.

2002-10-18  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerEvent.m ([XGServer
	-receivedEvent:type:extra:forMode:] (ClientMessage:TAKE_FOCUS)):
	Only send event if we don't have a key window.

2002-10-15 01:37  Alexander Malmberg  <alexander@malmberg.org>

	* Tools/GNUmakefile: Use BUILD_SERVER to decide whether to build
	X specific parts of gpbs or not.

2002-10-13  Adam Fedor  <fedor@gnu.org>

	* Version: 0.8.2.
	* Documentation/news.texi: Update.

Fri Oct 11 00:47:04 2002  Nicola Pero  <n.pero@mi.flashnet.it>

	* Source/xlib/XGFont.m ([XGFontInfo -setupAttributes]): Return NO
	if the font can't be loaded.  (Patch by Georg Fleischmann
	<georg@vhf.de>).

2002-10-10  Adam Fedor  <fedor@gnu.org>

	* GNUmakefile.postamble: Only install back.make if building
	as a library.

2002-10-10  Fred Kiefer <FredKiefer@gmx.de>

	* Source/xlib/XGGState.m
	DPSsetdash::: now accepts an empty dash pattern, signaling a reset
	to a solid line.

2002-10-08  Adam Fedor  <fedor@gnu.org>

	* Update for front-end passing colorspaces and fonts
	in overridable way.
	* Headers/gsc/GSGStateOps.h: Update changed methods.
	* Source/art/ARTContext.m: Font ivar is now a GSFontInfo
	class, so use 'font' instead of '[font fontInfo]'.
	* Source/gsc/GSContext.m (-GSSetFont): Idem.
	(-GSSetFillColorspace:): Implement.
	(-GSSetStrokeColorspace:): Idem.
	(-GSSetFillColor:): Idem.
	(-GSSetStrokeColor:): Idem.
	* Source/gsc/GSGState.m: Update font ivar handling.
	* Source/gsc/GSStreamContext.m: Idem.
	* Source/winlib/WIN32GState.m: Idem.
	* Source/xlib/XGGState.m: Idem.

	* Window focus fixes
	* Source/x11/XGServerEvent.m ([XGServer
	-receivedEvent:type:extra:forMode:](ClientMessage/TAKE_FOCUS)):
	Use given window as focus window, not one under mouse.
	* Source/x11/XGServerWindow.m ([XGServer -setinputfocus:]): Don't
	reset focus if we already requested it on this window.

2002-09-28 22:04  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ftfont.m: Add .font package handling again.

2002-09-28 17:30  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ftfont.m (load_font_configuration): Handle the
	'Family' key.

2002-09-26 16:08  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ftfont.m: Implement handling of the 'ScreenFonts' key
	in .nfont packages.

2002-09-25 22:39  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ftfont.m: Rework font configuration code to handle
	the updated (and rather different) .nfont package format.

2002-09-24 14:38  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ftfont.m: Use GSFontAntiAlias defaults value to decide
	whether	antialiasing should be enabled in the default rendering
	hints.

2002-09-24 13:22  Alexander Malmberg  <alexander@malmberg.org>

	* Source/x11/XWindowBuffer.m (+windowBufferForWindow:depthInfo:):
	Detect and handle errors properly. Only use shared memory for
	reasonably large windows.

	(-needsAlpha): Make data isn't NULL before trying to do anything.

2002-09-23 19:30  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ftfont.m (-initWithFontName:matrix:): Retain
	familyName correctly.

2002-09-21 12:14  Alexander Malmberg  <alexander@malmberg.org>

	* Headers/x11/XWindowBuffer.h, Source/x11/XWindowBuffer.m
	(+windowBufferForWindow:depthInfo:): If possible, create a shared
	pixmap from the image data and set it as the background of the
	window.

2002-09-20 18:36  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/path.m (clip_svp_callback): Use correct x coordinate
	for final span.

	(-_clip_add_svp:): Place the last entry at the correct place
	in clip_index.

2002-09-20 18:05  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/path.m (clip_svp_callback, -_clip_add_svp:): Update
	the clipping bounding box.

2002-09-19  Adam Fedor  <fedor@gnu.org>

	* Source/win32/WIN32Server.m ([WIN -setbackgroundcolor::]): New.
	* Source/x11/XGServerWindow.m ([XGServer -_createBuffer:]): Remove
	setting background pixmap.
	([XGServer -setbackgroundcolor::]): New

	* Source/xlib/XGGState.m
	(-_compositeGState:sourcefromRect:fromRecttoPoint:toPointop:opfraction):
	Convert destination point not rect.
	(-DPSimage:matrix:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:bitsPerPixel:bytesPerRow:isPlanar:hasAlpha:colorSpaceName:data):
	Remove flipping.

2002-09-19 00:33  Alexander Malmberg  <alexander@malmberg.org>

	* Header/x11/XGInputServer.h, Source/x11/XIMInputServer.m: Track
	all created XIC:s and destroy them explicitly.

2002-09-18 19:59  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/blit.h, Source/art/blit.m, Source/art/composite.m:
	Implement -dissolveGState:fromRect:toPoint:delta:.

2002-09-18 00:36  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/image.m (-DPSimage:::::::::::): Treat input as
	pre-multiplied in the common case to (really) match xlib/.

2002-09-16 16:43  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ftfont.m (add_face): Change default rendering hints.

2002-09-16 16:36  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTGState.h, Source/art/ARTContext.m,
	Source/art/image.m, Source/art/composite.m, Source/art/path.m:
	Handle NSBackingStoreNonretained.

2002-09-14 13:39  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ftfont.m: Keep track of the family name in FTFaceInfo
	so FTFontInfo can set it correctly.

2002-09-14 13:03  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ftfont.m: Add support for some simple rendering hints
	in .nfont packages.

2002-09-12 02:29  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/image.m (_image_get_color_rgb_8,
	_image_get_color_rgb_cmyk_gray): Fix clamping of y.

2002-09-10 22:11  Alexander Malmberg  <alexander@malmberg.org>

	* Headers/x11/XWindowBuffer.h: Add more documentation.

2002-09-10 21:36  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTWindowBuffer.h, Source/art/ARTWindowBuffer.m,
	Source/x11/XWindowBuffer.m, Headers/x11/XWindowBuffer.h: Rename
	ARTWindowBuffer to XWindowBuffer and move it to x11/ so other
	backends can use it. Update many files in Source/art/.

2002-09-10 17:35  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/composite.m: Implement handling of tranformations and
	clipping.

2002-09-08  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerWindow.m ([XGServer
	-_XWinFrameToOSWinFrame:for:]): New.
	([XGServer -_addExposedRectangle::]): Convert rect to OS coords.
	([XGServer -_processExposedRectangles:]): Invalidate exposed
	rects in view. (patch from Frederic De Jaeger).

2002-09-06  Adam Fedor  <fedor@gnu.org>

	* Source/gsc/GSContext.m (-initWithContextInfo:): Fix
	for GSStreamContext subclass.
	* Source/GSStreamGState.m: New file.
	* Source/GSStreamContext.m: Make a subclass of GSContext.
	Call superclass implementation where appropriate.

	* Source/GSStreamContext.m: Fix for 'show'ing parenthesis
	characters (patch from Stefan Urbanek).

2002-09-01  Adam Fedor  <fedor@gnu.org>

	* Version: 0.8.1

2002-09-01 12:58  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTContext.m ([ARTGState -GSCurrentDevice:::]): Check
	for NULL pointers before setting values.

2002-08-31 19:54  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/path.m (DPSrectfill::::): Calculate alpha pointer
	correctly when clipped.

	* Source/art/composite.m (-compositeGState:fromRect:toPoint:op:):
	Fix detection of horizontal-only overlap (order==2), and handling
	it in the general case.

	* Source/blit.m: Whitespace cleanups.

2002-08-31 15:52  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/image.m: Implement clipping of images using the
	clipping spans.

2002-08-31 14:40  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTContext.m, Source/art/ARTGState.h, Source/art/path.m:
	Store clipping path as a set of spans instead of as an svp. Build
	spans from DPSclip and DPSeoclip, and use it when clipping (only
	implemented for paths, so far).

2002-08-30 15:42  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/blit.h, Source/art/blit.m, Source/art/path.m: Move
	svp rendering code to path.m.

2002-08-30 01:29  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/GNUmakefile, Source/art/ARTContext.m, Source/art/path.m:
	Move remaining path handling code to path.m. Reformat.

2002-08-30 00:33  Alexander Malmberg  <alexander@malmberg.org>

	* Headers/gsc/GSGStateOps.h, Source/art/ARTContext.m: Remove
	ARTGState's own path handling and have it use GSGState's again.

2002-08-28  Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSGState.m
	New method [currentPoint], gets used in [DPScurrentpoint::].
	Corrected [DPSarc:::::] and [DPSarcn:::::] to draw the arc in user
	space and transfrom it afterwards and implemented  [DPSarct:::::].

2002-08-28 18:55  Alexander Malmberg  <alexander@malmberg.org>

	* Source/x11/XGBitmapImageRep.m, Source/xlib/XGBitmapImageRep.m,
	Source/x11/GNUmakefile, Source/xlib/GNUmakefile: Move
	XGBitmapImageRep.m from xlib/ to x11/.

	* Source/art/ARTContext.m: Remove the copy of the XGBitmapImageRep
	code.

	* Source/art/blit.m: Add missing include of NSDebug.h.

2002-08-28 16:01  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/blit.m (artcontext_setup_draw_info): Change NSLog to
	NSDebugLLog.

2002-08-28 13:29  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ftfont.m: Make the filters used in subpixel rendering
	configurable.

2002-08-28 00:34  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/blit.m: Do basic gamma correction when rendering
	text.

2002-08-27 12:10  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/: Fix copyright notices.

2002-08-27 11:58  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ftfont.m: Add experimental subpixel text renderer.

	* Source/art/blit.h, Source/art/blit.m: Add render_blit_subpixel
	function, used in subpixel rendering.

2002-08-27 10:23  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTContext.m, Source/art/composite.m,
	Source/art/GNUmakefile: Move compositing code to its own file.
	Reformat.
	(-_composite_func::::::): Handle the plusl_oo case correctly.
	(-compositerect:op:): Handle inline alpha in the general case.

2002-08-26 16:36  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/image.m: Assume that input isn't premultiplied in
	all cases (to match -xlib behavior, for now). Reformat to fit
	coding standards better.

2002-08-26 15:59  Alexander Malmberg  <alexander@malmberg.org>

	* Headers/art/ARTContext.h, Source/art/ARTContext.m,
	Source/art/ARTWindowBuffer.m, Source/art/GNUmakefile,
	Source/art/blit.h, Source/art/ARTGState.h, Source/art/image.m: Move
	image handling (-DPSimage...) to its own file. Add handling of
	arbitrary transformations, arbitrary bits/samples, bits/pixel, etc.,
	planar data, and gray and cmyk colorspaces.

2002-08-26 01:09  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/blit.m: Reformat to fit coding standards better.

2002-08-26 00:33  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTContext.m (-DPSimage:::::::::::): Assume input is
	pre-multiplied.

2002-08-25 21:41  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTContext.m (-_composite_func::::::): Implement
	special optimized handling of transparent source.

2002-08-25 20:48  Alexander Malmberg  <alexander@malmberg.org>

	* Headers/gsc/GSGState.h, Headers/gsc/gscolors.h,
	Source/art/ARTContext.m, Source/gsc/GSGState.m, Source/gsc/gscolors.c,
	Source/winlib/WIN32GState.m, Source/xlib/XGGState.m: Optimize color
	handling by passing around pointers to device_color_t structures
	(instead of the structures themselves).

2002-08-23 01:54  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTWindowBuffer.m (+artWindowBufferForWindow:): Mark
	the segment for destruction after X has attached to it.

2002-08-23 01:44  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTContext.m: Implement handling of non-rectangle
	clipping paths. Use it when rendering paths (but not for other
	operators yet).

2002-08-22 02:34  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTContext.m: (-DPSrectclip::::): Fix rounding when
	converting to pixel coordinates.

2002-08-21 20:27  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTContext.m, Source/art/ARTWindowBuffer.h,
	Source/art/ARTWindowBuffer.m, Source/art/GNUmakefile: Renamed the
	WinImage class to ARTWindowBuffer and moved it to its own file.

2002-08-21 14:52  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/blit.h, Source/art/blit.m, Source/art/ftfont.h,
	Source/art/ftfont.m: Reformat to fit coding standards better.

2002-08-21 13:50  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTContext.m: Move common code from _fill and DPSstroke
	to convert the current path to an ArtVpath to a new method. Update
	callers.

	(-compositerect:op:): Create alpha buffer for NSCompositeCopy
	if the current color isn't completely opaque.

2002-08-21  Alexander Malmberg  <alexander@malmberg.org>

	* Source/art/ARTContext.m: ([WinImage -_exposeRect:]) Guard against
	invalid coordinates to (hopefully) fix the problem with windows
	turning all white and BadValue warnings appearing.

2002-08-20  Alexander Malmberg <alexander@malmberg.org>

	* Headers/art/, Source/art/: Add back-art, a backend based on
	libart and freetype.

2002-08-15  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Add NetBSD header/ldflag support (Patch from
	Peter Cooper). Cleanup freebsd support.

2002-08-06  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerEvent.m ([XGServer
	-receivedEvent:type:extra:forMode:]): Add special gotShmCompletion
	call for libart backend.

2002-08-02  Adam Fedor  <fedor@gnu.org>

	* Merge from 0.8.0 into main branch.

2002-08-01  Adam Fedor  <fedor@gnu.org>

	* Version: 0.8.0

	* configure.ac: Check for usleep.
	* Source/x11/XGServerWindow.m ([XGServer -windowdevice:]):
	Use alternate if no usleep.

2002-07-28  Adam Fedor  <fedor@gnu.org>

	* Source/xlib/XGBitmap.m (_pixmap_combine_alpha): Use
	interger arithmatic. (Patch from Jeff Teunissen)

2002-07-19  Adam Fedor  <fedor@gnu.org>

	* Source/xlib/XGGeometry.m (clipXRectsForCopying): Shift rect
	origin to account for clipping.
	* Source/xlib/XGGState.m (-setAlphaColor:): Correct colorspace
	of alpha color.

2002-07-17  Adam Fedor  <fedor@gnu.org>

	* Version: 0.7.9

2002-07-14  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XIMInputServer.m (-ximCreateIC:): Don't set
	FocusWindow attrib. Causes a segfault at XCloseDisplay..

2002-07-13  Adam Fedor  <fedor@gnu.org>

	* Source/xlib/XGBitmap.m (_pixmap_combine_alpha): Fix and
	cleanup alpha blending (Rescale by alpha)
	(_bitmap_combine_alpha): Idem. (Patch from Jeff Teunissen).

2002-06-28  Adam Fedor  <fedor@gnu.org>

	* Source/xlib/XGFont.m ([XGFontInfo -xCharStructForGlyph:glyph]):
	Fix variable typo - using wrong index to glyph (patch from
	stoyan@hologr.com).

2002-06-24  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerWindow.m ([XGServer -windowdevice:]): Use
	usleep instead of loop to wait for resize (rewritten
	patch from georg@vhf.de).

Sat Jun 22 14:28:28 2002  Nicola Pero  <n.pero@mi.flashnet.it>

	* Source/gsc/GSGState.m ([-DPScurrentpoint::]): Use -invert, not
	-inverse, to invert an affine transform.

Sat Jun 22 14:24:20 2002  Nicola Pero  <n.pero@mi.flashnet.it>

	* Source/gsc/GSContext.m
	([-NSDrawBitmap:rect:pixelsWide:pixelsHigh:
	bitsPerSample:samplesPerPixel:bitsPerPixel:bytesPerRow:
	isPlanar:hasAlpha:colorSpaceName:data]): Use scaleXBy:yBy: rather
	than scaleBy::.
	* Source/gsc/GSGState.m ([-DPSscale::]): Idem.

2002-06-20  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServer.m (_parse_display_name): New.
	([XGServer -_initXContext]): Use it.

2002-06-15  Alexander Malmberg <alexander@malmberg.org>

	* configure.ac, configure: Use libart2-config and freetype-config
	to get libs and cflags for libart and freetype. Updated configure.
	* Source/gsc/GSGState.m (-DPSinitgraphics): Set alpha _before_
	calling -setColor:state:.

2002-06-10  Adam Fedor  <fedor@gnu.org>

	* Version 0.7.8


2002-06-09  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Set WIN32 and WINLIB only on mingw32 systems.

2002-06-08  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/winlib/WIN32FontInfo.h
	Added ivar for font handle.
	* Source/winlib/WIN32FontInfo.m
	Implemented most of the code to support different fonts.

2002-06-08  Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSGState.m
	Coorected [DPSrectfill::::], [DPSrectstroke::::] and
	[DPSrectclip::::] not to change the path.
	* Source/winlib/WIN32GState.m
	[DPSrectstroke::::] same correction.

2002-06-04  Fred Kiefer <FredKiefer@gmx.de>

	* Source/gsc/GSGState.m
	Added default implementation for [DPSrectfill::::],
	[DPSrectstroke::::] and [DPSrectclip::::].
	* Header/winlib/WIN32GState.h
	Added ivar to store old clip region.
	* Source/winlib/WIN32GState.m
	[_paintPath:], [DPSrectclip::::], [DPSinitclip], [setStyle:]
	and [restoreStyle:]: Rewrote the whole clipping code.
	Added [deepen] and [dealloc] for consistency.
	Simplified [DPSrectstroke::::].

2002-06-03  Adam Fedor  <fedor@gnu.org>

	* Source/win32/WIN32Server.m (-beep): Implement
	* Source/winlib/WIN32Context.m (-NSBeep): Remove.

	* Source/x11/XGServer.m (-beep): Implement.
	* Source/xlib/XGContext.m (-NSBeep): Remove.

2002-06-02  Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m
	Treat NSBackingStoreRetained the same as NSBackingStoreBuffered,
	just as the X backends do.
	* Source/winlib/WIN32GState.m
	Reimplemented creation of bitmaps. This should now work for all
	bitmaps with >16 bits per pixel. The bitmaps that are still missing
	are due to clipping problems, as can be seen by switching clipping off.

2002-05-12  Adam Fedor  <fedor@gnu.org>

	* Source/gsc/GSGState.m (-DPSsetalpha:): Call setColor:state:.
	Clamp value to 0<x<1
	(-DPSsetcmykcolor::::): Idem.
	(-DPSsetgray:):Idem.
	(-DPSsethsbcolor:::):Idem.
	(-DPSsetrgbcolor:::):Idem.
	(-GSSetFontSize:): Use given size.
	(-initWithDrawContext:): Call DPSinitgraphics
	(-DPSinitgraphics): Init all our graphics state.
	* Source/gsc/gscolors.c (gsHSBToRGB): Fix for h==1.
	(gsColorToCMYK): Implement.
	(gsColorToHSB): Idem. (Patches and suggestions from
	alexander@malmberg.org, rearranged a little).

	* Source/xlib/XGFontManager.m (load_cache): Use NSBundle to find
	font_cacher.

	* Source/xlib/XGGState.m (GSSetFont:) Rename from setFont.
	(-DPSinitgraphics): Call super.
	* Source/winlib/WIN32GState.m (-DPSinitgraphics): Call super.

	* Tools/GNUmakefile: Build font_cacher if BUILD_GRAPHICS=xlib

2002-05-11  Richard Frith-Macdonald <rfm@gnu.org>

	* Source/Source/xlib/XGFont.m: ([-xCharStructForGlyph:]) use newer
	GSGFromUnicode() API.

2002-05-09  Adam Fedor  <fedor@gnu.org>

	* Headers/gsc/GSGState.h: Add color and text ivars.
	* Headers/winlib/WIN32GState.h: Idem.
	* Headers/xlib/XGGState.h: Idem.

	* Source/gsc/GSContext.m: Implement font/text methods.
	* Source/gsc/GSGState.m (-setColor:state:) Implement
	Implement color DPS and GS ops to use it.
	Implement text/font ops.

	* Source/winlib/WIN32GState.m (-setColor:state:) Implement.
	Remove color ops (now in GSGState)

	* Source/xlib/XGGState.m (-setColor:state:) Implement.
	(-setAlphaColor:) New.
	Remove color ops (now in GSGState)

2002-05-07  Adam Fedor  <fedor@gnu.org>

	* Source/gsc/GSStreamContext.m (-GSSetFont:): Don't flip
	the font for a flipped view.

2002-05-06  Adam Fedor  <fedor@gnu.org>

	* configure.ac (BUILD_SERVER): Set to predefined define
	* Source/GSBackend.m: Use it.

2002-05-05  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Simplify backend selection using --enable-server
	and --enable-graphics. Add --with-library-flags and
	--with-include-flags for adding additonal flags. Revert last
	change to XShm.h test. Add check for art libraries.
	* Source/GNUmakefile: Conform to new configure output
	* Source/GSBackend.m: Idem.
	* Headers/x11/wraster.h: Idem.
	* Source/x11/XIMInputServer.m: Correct define for HAVE_UTF8

	* GNUmakefile.postamble (after-distclean): Remove config.h
	* Source/gsc/GSContext.m (-dealloc): Destroy gstate.
	* Source/x11/XGServerWindow.m([XGServer
	-_addExposedRectangle::]): Use current context class
	([XGServer -flushwindowrect::]): Idem. (patches from
	alexander@malmberg.org).

2002-05-04  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Improved check for XShm.h
	* Headers/x11/wraster.h: Use HAVE_X11_EXTENSIONS_XSHM_H
	* Source/x11/XIMInputServer.m: Fix #if for USE_XIM (patch from
	alexander@malmberg.org)
	* Source/xlib/XGContext.m: Idem for HAVE_XFT

2002-05-03  Adam Fedor  <fedor@gnu.org>

	* GNUmakefile.postamble: Remove '/' in
	$(INSTALL_ROOT_DIR)/$(GNUSTEP_MAKEFILES) so Windows won't
	complain.

2002-05-02  Adam Fedor  <fedor@gnu.org>

	* configure.ac: Updated to autoconf 2.53 from configure.in
	* configure, config.h.in: Regenerate.
	* acconfig.h: Remove

2002-05-01  Adam Fedor  <fedor@gnu.org>

	* config.make.in: Add newline at end - causes Solaris sed to barf.

2002-04-30  Adam Fedor  <fedor@gnu.org>

	* Version: 0.7.7
	* Documentation/news.texi: Update
	* NEWS: Regenerate.

2002-04-27  Ludovic Marcotte <ludovic@Sophos.ca>

	* Source/xlib/XGFontManager.m: Added a RETAIN call to the
	allFontNames ivar in -enumerateFontsAndFamilies since we would
	reference a dealloc'ed object after this method call.

2002-04-27  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/win32/WIN32Server.h
	* Headers/winlib/WIN32GState.h
	* Source/win32/WIN32Server.m
	* Source/winlib/WIN32GState.m
	Made sure only resources allocated by our code will ever be freed.

2002-04-26  Adam Fedor  <fedor@gnu.org>

	* acconfig.h: Define HAVE_UTF8
	* config.h.in: Regen.

2002-04-24  Adam Fedor  <fedor@gnu.org>

	* configure.in: Don't enable wraster support if --with-wraster=none.
	Print error if no backend server or graphics configured.

2002-04-23  Adam Fedor  <fedor@gnu.org>

	* Headers/x11/XGServer.h: Rework to handle multiple screens.
	* Headers/xlib/XGContext.h: Simplify.

	* Source/win32/WIN32Server.m (-mouseLocationOnScreen:window:):
	Implement.

	* Source/x11/XGServer.m: Rework to handle multiple screens. New
	XScreenContext class.
	(-initXContext): Use it.
	(-_screenContextForScreen:): Implement.
	(-xrContextForScreen:): Idem.
	(-drawMechanismForScreen:): Idem.
	(-xDisplayRootWindowForScreen:): Idem.
	(-xColorFromColor:forScreen:): Idem.
	* Source/x11/XGServerEvent.m (-mouseLocationOnScreen:window:):
	Implement.
	* Source/x11/XGServerWindow.m (-window::::): Use screen arg.
	(_blankCursor): Use default screen for drawable (?).
	(imagecursor::::::): Idem.

	* Source/xlib/XGBitmapImageRep.m: Update for new server interface.
	* Source/xlib/XGGState.m: Idem.

2002-04-22  Georg Fleischmann

	* back/Source/xlib/XGGState.m
	[XGGState DPSsetlinewidth:]: scale line width.

2002-04-23  Fred Kiefer <FredKiefer@gmx.de>

	* Source/win32/WIN32Server.m
	[window::::] corrected and simplified the last change.

2002-04-22  Adam Fedor  <fedor@gnu.org>

	* configure.in: Check for gdi32.

	* Source/win32/WIN32Server.m (window::::): Update for new interface -
	frame is frame rect, not content rect.

	* Source/x11/XGServer.m (-_initXContext): Look for
	display attributes in server_info.
	* Source/x11/XGServerWindow.m (-window::::): Update for new interface.

2002-04-21  Fred Kiefer <FredKiefer@gmx.de>

	* Headers/win32
	* Headers/win32/WIN32Server.h
	* Headers/win32/WIN32Geometry.h
	* Source/win32
	* Source/win32/GNUmakefile
	* Source/win32/GNUmakefile.preamble
	* Source/win32/WIN32Server.m
	New directories and files with Display Server for MS Windows.
	* Headers/winlib
	* Headers/winlib/WIN32Context.h
	* Headers/winlib/WIN32GState.h
	* Headers/winlib/WIN32FontEnumerator.h
	* Headers/winlib/WIN32FontInfo.h
	* Source/winlib
	* Source/winlib/GNUmakefile
	* Source/winlib/GNUmakefile.preamble
	* Source/winlib/WIN32Context.m
	* Source/winlib/WIN32GState.m
	* Source/winlib/WIN32FontEnumerator.m
	* Source/winlib/WIN32FontInfo.m
	New directories and files for drawing on MS Windows.
	* configure
	Add library gdi32 for winlib back end.
	* Source/GSBackend.m
	Corrected to handle the winlib/win32 backend correctly.
	* Tools/gpbs.m
	Ifdefed some signals that are not defined in mingw and use spawn
	instead of fork on mingw.

2002-04-19  Richard Frith-Macdonald <rfm@gnu.org>

        * Tools/gpbs.m: If given -NSHost specification for the current host,
        ignore it and use the standard name.

2002-04-15  Gregory John Casamento <greg_casamento@yahoo.com>
	* configure.in: Added check to determine if libXft contains
	XftDrawStringUtf8 which is used to draw unicode strings.

2002-04-15  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerWindow.m ([XGServer
	-_addExposedRectangle::]): Use current server class
	([XGServer -flushwindowrect::]): Idem.
	(Suggestion by alexander@malmberg.org)

	* Source/x11/XIMInputServer.m (-initWithDelegate:display:name:):
	Use defaultCStringEncoding if UTF8 doesn't work.
	(Patch from stoyan@on.com.ua).

2002-04-14  Adam Fedor  <fedor@gnu.org>

	* Headers/x11/XGServerWindow.h: Add graphics driver protocol
	information.
	* Source/x11/XGServerWindow.m (_createBuffer:): Use it.
	(-termwindow:): Idem.
	([XGServer -windowbacking::win]): Idem.
	([XGServer -windowdevice:]): Idem.
	([XGServer -_addExposedRectangle::]): Idem.
	([XGServer -flushwindowrect::]): Idem.

	* Source/xlib/XGBitmapImageRep.m: Use new GSCurrentDevice.
	* Source/xlib/XGContext.m: Idem.
	* Headers/xlib/XGGState.h: Use window device, not window number.
	* Source/xlib/XGGState.m: Idem.

Thu Apr 11 22:24:01 2002  Nicola Pero  <n.pero@mi.flashnet.it>

	* Source/x11/XGServerEvent.m: Added missing includes.
	* Source/x11/XGServerWindow.m: Idem.
	* Source/x11/XGDragView.m: Idem.
	2
2002-04-11  Richard Frith-Macdonald  <rfm@gnu.org>

	* Tools/gpbs.m: Fixed bug in argument parsing ... was objecting to
	-NSHost!

2002-04-10  Adam Fedor  <fedor@gnu.org>

	* configure.in: Don't set X paths if no X found. Only set
	/usr/local paths for freebsd

	* Source/gsc/GSContext.m: Remove currentgstate, gstate
	* Source/x11/XGServerWindow.m (windowbacking:) Implement.

2002-04-06  Adam Fedor  <fedor@gnu.org>

	* configure.in: Renable XIM by default again.

	* Source/gsc/GSStreamContext.m (GSSetFont:): Implement.
	Fix up show methods and fix spaces in method names.

	* Source/xlib/XGContext.m (-initWithContextInfo:): Return
	alternate (PS) context when indicated.

	* Source/xlib/xrtools.c: Simplify color conversion routines.
	* Source/xlib/XGGState.m: Use them

2002-04-03  Adam Fedor  <fedor@gnu.org>

	* Source/GNUmakefile.preamble: Fix LIB_DIRS and
	LIBRARIES_DEPEND_UPON for compiling as a library.

2002-04-02  Adam Fedor  <fedor@gnu.org>

	* Source/gsc/GSContext.m (-GSDefineGState): Use new def - also
	creates a copy of the gstate.
	(-GSReplaceGState): Replace with copy of current gstate.

	* configure.in (--with-name): Configure the name of the backend
	* back.make.in: Idem.
	* config.make.in: Idem.
	* Source/GNUmakefile: Idem.
	* Documentation/install.texi: Document.

	* Source/GNUmakefile.preamble: Missing include.

	* Source/x11/XGServerWindow.m: Fix slideImage method name.

2002-04-01  Adam Fedor  <fedor@gnu.org>

	* Source/x11/XGServerWindow.m ([XGServer -_setupRootWindow]): Read
	GSAppOwnsMiniwindow default.
	([XGServer -appOwnsMiniwindow]): Use it.
	([XGServer -miniwindow:): Idem.

	* Source/gsc/GSContext.m (-GSSendBezierPath:): Implement
	(-GSRectClipList::): Likewise.
	(-GSRectFillList::): Likewise.
	(-GSCurrentCTM): Likewise.
	(-GSSetCTM:): Likewise.
	(-GSConcatCTM:): Likewise.
	* Source/xlib/XGGState.m ([XGGState -DPSsetmiterlimit:]): Implement
	to do nothing.

	* Source/x11/GNUmakefile: Remove unsed draw.c, gradient.c, misc.c

2002-03-31  Fred Kiefer <FredKiefer@gmx.de>

	* Source/x11/XGServerWindow.m
	In [window:::] set the initial hints for a window, as
	setWindowHintsForStyle() would otherwise never be called.

2002-03-30  Adam Fedor  <fedor@gnu.org>

	* Source/GNUmakefile.preamble: Add graphic includes, -Wall
	* Source/gsc/GNUmakefile.preamble: Likewise.
	* Source/x11/GNUmakefile.preamble: Likewise.
	* Source/xlib/GNUmakefile.preamble: Likewise.

	* Tools/font_cacher.m: Fix include.

2002-03-29  Adam Fedor  <fedor@gnu.org>

	* Source/gsc/GSGState.m (-GSSendBezierPath:): Append path in all
	cases.
	(- GSRectFillList): Implement.
	* Source/x11/XGServerWindow.m:
	([XGServer -windowbounds:]): Don't get screen bounds.

	* Source/x11/*.c: Fix includes.

2002-03-27  Adam Fedor  <fedor@gnu.org>

	* Source/x11/GNUmakefile: Get headers from right place.
	* Source/xlib/GNUmakefile: Remove invalid header.

	* Source/x11/XGServerWindow.m (-window:::): Change method to
	match frontend (including setting of style).

2002-03-27  Adam Fedor  <fedor@gnu.org>

	* Version: Initial version (most code extracted from xgps).
